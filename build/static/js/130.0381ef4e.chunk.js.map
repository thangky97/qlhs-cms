{"version":3,"sources":["views/apps/cms/about/edit/content/SectionContent1.js","views/apps/cms/about/edit/content/SectionContent2.js","views/apps/cms/about/edit/content/SectionContent3.js","views/apps/cms/about/edit/content/SectionContentAbout.js","views/apps/cms/about/edit/content/SectionContentPartner.js","views/apps/cms/about/edit/content/SectionContentProduct.js","views/apps/cms/about/edit/content/SectionContentService.js","views/apps/cms/about/edit/content/SectionSystem.js","views/apps/cms/about/edit/About.js","views/apps/cms/about/edit/index.js","constants/validate.js","@core/components/extensions-header/index.js","views/apps/cms/about/store/action/index.js"],"names":["SectionContent1","_ref","aboutData","setValueContentIntro1","_useState","useState","EditorState","createEmpty","_useState2","_slicedToArray","valueContent","setValueContent","_useState3","_useState4","intro","setIntro","useEffect","content","section_intro_1","JSON","parse","embed_content1","title_content1","content_content1","htmlToDraftUtil","_jsxs","id","children","_jsx","className","ExtensionsHeader","title","FormattedMessage","Row","Col","xs","md","FormGroup","Label","for","Input","name","defaultValue","value","onChange","e","_objectSpread","target","Editor","stripPastedStyles","defaultEditorState","editorState","toolbarClassName","editorClassName","wrapperClassName","onEditorStateChange","data","memo","SectionContent2","setValueContentIntro2","_useForm","useForm","register","handleSubmit","section_intro_2","header_content2","title_content2","content_content2","image_content2","_useState5","_useState6","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","imageBase64","urlImage","fileImage","newData","_fileImage$type","wrap","_context","prev","next","draftToHtml","convertToRaw","getCurrentContent","convertFileToBase64","files","sent","document","getElementById","src","replace","split","imageData","imageFormat","type","uploadImage","then","res","stop","_x","apply","arguments","Media","left","object","height","width","Button","Ripple","tag","color","hidden","accept","SectionContent3","setValueContentIntro3Content1","setValueContentIntro3Content2","setValueContentIntro3Content3","valueContent1","setValueContent1","valueContent2","setValueContent2","valueContent3","setValueContent3","_useState7","_useState8","section_intro_3","header_content3","short_header_content3","title1_content3","title2_content3","title3_content3","content1_content3","content2_content3","content3_content3","image1_content3","image2_content3","image3_content3","_Fragment","defautlValue","SectionContentAbout","setValueContentAbout","section_about","header_about","title_about","content_about","image_about","SectionContentPartner","setValueContentPartner","section_partner","title_partner","content_partner","SectionContentProduct","setValueContentProduct","section_product","title_product","content_product","SectionContentService","dataServiceEditor","setDataServiceEditor","dataService","setDataService","section_service","header_service","short_header_service","length","initialEditorStates","map","item","content_service","forEach","index","_dataService$index","dataEditor","_toConsumableArray","image_service","_x2","i","Fragment","concat","title_service","feature_service","onClick","listTemp","splice","deleteForm","outline","sm","push","Plus","size","SectionSystem","section_system","link_facebook","link_zalo","link_instagram","link_youtube","bank","bank_number","bank_user","injectIntl","selected","idAbout","intl","errors","history","useHistory","disable","setDisable","valueContentIntro1","valueContentIntro2","valueContentIntro3Content1","_useState9","_useState10","valueContentIntro3Content2","_useState11","_useState12","valueContentIntro3Content3","_useState13","_useState14","valueContentProduct","_useState15","_useState16","valueContentAbout","_useState17","_useState18","valueContentPartner","_useState19","_useState20","store","useSelector","state","abouts","lang","common","language","_useState21","_useState22","setAboutData","AboutOptions","validateOptions","dispatch","useDispatch","clonePost","useCallback","parentId","chillrenId","elems","querySelectorAll","elem","clone","cloneNode","after","titles","innerHTML","deleteElement","remove","_store$err","err","statusCode","getDataIntro","introId","posts","formElem","getAttribute","onSubmit","values","contentIntro1","contentIntro2","contentIntro3Content1","contentIntro3Content2","contentIntro3Content3","contentProduct","contentAubout","contentServiceList","contentPartner","intro1","intro2","intro3","introProduct","introService","introAbout","introPartner","introSystem","isObjEmpty","_item$content_service","update","parseInt","company_name","founded","officer","advisor","address_1","address_2","stringify","undefined","privacy_policy","faq","terms_of_use","status","body","username","Form","enctype","style","textAlign","disabled","goBack","placeholder","innerRef","about","onBlur","about2","trim","classNames","message","addressl1","addressl2","AboutEdit","activeTab","setActiveTab","setIdAbout","init","request","send","method","api","LIST_ABOUT","path","query","response","_response$data","getById","Card","CardBody","Nav","pills","NavItem","NavLink","active","User","TabContent","TabPane","tabId","AboutTab","Alert","maxLength","PartnerOptions","required","DocumentOptions","label","validate","REGEX","TITLE","test","sort_order","pattern","short_content","DiscountOptions","discount","min","time","PriceOptions","price","Document_Link_Options","document_link","CategoryOptions","code","minLength","message_content","BranchOptions","code_branch","email","EMAIL","phone","addpress","EditBranchOptions","Document_course","EditCategoryOptions","EditDocumentOptions","author","EditQuizOptions","contenttext","answer","TermOptions","KindOptions","EditKindOptions","TranscriptOptions","score","EditTranscriptOptions","student_code","CertificateOptions","UserCertificateOptions","EditCertificateOptions","provider","position","ProductOptions","product_name","NAME2","alidate","SPACE","vat","max","number_trial","categoryId","service_price_local","PRICE","service_price_cloud","VersionOptions","version","infor","StaffOptions","last_name","NAME","first_name","USERNAME","password","EditStaffOptions","UserOptions","PASSWORD","EditUserOptions","CityOptions","CountryOptions","phone_code","PHONE_CODE","StudentOptions","date","CloudOptions","props","link","href","rel","subTitle","getData","params","Service","_response$data2","totalPages","total","abrupt","add","_callee2","_context2","CREATE_ABOUT","catch","_ref3","_callee3","_context3","GET_ABOUT","console","log","_x3","_ref4","_callee4","getState","_context4","UPDATE_ABOUT","_x4","_x5"],"mappings":"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","file":"static/js/130.0381ef4e.chunk.js","sourcesContent":["import ExtensionsHeader from \"@components/extensions-header\";\r\nimport { useEffect } from \"react\";\r\nimport { useState, memo } from \"react\";\r\nimport { EditorState } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { htmlToDraftUtil } from \"../../../../../../utility/Utils\";\r\nimport { Col, FormGroup, Input, Label, Row } from \"reactstrap\";\r\n\r\nconst SectionContent1 = ({ aboutData, setValueContentIntro1 }) => {\r\n  const [valueContent, setValueContent] = useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n  const [intro, setIntro] = useState();\r\n  useEffect(() => {\r\n    const content =\r\n      aboutData?.section_intro_1 && JSON.parse(aboutData?.section_intro_1);\r\n\r\n    content &&\r\n      setIntro({\r\n        embed_content1: content.embed_content1,\r\n        title_content1: content.title_content1,\r\n        content_content1: content.content_content1,\r\n      });\r\n    setValueContent(htmlToDraftUtil(content?.content_content1 || \" \"));\r\n    setValueContentIntro1(htmlToDraftUtil(content?.content_content1 || \" \"));\r\n  }, [aboutData]);\r\n  return (\r\n    <div id=\"section-content-1\">\r\n      <div className=\"text-center\">\r\n        <ExtensionsHeader title={<FormattedMessage id=\"section content 1\" />} />\r\n      </div>\r\n      <div className=\"post\" id={\"section-content-1-\"}>\r\n        <Row>\r\n          <Col xs={12} md={6}>\r\n            <FormGroup>\r\n              <Label for=\"embed\">\r\n                <FormattedMessage id=\"youtube_url\" />\r\n              </Label>\r\n              <Input\r\n                name=\"embed_content1\"\r\n                defaultValue={intro?.embed_content1}\r\n                value={intro?.embed_content1 || \" \"}\r\n                onChange={(e) => {\r\n                  setIntro({ ...intro, embed_content1: e.target.value });\r\n                }}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col xs={12} md={6}>\r\n            <FormGroup>\r\n              <Label for=\"about\">\r\n                <FormattedMessage id=\"intro_title\" />\r\n              </Label>\r\n              <Input\r\n                name=\"title_content1\"\r\n                defaultValue={intro?.title_content1}\r\n                value={intro?.title_content1 || \" \"}\r\n                onChange={(e) => {\r\n                  setIntro({ ...intro, title_content1: e.target.value });\r\n                }}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col xs={12} md={12}>\r\n            <FormGroup>\r\n              <Label for=\"about\">\r\n                <FormattedMessage id=\"intro_content\" />\r\n              </Label>\r\n              {/*               \r\n              <Input name=\"content_content1\" type=\"textarea\" defaultValue={intro?.content_content1} value={intro?.content_content1||\" \"}   onChange={(e)=>{\r\n                setIntro({...intro,content_content1:e.target.value})\r\n              }} /> */}\r\n              <Editor\r\n                // toolbar={{\r\n                //   options: [\"inline\", \"textAlign\"],\r\n                //   inline: {\r\n                //     inDropdown: false,\r\n                //     options: [\"bold\", \"italic\", \"underline\"],\r\n                //   },\r\n                // }}\r\n                stripPastedStyles={true}\r\n                defaultEditorState={valueContent}\r\n                editorState={valueContent}\r\n                toolbarClassName=\"toolbarClassName\"\r\n                editorClassName=\"editorClassName \"\r\n                wrapperClassName=\"wrapperClassName\"\r\n                onEditorStateChange={(data) => {\r\n                  setValueContent(data);\r\n                  setValueContentIntro1(data);\r\n                }}\r\n                name=\"content_content2\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default memo(SectionContent1);\r\n","import ExtensionsHeader from \"@components/extensions-header\";\r\nimport { convertToRaw, EditorState } from \"draft-js\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { useState, memo } from \"react\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Media,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport {\r\n  convertFileToBase64,\r\n  uploadImage,\r\n} from \"../../../../../../helper/common\";\r\nimport { htmlToDraftUtil } from \"../../../../../../utility/Utils\";\r\n\r\nconst SectionContent2 = ({ aboutData, setValueContentIntro2 }) => {\r\n  const [intro, setIntro] = useState();\r\n  const [editorState, setEditorState] = useState(null);\r\n  const { register, handleSubmit } = useForm();\r\n  useEffect(() => {\r\n    const content =\r\n      aboutData?.section_intro_2 && JSON.parse(aboutData?.section_intro_2);\r\n    content &&\r\n      setIntro({\r\n        header_content2: content.header_content2,\r\n        title_content2: content.title_content2,\r\n        content_content2: \"hello section 2\",\r\n        image_content2: content.image_content2,\r\n      });\r\n    setValueContent(htmlToDraftUtil(content?.content_content2 || \" \"));\r\n    setValueContentIntro2(htmlToDraftUtil(content?.content_content2 || \" \"));\r\n  }, [aboutData]);\r\n\r\n  const [valueContent, setValueContent] = useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n\r\n  const onChange = async (e) => {\r\n    const content_content2 = draftToHtml(\r\n      convertToRaw(valueContent.getCurrentContent())\r\n    );\r\n\r\n    const imageBase64 = await convertFileToBase64(e.target.files[0]);\r\n    document.getElementById(\"section-content-2-image-\" + e.target.name).src =\r\n      imageBase64;\r\n\r\n    let urlImage = \"\";\r\n    let fileImage = e.target.files[0];\r\n    if (imageBase64) {\r\n      const newData = imageBase64.replace(/,/gi, \"\").split(\"base64\");\r\n      if (newData[1]) {\r\n        const data = {\r\n          imageData: newData[1],\r\n          imageFormat: fileImage?.type?.split(\"/\")[1] || \"png\",\r\n        };\r\n        await uploadImage(data, fileImage).then((res) => {\r\n          urlImage = res?.data;\r\n        });\r\n      } else {\r\n        urlImage = imageBase64;\r\n      }\r\n    }\r\n    document.getElementById(\"section-content-2-image-\" + e.target.name).value =\r\n      urlImage;\r\n  };\r\n\r\n  return (\r\n    <div id=\"section-content-2\">\r\n      <div className=\"text-center\">\r\n        <ExtensionsHeader title={<FormattedMessage id=\"section content 2\" />} />\r\n      </div>\r\n      <div className=\"post\" id={\"section-content-2-\" + (0 + 1)}>\r\n        <Row>\r\n          <Col xs={12} md={6}>\r\n            <FormGroup>\r\n              <Label for=\"header\">\r\n                <FormattedMessage id=\"header_solution\" />{\" \"}\r\n              </Label>\r\n              <Input\r\n                name=\"header_content2\"\r\n                defaultValue={intro?.header_content2}\r\n                value={intro?.header_content2 || \" \"}\r\n                onChange={(e) => {\r\n                  setIntro({ ...intro, header_content2: e.target.value });\r\n                }}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col xs={12} md={6}>\r\n            <FormGroup>\r\n              <Label for=\"title\">\r\n                <FormattedMessage id=\"solution_title\" />{\" \"}\r\n              </Label>\r\n              <Input\r\n                name=\"title_content2\"\r\n                defaultValue={intro?.title_content2}\r\n                value={intro?.title_content2 || \" \"}\r\n                onChange={(e) => {\r\n                  setIntro({ ...intro, title_content2: e.target.value });\r\n                }}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col xs={12} md={12}>\r\n            {/* <Form onSubmit={handleSubmit(onSubmit)}> */}\r\n            <FormGroup>\r\n              <Label for=\"content\">\r\n                <FormattedMessage id=\"solution_content\" />{\" \"}\r\n              </Label>\r\n              {/* <Input\r\n                type=\"textarea\"\r\n                name=\"content_content2\"\r\n                defaultValue={intro?.content_content2}\r\n                value={intro?.content_content2 || \" \"}\r\n                onChange={(e) => {\r\n                  setIntro({ ...intro, content_content2: e.target.value });\r\n                }}\r\n              /> */}\r\n\r\n              <Editor\r\n                // toolbar={{\r\n                //   options: [\"inline\", \"textAlign\"],\r\n                //   inline: {\r\n                //     inDropdown: false,\r\n                //     options: [\"bold\", \"italic\", \"underline\"],\r\n                //   },\r\n                // }}\r\n                stripPastedStyles={true}\r\n                defaultEditorState={valueContent}\r\n                editorState={valueContent}\r\n                toolbarClassName=\"toolbarClassName\"\r\n                editorClassName=\"editorClassName \"\r\n                wrapperClassName=\"wrapperClassName\"\r\n                onEditorStateChange={(data) => {\r\n                  setValueContent(data);\r\n                  setValueContentIntro2(data);\r\n                }}\r\n                name=\"content_content2\"\r\n              />\r\n            </FormGroup>\r\n            {/* </Form> */}\r\n          </Col>\r\n          <Col xs={12} md={6}>\r\n            <FormGroup>\r\n              <Label for=\"Image\">\r\n                <FormattedMessage id=\"link_image\" />\r\n              </Label>\r\n              <Row className=\"aligns-end p-1\">\r\n                <Media className=\"mr-25\" left>\r\n                  <Media\r\n                    object\r\n                    name=\"image_content2\"\r\n                    id={\"section-content-2-image-\" + (0 + 1)}\r\n                    className=\"rounded mr-50 objectFit-contain image\r\n            form-control\"\r\n                    src={intro?.image_content2 || null}\r\n                    value={intro?.image_content2 || null}\r\n                    height=\"100\"\r\n                    width=\"100\"\r\n                  />\r\n                </Media>{\" \"}\r\n                <Row className=\"flex-column px-1\">\r\n                  <Button.Ripple tag={Label} className=\"mt-1\" color=\"primary\">\r\n                    <FormattedMessage id=\"Upload\" />\r\n                    <Input\r\n                      type=\"file\"\r\n                      onChange={(e) => {\r\n                        onChange(e);\r\n                      }}\r\n                      hidden\r\n                      name={0 + 1}\r\n                      accept=\"image/*\"\r\n                    />\r\n                  </Button.Ripple>\r\n                </Row>\r\n              </Row>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default memo(SectionContent2);\r\n","import ExtensionsHeader from \"@components/extensions-header\";\r\nimport { useEffect } from \"react\";\r\nimport { useState, memo } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport { Button, Col, FormGroup, Input, Label, Media, Row } from \"reactstrap\";\r\nimport {\r\n  convertFileToBase64,\r\n  uploadImage,\r\n} from \"../../../../../../helper/common\";\r\nimport { EditorState } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { htmlToDraftUtil } from \"../../../../../../utility/Utils\";\r\n\r\nconst SectionContent3 = ({\r\n  aboutData,\r\n  setValueContentIntro3Content1,\r\n  setValueContentIntro3Content2,\r\n  setValueContentIntro3Content3,\r\n}) => {\r\n  const [valueContent1, setValueContent1] = useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n  const [valueContent2, setValueContent2] = useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n  const [valueContent3, setValueContent3] = useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n\r\n  const [intro, setIntro] = useState();\r\n  useEffect(() => {\r\n    const content =\r\n      aboutData?.section_intro_3 && JSON.parse(aboutData?.section_intro_3);\r\n    content &&\r\n      setIntro({\r\n        header_content3: content.header_content3,\r\n        short_header_content3: content.short_header_content3,\r\n        title1_content3: content.title1_content3,\r\n        title2_content3: content.title2_content3,\r\n        title3_content3: content.title3_content3,\r\n        content1_content3: content.content1_content3,\r\n        content2_content3: content.content2_content3,\r\n        content3_content3: content.content3_content3,\r\n        image1_content3: content.image1_content3,\r\n        image2_content3: content.image2_content3,\r\n        image3_content3: content.image3_content3,\r\n      });\r\n    setValueContent1(htmlToDraftUtil(content?.content1_content3 || \" \"));\r\n    setValueContent2(htmlToDraftUtil(content?.content2_content3 || \" \"));\r\n    setValueContent3(htmlToDraftUtil(content?.content3_content3 || \" \"));\r\n\r\n    setValueContentIntro3Content1(\r\n      htmlToDraftUtil(content?.content1_content3 || \" \")\r\n    );\r\n    setValueContentIntro3Content2(\r\n      htmlToDraftUtil(content?.content2_content3 || \" \")\r\n    );\r\n    setValueContentIntro3Content3(\r\n      htmlToDraftUtil(content?.content3_content3 || \" \")\r\n    );\r\n  }, [aboutData]);\r\n\r\n  const onChange = async (e) => {\r\n    const imageBase64 = await convertFileToBase64(e.target.files[0]);\r\n    document.getElementById(\"section-content-3-image-\" + e.target.name).src =\r\n      imageBase64;\r\n\r\n    let urlImage = \"\";\r\n    let fileImage = e.target.files[0];\r\n    if (imageBase64) {\r\n      const newData = imageBase64.replace(/,/gi, \"\").split(\"base64\");\r\n      if (newData[1]) {\r\n        const data = {\r\n          imageData: newData[1],\r\n          imageFormat: fileImage?.type?.split(\"/\")[1] || \"png\",\r\n        };\r\n        await uploadImage(data, fileImage).then((res) => {\r\n          urlImage = res?.data;\r\n        });\r\n      } else {\r\n        urlImage = imageBase64;\r\n      }\r\n    }\r\n\r\n    document.getElementById(\"section-content-3-image-\" + e.target.name).value =\r\n      urlImage;\r\n  };\r\n  return (\r\n    <div id=\"section-content-3\">\r\n      <div className=\"text-center\">\r\n        <ExtensionsHeader title={<FormattedMessage id=\"section benefit\" />} />\r\n      </div>\r\n      <>\r\n        <div className=\"post\" id={\"section-content-3-\" + (1 + 1)}>\r\n          <Row>\r\n            <Col xs={12} md={6}>\r\n              <FormGroup>\r\n                <Label for=\"header\">\r\n                  <FormattedMessage id=\"header_benefit\" />{\" \"}\r\n                </Label>\r\n                <Input\r\n                  name=\"header_content3\"\r\n                  defautlValue={intro?.header_content3}\r\n                  value={intro?.header_content3 || \" \"}\r\n                  onChange={(e) => {\r\n                    setIntro({ ...intro, header_content3: e.target.value });\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              <FormGroup>\r\n                <Label for=\"short_header\">\r\n                  <FormattedMessage id=\"benefit_title\" />{\" \"}\r\n                </Label>\r\n                <Input\r\n                  name=\"short_header_content3\"\r\n                  defautlValue={intro?.short_header_content3}\r\n                  value={intro?.short_header_content3 || \" \"}\r\n                  onChange={(e) => {\r\n                    setIntro({\r\n                      ...intro,\r\n                      short_header_content3: e.target.value,\r\n                    });\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} md={12}>\r\n              <h5 className=\"my-2 title\">\r\n                <FormattedMessage id=\"post 1\" />\r\n              </h5>\r\n            </Col>\r\n            <Col xs={12} md={12}>\r\n              <FormGroup>\r\n                <Label for=\"title\">\r\n                  <FormattedMessage id=\"post1_title\" />{\" \"}\r\n                </Label>\r\n                <Input\r\n                  name=\"title1_content3\"\r\n                  defautlValue={intro?.title1_content3}\r\n                  value={intro?.title1_content3 || \" \"}\r\n                  onChange={(e) => {\r\n                    setIntro({ ...intro, title1_content3: e.target.value });\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} md={12}>\r\n              <FormGroup>\r\n                <Label for=\"content\">\r\n                  <FormattedMessage id=\"post1_content\" />{\" \"}\r\n                </Label>\r\n                {/* <Input\r\n                type=\"textarea\"\r\n\r\n                name=\"content1_content3\"\r\n                defautlValue={intro?.content1_content3}\r\n                value={intro?.content1_content3||\" \"}   onChange={(e)=>{\r\n                  setIntro({...intro,content1_content3:e.target.value})\r\n                }}\r\n              /> */}\r\n                <Editor\r\n                  // toolbar={{\r\n                  //   options: [\"inline\", \"textAlign\"],\r\n                  //   inline: {\r\n                  //     inDropdown: false,\r\n                  //     options: [\"bold\", \"italic\", \"underline\"],\r\n                  //   },\r\n                  // }}\r\n                  stripPastedStyles={true}\r\n                  defaultEditorState={valueContent1}\r\n                  editorState={valueContent1}\r\n                  toolbarClassName=\"toolbarClassName\"\r\n                  editorClassName=\"editorClassName\"\r\n                  wrapperClassName=\"wrapperClassName\"\r\n                  onEditorStateChange={(data) => {\r\n                    setValueContent1(data);\r\n                    setValueContentIntro3Content1(data);\r\n                  }}\r\n                  name=\"content1_content3\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              <FormGroup>\r\n                <Label for=\"Image\">\r\n                  <FormattedMessage id=\"link_image\" />\r\n                </Label>\r\n                <Row className=\"aligns-end p-1\">\r\n                  <Media className=\"mr-25\" left>\r\n                    <Media\r\n                      object\r\n                      name=\"image1_content3\"\r\n                      id={\"section-content-3-image-\" + (1 + 1)}\r\n                      className=\"rounded mr-50 objectFit-contain image\r\n            form-control\"\r\n                      src={intro?.image1_content3 || null}\r\n                      value={intro?.image1_content3 || null}\r\n                      height=\"100\"\r\n                      width=\"100\"\r\n                    />\r\n                  </Media>{\" \"}\r\n                  <Row className=\"flex-column px-1\">\r\n                    <Button.Ripple tag={Label} className=\"mt-1\" color=\"primary\">\r\n                      <FormattedMessage id=\"Upload\" />\r\n                      <Input\r\n                        type=\"file\"\r\n                        onChange={(e) => {\r\n                          onChange(e);\r\n                        }}\r\n                        hidden\r\n                        name={1 + 1}\r\n                        accept=\"image/*\"\r\n                      />\r\n                    </Button.Ripple>\r\n                  </Row>\r\n                </Row>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} md={12}>\r\n              <h5 className=\"my-2 title\">\r\n                <FormattedMessage id=\"post 2\" />\r\n              </h5>\r\n            </Col>\r\n            <Col xs={12} md={12}>\r\n              <FormGroup>\r\n                <Label for=\"title\">\r\n                  <FormattedMessage id=\"post2_title\" />{\" \"}\r\n                </Label>\r\n                <Input\r\n                  name=\"title2_content3\"\r\n                  defautlValue={intro?.title2_content3}\r\n                  value={intro?.title2_content3 || \" \"}\r\n                  onChange={(e) => {\r\n                    setIntro({ ...intro, title2_content3: e.target.value });\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} md={12}>\r\n              <FormGroup>\r\n                <Label for=\"content\">\r\n                  <FormattedMessage id=\"post2_content\" />{\" \"}\r\n                </Label>\r\n                {/* <Input\r\n                name=\"content2_content3\"\r\n                type=\"textarea\"\r\n                defautlValue={intro?.content2_content3}\r\n                value={intro?.content2_content3||\" \"}   onChange={(e)=>{\r\n                  setIntro({...intro,content2_content3:e.target.value})\r\n                }}\r\n              /> */}\r\n\r\n                <Editor\r\n                  // toolbar={{\r\n                  //   options: [\"inline\", \"textAlign\"],\r\n                  //   inline: {\r\n                  //     inDropdown: false,\r\n                  //     options: [\"bold\", \"italic\", \"underline\"],\r\n                  //   },\r\n                  // }}\r\n                  stripPastedStyles={true}\r\n                  defaultEditorState={valueContent2}\r\n                  editorState={valueContent2}\r\n                  toolbarClassName=\"toolbarClassName\"\r\n                  editorClassName=\"editorClassName\"\r\n                  wrapperClassName=\"wrapperClassName\"\r\n                  onEditorStateChange={(data) => {\r\n                    setValueContent2(data);\r\n                    setValueContentIntro3Content2(data);\r\n                  }}\r\n                  name=\"content2_content3\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              <FormGroup>\r\n                <Label for=\"Image\">\r\n                  <FormattedMessage id=\"link_image\" />\r\n                </Label>\r\n                <Row className=\"aligns-end p-1\">\r\n                  <Media className=\"mr-25\" left>\r\n                    <Media\r\n                      object\r\n                      name=\"image2_content3\"\r\n                      id={\"section-content-3-image-\" + (2 + 1)}\r\n                      className=\"rounded mr-50 objectFit-contain image\r\n            form-control\"\r\n                      src={intro?.image2_content3 || null}\r\n                      value={intro?.image2_content3 || null}\r\n                      height=\"100\"\r\n                      width=\"100\"\r\n                    />\r\n                  </Media>{\" \"}\r\n                  <Row className=\"flex-column px-1\">\r\n                    <Button.Ripple tag={Label} className=\"mt-1\" color=\"primary\">\r\n                      <FormattedMessage id=\"Upload\" />\r\n                      <Input\r\n                        type=\"file\"\r\n                        onChange={(e) => {\r\n                          onChange(e);\r\n                        }}\r\n                        hidden\r\n                        name={2 + 1}\r\n                        accept=\"image/*\"\r\n                      />\r\n                    </Button.Ripple>\r\n                  </Row>\r\n                </Row>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} md={12}>\r\n              <h5 className=\"my-2 title\">\r\n                <FormattedMessage id=\"post 3\" />\r\n              </h5>\r\n            </Col>\r\n            <Col xs={12} md={12}>\r\n              <FormGroup>\r\n                <Label for=\"title\">\r\n                  <FormattedMessage id=\"post3_title\" />{\" \"}\r\n                </Label>\r\n                <Input\r\n                  name=\"title3_content3\"\r\n                  defaultValue={intro?.title3_content3}\r\n                  value={intro?.title3_content3 || \" \"}\r\n                  onChange={(e) => {\r\n                    setIntro({ ...intro, title3_content3: e.target.value });\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} md={12}>\r\n              <FormGroup>\r\n                <Label for=\"content\">\r\n                  <FormattedMessage id=\"post3_content\" />{\" \"}\r\n                </Label>\r\n                {/* <Input\r\n                name=\"content3_content3\"\r\n                type=\"textarea\"\r\n                defaultValue={intro?.content3_content3}\r\n                value={intro?.content3_content3||\" \"}   onChange={(e)=>{\r\n                  setIntro({...intro,content3_content3:e.target.value})\r\n                }}\r\n              /> */}\r\n\r\n                <Editor\r\n                  // toolbar={{\r\n                  //   options: [\"inline\", \"textAlign\"],\r\n                  //   inline: {\r\n                  //     inDropdown: false,\r\n                  //     options: [\"bold\", \"italic\", \"underline\"],\r\n                  //   },\r\n                  // }}\r\n                  stripPastedStyles={true}\r\n                  defaultEditorState={valueContent3}\r\n                  editorState={valueContent3}\r\n                  toolbarClassName=\"toolbarClassName\"\r\n                  editorClassName=\"editorClassName\"\r\n                  wrapperClassName=\"wrapperClassName\"\r\n                  onEditorStateChange={(data) => {\r\n                    setValueContent3(data);\r\n                    setValueContentIntro3Content3(data);\r\n                  }}\r\n                  name=\"content3_content3\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              <FormGroup>\r\n                <Label for=\"Image\">\r\n                  <FormattedMessage id=\"link_image\" />\r\n                </Label>\r\n                <Row className=\"aligns-end p-1\">\r\n                  <Media className=\"mr-25\" left>\r\n                    <Media\r\n                      object\r\n                      name=\"image3_content3\"\r\n                      id={\"section-content-3-image-\" + (3 + 1)}\r\n                      className=\"rounded mr-50 objectFit-contain image\r\n            form-control\"\r\n                      src={intro?.image3_content3 || null}\r\n                      value={intro?.image3_content3 || null}\r\n                      height=\"100\"\r\n                      width=\"100\"\r\n                    />\r\n                  </Media>{\" \"}\r\n                  <Row className=\"flex-column px-1\">\r\n                    <Button.Ripple tag={Label} className=\"mt-1\" color=\"primary\">\r\n                      <FormattedMessage id=\"Upload\" />\r\n                      <Input\r\n                        type=\"file\"\r\n                        onChange={(e) => {\r\n                          onChange(e);\r\n                        }}\r\n                        hidden\r\n                        name={3 + 1}\r\n                        accept=\"image/*\"\r\n                      />\r\n                    </Button.Ripple>\r\n                  </Row>\r\n                </Row>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\nexport default memo(SectionContent3);\r\n","import ExtensionsHeader from \"@components/extensions-header\";\r\nimport { useEffect } from \"react\";\r\nimport { useState, memo } from \"react\";\r\n\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Button, Col, FormGroup, Input, Label, Media, Row } from \"reactstrap\";\r\nimport {\r\n  convertFileToBase64,\r\n  uploadImage,\r\n} from \"../../../../../../helper/common\";\r\nimport { EditorState } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { htmlToDraftUtil } from \"../../../../../../utility/Utils\";\r\n\r\nconst SectionContentAbout = ({ aboutData, setValueContentAbout }) => {\r\n  const [valueContent, setValueContent] = useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n  const [intro, setIntro] = useState();\r\n  useEffect(() => {\r\n    const content =\r\n      aboutData?.section_about && JSON.parse(aboutData?.section_about);\r\n\r\n    content &&\r\n      setIntro({\r\n        header_about: content.header_about,\r\n        title_about: content.title_about,\r\n        content_about: content.content_about,\r\n        image_about: content.image_about,\r\n      });\r\n    setValueContent(htmlToDraftUtil(content?.content_about || \" \"));\r\n    setValueContentAbout(htmlToDraftUtil(content?.content_about || \" \"));\r\n  }, [aboutData]);\r\n\r\n  const onChange = async (e) => {\r\n    const imageBase64 = await convertFileToBase64(e.target.files[0]);\r\n    document.getElementById(\r\n      \"section-content-about-image-\" + e.target.name\r\n    ).src = imageBase64;\r\n\r\n    let urlImage = \"\";\r\n    let fileImage = e.target.files[0];\r\n    if (imageBase64) {\r\n      const newData = imageBase64.replace(/,/gi, \"\").split(\"base64\");\r\n      if (newData[1]) {\r\n        const data = {\r\n          imageData: newData[1],\r\n          imageFormat: fileImage?.type?.split(\"/\")[1] || \"png\",\r\n        };\r\n        await uploadImage(data, fileImage).then((res) => {\r\n          urlImage = res?.data;\r\n        });\r\n      } else {\r\n        urlImage = imageBase64;\r\n      }\r\n    }\r\n    document.getElementById(\r\n      \"section-content-about-image-\" + e.target.name\r\n    ).value = urlImage;\r\n  };\r\n  return (\r\n    <div id=\"section-content-about\">\r\n      <div className=\"text-center\">\r\n        <ExtensionsHeader\r\n          title={<FormattedMessage id=\"section content about\" />}\r\n        />\r\n      </div>\r\n      <>\r\n        <div className=\"post\" id={\"section-content-about-\" + (4 + 1)}>\r\n          <Row>\r\n            <Col xs={12} md={6}>\r\n              <FormGroup>\r\n                <Label for=\"header\">\r\n                  <FormattedMessage id=\"header\" />{\" \"}\r\n                </Label>\r\n                <Input\r\n                  name=\"header_about\"\r\n                  defaultValue={intro?.header_about}\r\n                  value={intro?.header_about || \" \"}\r\n                  onChange={(e) => {\r\n                    setIntro({ ...intro, header_about: e.target.value });\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              <FormGroup>\r\n                <Label for=\"title\">\r\n                  <FormattedMessage id=\"Title\" />{\" \"}\r\n                </Label>\r\n                <Input\r\n                  name=\"title_about\"\r\n                  defaultValue={intro?.title_about}\r\n                  value={intro?.title_about || \" \"}\r\n                  onChange={(e) => {\r\n                    setIntro({ ...intro, title_about: e.target.value });\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} md={12}>\r\n              <FormGroup>\r\n                <Label for=\"content\">\r\n                  <FormattedMessage id=\"Content\" />{\" \"}\r\n                </Label>\r\n                <Editor\r\n                  // toolbar={{\r\n                  //   options: [\"inline\", \"textAlign\"],\r\n                  //   inline: {\r\n                  //     inDropdown: false,\r\n                  //     options: [\"bold\", \"italic\", \"underline\"],\r\n                  //   },\r\n                  // }}\r\n                  stripPastedStyles={true}\r\n                  defaultEditorState={valueContent}\r\n                  editorState={valueContent}\r\n                  toolbarClassName=\"toolbarClassName\"\r\n                  editorClassName=\"editorClassName\"\r\n                  wrapperClassName=\"wrapperClassName\"\r\n                  onEditorStateChange={(data) => {\r\n                    setValueContent(data);\r\n                    setValueContentAbout(data);\r\n                  }}\r\n                  name=\"content_about\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              <FormGroup>\r\n                <Label for=\"Image\">\r\n                  <FormattedMessage id=\"Logo\" />\r\n                </Label>\r\n                <Row className=\"aligns-end p-1\">\r\n                  <Media className=\"mr-25\" left>\r\n                    <Media\r\n                      object\r\n                      name=\"image_about\"\r\n                      id={\"section-content-about-image-\" + (4 + 1)}\r\n                      className=\"rounded mr-50 objectFit-contain image\r\n            form-control\"\r\n                      src={intro?.image_about || null}\r\n                      value={intro?.image_about || null}\r\n                      height=\"100\"\r\n                      width=\"100\"\r\n                    />\r\n                  </Media>{\" \"}\r\n                  <Row className=\"flex-column px-1\">\r\n                    <Button.Ripple tag={Label} className=\"mt-1\" color=\"primary\">\r\n                      <FormattedMessage id=\"Upload\" />\r\n                      <Input\r\n                        type=\"file\"\r\n                        onChange={(e) => {\r\n                          onChange(e);\r\n                        }}\r\n                        hidden\r\n                        name={4 + 1}\r\n                        accept=\"image/*\"\r\n                      />\r\n                    </Button.Ripple>\r\n                  </Row>\r\n                </Row>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\nexport default memo(SectionContentAbout);\r\n","import ExtensionsHeader from \"@components/extensions-header\";\r\nimport { useEffect } from \"react\";\r\nimport { useState, memo } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { FormGroup, Input, Label } from \"reactstrap\";\r\nimport { EditorState } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { htmlToDraftUtil } from \"../../../../../../utility/Utils\";\r\n\r\nconst SectionContentPartner = ({ aboutData, setValueContentPartner }) => {\r\n  const [valueContent, setValueContent] = useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n\r\n  const [intro, setIntro] = useState();\r\n  useEffect(() => {\r\n    const content =\r\n      aboutData?.section_partner && JSON.parse(aboutData?.section_partner);\r\n    content &&\r\n      setIntro({\r\n        title_partner: content.title_partner,\r\n        content_partner: content.content_partner,\r\n      });\r\n    setValueContent(htmlToDraftUtil(content?.content_partner || \" \"));\r\n    setValueContentPartner(htmlToDraftUtil(content?.content_partner || \" \"));\r\n  }, [aboutData]);\r\n\r\n  return (\r\n    <div id=\"section-content-partner\">\r\n      <div className=\"text-center\">\r\n        <ExtensionsHeader\r\n          title={<FormattedMessage id=\"section content partner\" />}\r\n        />\r\n      </div>\r\n      <>\r\n        <div className=\"post\" id={\"section-content-partner-\" + (0 + 1)}>\r\n          <FormGroup>\r\n            <Label for=\"title\">\r\n              <FormattedMessage id=\"Title\" />{\" \"}\r\n            </Label>\r\n            <Input\r\n              name=\"title_partner\"\r\n              defaultValue={intro?.title_partner}\r\n              value={intro?.title_partner || \" \"}\r\n              onChange={(e) => {\r\n                setIntro({ ...intro, title_partner: e.target.value });\r\n              }}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"content\">\r\n              <FormattedMessage id=\"Content\" />{\" \"}\r\n            </Label>\r\n            {/* <Input\r\n                name=\"content_partner\"\r\n                type=\"textarea\"\r\n                defaultValue={intro?.content_partner}\r\n                value={intro?.content_partner||\" \"}   onChange={(e)=>{\r\n                  setIntro({...intro,content_partner:e.target.value})\r\n                }}\r\n              /> */}\r\n\r\n            <Editor\r\n              // toolbar={{\r\n              //   options: [\"inline\", \"textAlign\"],\r\n              //   inline: {\r\n              //     inDropdown: false,\r\n              //     options: [\"bold\", \"italic\", \"underline\"],\r\n              //   },\r\n              // }}\r\n              stripPastedStyles={true}\r\n              defaultEditorState={valueContent}\r\n              editorState={valueContent}\r\n              toolbarClassName=\"toolbarClassName\"\r\n              editorClassName=\"editorClassName\"\r\n              wrapperClassName=\"wrapperClassName\"\r\n              onEditorStateChange={(data) => {\r\n                setValueContent(data);\r\n                setValueContentPartner(data);\r\n              }}\r\n              name=\"content_partner\"\r\n            />\r\n          </FormGroup>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\nexport default memo(SectionContentPartner);\r\n","import ExtensionsHeader from \"@components/extensions-header\";\r\nimport { useEffect } from \"react\";\r\nimport { useState, memo } from \"react\";\r\nimport { FormGroup, Input, Label } from \"reactstrap\";\r\nimport { EditorState } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { htmlToDraftUtil } from \"../../../../../../utility/Utils\";\r\n\r\nconst SectionContentProduct = ({ aboutData, setValueContentProduct }) => {\r\n  const [valueContent, setValueContent] = useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n  const [intro, setIntro] = useState();\r\n  useEffect(() => {\r\n    const content =\r\n      aboutData?.section_product && JSON.parse(aboutData?.section_product);\r\n\r\n    content &&\r\n      setIntro({\r\n        title_product: content.title_product,\r\n        content_product: content.content_product,\r\n      });\r\n    setValueContent(htmlToDraftUtil(content?.content_product || \" \"));\r\n    setValueContentProduct(htmlToDraftUtil(content?.content_product || \" \"));\r\n  }, [aboutData]);\r\n\r\n  return (\r\n    <div id=\"section-content-product\">\r\n      <div className=\"text-center\">\r\n        <ExtensionsHeader\r\n          title={<FormattedMessage id=\"section content product\" />}\r\n        />\r\n      </div>\r\n      <>\r\n        <div className=\"post\" id={\"section-content-product-\" + (0 + 1)}>\r\n          <FormGroup>\r\n            <Label for=\"title\">\r\n              <FormattedMessage id=\"Title\" />{\" \"}\r\n            </Label>\r\n            <Input\r\n              name=\"title_product\"\r\n              defautlValue={intro?.title_product}\r\n              value={intro?.title_product || \" \"}\r\n              onChange={(e) => {\r\n                setIntro({ ...intro, title_product: e.target.value });\r\n              }}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"content\">\r\n              <FormattedMessage id=\"Content\" />{\" \"}\r\n            </Label>\r\n            {/* <Input\r\n                name=\"content_product\"\r\n                type=\"textarea\"\r\n                defautlValue={intro?.content_product}\r\n                value={intro?.content_product||\" \"}   onChange={(e)=>{\r\n                  setIntro({...intro,content_product:e.target.value})\r\n                }}\r\n              /> */}\r\n            <Editor\r\n              // toolbar={{\r\n              //   options: [\"inline\", \"textAlign\"],\r\n              //   inline: {\r\n              //     inDropdown: false,\r\n              //     options: [\"bold\", \"italic\", \"underline\"],\r\n              //   },\r\n              // }}\r\n              stripPastedStyles={true}\r\n              defaultEditorState={valueContent}\r\n              editorState={valueContent}\r\n              toolbarClassName=\"toolbarClassName\"\r\n              editorClassName=\"editorClassName\"\r\n              wrapperClassName=\"wrapperClassName\"\r\n              onEditorStateChange={(data) => {\r\n                setValueContent(data);\r\n                setValueContentProduct(data);\r\n              }}\r\n              name=\"content_product\"\r\n            />\r\n          </FormGroup>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\nexport default memo(SectionContentProduct);\r\n","import ExtensionsHeader from \"@components/extensions-header\";\r\nimport { useEffect } from \"react\";\r\nimport { useState, memo, Fragment } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { X, Plus } from \"react-feather\";\r\n\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport {\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  Media,\r\n} from \"reactstrap\";\r\nimport { EditorState } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { htmlToDraftUtil } from \"../../../../../../utility/Utils\";\r\n\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport {\r\n  convertFileToBase64,\r\n  uploadImage,\r\n} from \"../../../../../../helper/common\";\r\n\r\nconst SectionContentService = ({\r\n  aboutData,\r\n  dataServiceEditor,\r\n  setDataServiceEditor,\r\n}) => {\r\n  const [intro, setIntro] = useState();\r\n  const [dataService, setDataService] = useState([]);\r\n\r\n  const increaseCount = () => {\r\n    let listTemp = [];\r\n    if (dataServiceEditor) {\r\n      listTemp = [...dataServiceEditor];\r\n    }\r\n\r\n    listTemp.push({\r\n      title_service: \"\",\r\n      content_service: htmlToDraftUtil(\"\"),\r\n      feature_service: \"\",\r\n      image_service: \"\",\r\n    });\r\n\r\n    setDataServiceEditor(listTemp);\r\n  };\r\n\r\n  const deleteForm = (index) => {\r\n    const listTemp = [...dataServiceEditor];\r\n    listTemp.splice(index, 1);\r\n    setDataServiceEditor(listTemp);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const content =\r\n      aboutData?.section_service && JSON.parse(aboutData?.section_service);\r\n\r\n    content &&\r\n      setIntro({\r\n        header_service: content.header_service,\r\n        short_header_service: content.short_header_service,\r\n        content_about: content.content_about,\r\n        image_about: content.image_about,\r\n      });\r\n\r\n    content && setDataService(content?.data);\r\n  }, [aboutData]);\r\n\r\n  useEffect(() => {\r\n    if (dataService?.length > 0) {\r\n      const initialEditorStates = dataService.map((item) => {\r\n        return {\r\n          ...item,\r\n          content_service: () => EditorState.createEmpty(),\r\n        };\r\n      });\r\n\r\n      initialEditorStates.forEach((item, index) => {\r\n        item.content_service = htmlToDraftUtil(\r\n          dataService[index]?.content_service || \"\"\r\n        );\r\n      });\r\n      setDataServiceEditor(initialEditorStates);\r\n    }\r\n  }, [dataService]);\r\n\r\n  const onChange = async (e, index) => {\r\n    const dataEditor = [...dataServiceEditor];\r\n\r\n    const imageBase64 = await convertFileToBase64(e.target.files[0]);\r\n\r\n    if (dataEditor[index]) {\r\n      dataEditor[index].image_service = imageBase64;\r\n    }\r\n    setDataServiceEditor(dataEditor);\r\n\r\n    let urlImage = \"\";\r\n    let fileImage = e.target.files[0];\r\n    if (imageBase64) {\r\n      const newData = imageBase64.replace(/,/gi, \"\").split(\"base64\");\r\n      if (newData[1]) {\r\n        const data = {\r\n          imageData: newData[1],\r\n          imageFormat: fileImage?.type?.split(\"/\")[1] || \"png\",\r\n        };\r\n        await uploadImage(data, fileImage).then((res) => {\r\n          urlImage = res?.data;\r\n        });\r\n      } else {\r\n        urlImage = imageBase64;\r\n      }\r\n    }\r\n    if (dataEditor[index]) {\r\n      dataEditor[index].image_service = urlImage || \"\";\r\n    }\r\n    setDataServiceEditor(dataEditor);\r\n  };\r\n\r\n  return (\r\n    <div id=\"section-content-service\">\r\n      <div className=\"text-center\">\r\n        <ExtensionsHeader\r\n          title={<FormattedMessage id=\"section content service\" />}\r\n        />\r\n      </div>\r\n      <>\r\n        <div className=\"post\" id={\"section-content-service-\" + (0 + 1)}>\r\n          <Row>\r\n            <Col xs={12} md={6}>\r\n              <FormGroup>\r\n                <Label for=\"header\">\r\n                  <FormattedMessage id=\"header\" />{\" \"}\r\n                </Label>\r\n                <Input\r\n                  name=\"header_service\"\r\n                  defautlValue={intro?.header_service}\r\n                  value={intro?.header_service || \" \"}\r\n                  onChange={(e) => {\r\n                    setIntro({ ...intro, header_service: e.target.value });\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              <FormGroup>\r\n                <Label for=\"short_header\">\r\n                  <FormattedMessage id=\"Title\" />{\" \"}\r\n                </Label>\r\n                <Input\r\n                  name=\"short_header_service\"\r\n                  defautlValue={intro?.short_header_service}\r\n                  value={intro?.short_header_service || \" \"}\r\n                  onChange={(e) => {\r\n                    setIntro({\r\n                      ...intro,\r\n                      short_header_service: e.target.value,\r\n                    });\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            {dataServiceEditor &&\r\n              dataServiceEditor?.length > 0 &&\r\n              dataServiceEditor?.map((item, i) => {\r\n                return (\r\n                  <Fragment\r\n                    key={i}\r\n                    index={i}\r\n                    className=\"justify-content-between align-items-center\"\r\n                  >\r\n                    <Col xs={12} md={12}>\r\n                      <h5 className=\"my-2 title\">\r\n                        <FormattedMessage id=\"post\" /> {i + 1}\r\n                      </h5>\r\n                    </Col>\r\n                    <Col xs={12} md={12}>\r\n                      <FormGroup>\r\n                        <Label for={`title${i + 1}`}>\r\n                          <FormattedMessage id=\"Title\" />{\" \"}\r\n                        </Label>\r\n                        <Input\r\n                          name={`title_service${i + 1}`}\r\n                          defautlValue={item?.title_service}\r\n                          value={item?.title_service || \" \"}\r\n                          onChange={(e) => {\r\n                            const dataEditor = [...dataServiceEditor];\r\n                            dataEditor[i].title_service = e.target.value;\r\n                            setDataServiceEditor(dataEditor);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col xs={12} md={12}>\r\n                      {/* <h4><FormattedMessage id = \"- Cloud Service\"/></h4> */}\r\n                      <FormGroup>\r\n                        <Label for=\"content_service\">\r\n                          <FormattedMessage id=\"Content\" />{\" \"}\r\n                        </Label>\r\n                        <Editor\r\n                          stripPastedStyles={true}\r\n                          editorState={item.content_service}\r\n                          onEditorStateChange={(data) => {\r\n                            const dataEditor = [...dataServiceEditor];\r\n                            dataEditor[i].content_service = data;\r\n                            setDataServiceEditor(dataEditor);\r\n                          }}\r\n                          name=\"quecontent_servicestion\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col xs={11} md={11}>\r\n                      <FormGroup>\r\n                        <Label for=\"feature_service\">\r\n                          <FormattedMessage id=\"feature\" />{\" \"}\r\n                        </Label>\r\n                        <Input\r\n                          type=\"textarea\"\r\n                          name={`feature_service${i + 1}`}\r\n                          defautlValue={item?.feature_service}\r\n                          value={item?.feature_service || \" \"}\r\n                          onChange={(e) => {\r\n                            const dataEditor = [...dataServiceEditor];\r\n                            dataEditor[i].feature_service = e.target.value;\r\n                            setDataServiceEditor(dataEditor);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      xs={1}\r\n                      md={1}\r\n                      className=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <Button.Ripple\r\n                        color=\"danger\"\r\n                        className=\"text-nowrap px-1\"\r\n                        onClick={() => deleteForm(i)}\r\n                        outline\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={\"delete\"} />\r\n                        </span>\r\n                      </Button.Ripple>\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                      <FormGroup>\r\n                        <Label for=\"Image\">\r\n                          <FormattedMessage id=\"link_image\" />\r\n                        </Label>\r\n                        <Row className=\"aligns-end p-1\">\r\n                          <Media className=\"mr-25\" left>\r\n                            <Media\r\n                              object\r\n                              name={`image_service${i + 1}`}\r\n                              id={\"image_service\" + (i + 1)}\r\n                              className=\"rounded mr-50 objectFit-contain image\r\n            form-control\"\r\n                              src={item?.image_service || null}\r\n                              value={item?.image_service || null}\r\n                              height=\"100\"\r\n                              width=\"100\"\r\n                            />\r\n                          </Media>{\" \"}\r\n                          <Row className=\"flex-column px-1\">\r\n                            <Button.Ripple\r\n                              tag={Label}\r\n                              className=\"mt-1\"\r\n                              color=\"primary\"\r\n                            >\r\n                              <FormattedMessage id=\"Upload\" />\r\n                              <Input\r\n                                type=\"file\"\r\n                                onChange={(e) => {\r\n                                  onChange(e, i);\r\n                                }}\r\n                                hidden\r\n                                name={0 + 1}\r\n                                accept=\"image/*\"\r\n                              />\r\n                            </Button.Ripple>\r\n                          </Row>\r\n                        </Row>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col sm={12}>\r\n                      <hr />\r\n                    </Col>\r\n                  </Fragment>\r\n                );\r\n              })}\r\n\r\n            <Button.Ripple\r\n              className=\"btn-icon\"\r\n              color=\"primary\"\r\n              type=\"button\"\r\n              onClick={increaseCount}\r\n            >\r\n              <Plus size={14} />\r\n              <span className=\"align-middle ml-25\">\r\n                <FormattedMessage id=\"add\" />\r\n              </span>\r\n            </Button.Ripple>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\nexport default memo(SectionContentService);\r\n","import ExtensionsHeader from \"@components/extensions-header\";\r\nimport { useEffect } from \"react\";\r\nimport { useState, memo } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport { Button, Col, FormGroup, Input, Label, Media, Row } from \"reactstrap\";\r\n\r\nconst SectionSystem = ({ aboutData }) => {\r\n  const [intro, setIntro] = useState();\r\n  useEffect(() => {\r\n    const content =\r\n      aboutData?.section_system && JSON.parse(aboutData?.section_system);\r\n    content &&\r\n      setIntro({\r\n        link_facebook: content.link_facebook,\r\n        link_zalo: content.link_zalo,\r\n        link_instagram: content.link_instagram,\r\n        link_youtube: content.link_youtube,\r\n        bank: content.bank,\r\n        bank_number: content.bank_number,\r\n        bank_user: content.bank_user,\r\n      });\r\n  }, [aboutData]);\r\n\r\n  return (\r\n    <div id=\"section-system\">\r\n      <div className=\"text-center\">\r\n        <ExtensionsHeader title={<FormattedMessage id=\"section_system\" />} />\r\n      </div>\r\n      <>\r\n        <div className=\"post\" id={\"section-system-\" + (1 + 1)}>\r\n          <Row>\r\n            <Col xs={12} md={12}>\r\n              <FormGroup>\r\n                <Label for=\"header\">\r\n                  <FormattedMessage id=\"system_facebook\" />{\" \"}\r\n                </Label>\r\n                <Input\r\n                  name=\"link_facebook\"\r\n                  defautlValue={intro?.link_facebook}\r\n                  value={intro?.link_facebook || \"\"}\r\n                  onChange={(e) => {\r\n                    setIntro({ ...intro, link_facebook: e.target.value });\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col xs={12} md={12}>\r\n              <FormGroup>\r\n                <Label for=\"header\">\r\n                  <FormattedMessage id=\"system_zalo\" />{\" \"}\r\n                </Label>\r\n                <Input\r\n                  name=\"link_zalo\"\r\n                  defautlValue={intro?.link_zalo}\r\n                  value={intro?.link_zalo || \"\"}\r\n                  onChange={(e) => {\r\n                    setIntro({ ...intro, link_zalo: e.target.value });\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col xs={12} md={12}>\r\n              <FormGroup>\r\n                <Label for=\"short_header\">\r\n                  <FormattedMessage id=\"system_instagram\" />{\" \"}\r\n                </Label>\r\n                <Input\r\n                  name=\"link_instagram\"\r\n                  defautlValue={intro?.link_instagram}\r\n                  value={intro?.link_instagram || \"\"}\r\n                  onChange={(e) => {\r\n                    setIntro({ ...intro, link_instagram: e.target.value });\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} md={12}>\r\n              <FormGroup>\r\n                <Label for=\"title\">\r\n                  <FormattedMessage id=\"system_youtube\" />{\" \"}\r\n                </Label>\r\n                <Input\r\n                  name=\"link_youtube\"\r\n                  defautlValue={intro?.link_youtube}\r\n                  value={intro?.link_youtube || \"\"}\r\n                  onChange={(e) => {\r\n                    setIntro({ ...intro, link_youtube: e.target.value });\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col xs={12} md={12}>\r\n              <FormGroup>\r\n                <Label for=\"content\">\r\n                  <FormattedMessage id=\"system_bank\" />{\" \"}\r\n                </Label>\r\n                <Input\r\n                  name=\"bank\"\r\n                  defautlValue={intro?.bank}\r\n                  value={intro?.bank || \"\"}\r\n                  onChange={(e) => {\r\n                    setIntro({ ...intro, bank: e.target.value });\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} md={12}>\r\n              <FormGroup>\r\n                <Label for=\"title\">\r\n                  <FormattedMessage id=\"system_bank_number\" />{\" \"}\r\n                </Label>\r\n                <Input\r\n                  name=\"bank_number\"\r\n                  defautlValue={intro?.bank_number}\r\n                  value={intro?.bank_number || \"\"}\r\n                  onChange={(e) => {\r\n                    setIntro({ ...intro, bank_number: e.target.value });\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} md={12}>\r\n              <FormGroup>\r\n                <Label for=\"content\">\r\n                  <FormattedMessage id=\"system_bank_user\" />{\" \"}\r\n                </Label>\r\n                <Input\r\n                  name=\"bank_user\"\r\n                  defautlValue={intro?.bank_user}\r\n                  value={intro?.bank_user || \"\"}\r\n                  onChange={(e) => {\r\n                    setIntro({ ...intro, bank_user: e.target.value });\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\nexport default memo(SectionSystem);\r\n","import ExtensionsHeader from \"@components/extensions-header\";\r\nimport { isObjEmpty } from \"@utils\";\r\nimport classNames from \"classnames\";\r\nimport { useEffect, useState, useCallback } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { convertToRaw, EditorState } from \"draft-js\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Media,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport validateOptions from \"../../../../../constants/validate\";\r\nimport { getData, update } from \"../store/action\";\r\nimport SectionContent1 from \"./content/SectionContent1\";\r\nimport SectionContent2 from \"./content/SectionContent2\";\r\nimport SectionContent3 from \"./content/SectionContent3\";\r\nimport SectionContentAbout from \"./content/SectionContentAbout\";\r\nimport SectionContentPartner from \"./content/SectionContentPartner\";\r\nimport SectionContentProduct from \"./content/SectionContentProduct\";\r\nimport SectionContentService from \"./content/SectionContentService\";\r\nimport SectionSystem from \"./content/SectionSystem\";\r\nconst AboutTab = ({ selected, intl, idAbout }) => {\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const history = useHistory();\r\n  const [disable, setDisable] = useState(false);\r\n  const [valueContentIntro1, setValueContentIntro1] = useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n  const [valueContentIntro2, setValueContentIntro2] = useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n  const [valueContentIntro3Content1, setValueContentIntro3Content1] = useState(\r\n    () => EditorState.createEmpty()\r\n  );\r\n  const [valueContentIntro3Content2, setValueContentIntro3Content2] = useState(\r\n    () => EditorState.createEmpty()\r\n  );\r\n  const [valueContentIntro3Content3, setValueContentIntro3Content3] = useState(\r\n    () => EditorState.createEmpty()\r\n  );\r\n\r\n  const [valueContentProduct, setValueContentProduct] = useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n\r\n  const [valueContentAbout, setValueContentAbout] = useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n\r\n  const [valueContentPartner, setValueContentPartner] = useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n\r\n  const [dataServiceEditor, setDataServiceEditor] = useState([]);\r\n\r\n  const store = useSelector((state) => state.abouts);\r\n  const lang = useSelector((state) => state.common.language);\r\n\r\n  const [aboutData, setAboutData] = useState(null);\r\n\r\n  const AboutOptions = validateOptions.AboutOptions;\r\n  const dispatch = useDispatch();\r\n\r\n  const clonePost = useCallback((parentId, chillrenId) => {\r\n    const elems = document.querySelectorAll(`${parentId} ${chillrenId}`);\r\n    const elem = elems[elems.length - 1];\r\n    var clone = elem.cloneNode(true);\r\n    clone.id = parentId + \"-\" + (elems.length + 1);\r\n    elem.after(clone);\r\n\r\n    const titles = document.querySelectorAll(`${parentId} .title`);\r\n    const title = titles[titles.length - 1];\r\n    title.innerHTML = `- Post ${elems.length + 1}`;\r\n  }, []);\r\n  const deleteElement = useCallback((id) => {\r\n    document.getElementById(id).remove();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      selected !== null ||\r\n      (selected !== null && aboutData !== null && selected.id !== aboutData.id)\r\n    ) {\r\n      setAboutData(selected);\r\n    }\r\n  }, [selected, lang]);\r\n  useEffect(() => {\r\n    if (store?.err?.statusCode) {\r\n      setDisable(false);\r\n    }\r\n  }, [store?.err]);\r\n\r\n  const getDataIntro = (introId) => {\r\n    const posts = document.querySelectorAll(`${introId} .post`);\r\n    let object = {};\r\n\r\n    posts.forEach((item) => {\r\n      let formControls = document.querySelectorAll(\r\n        `${introId} #${item.id} .form-group .form-control`\r\n      );\r\n      formControls.forEach((formElem) => {\r\n        object[formElem.name] =\r\n          formElem.value || formElem.getAttribute(\"value\");\r\n      });\r\n    });\r\n    return object;\r\n  };\r\n\r\n  const onSubmit = async (values) => {\r\n    if (isObjEmpty(errors)) {\r\n      const contentIntro1 = draftToHtml(\r\n        convertToRaw(valueContentIntro1.getCurrentContent())\r\n      );\r\n\r\n      const contentIntro2 = draftToHtml(\r\n        convertToRaw(valueContentIntro2.getCurrentContent())\r\n      );\r\n\r\n      const contentIntro3Content1 = draftToHtml(\r\n        convertToRaw(valueContentIntro3Content1.getCurrentContent())\r\n      );\r\n      const contentIntro3Content2 = draftToHtml(\r\n        convertToRaw(valueContentIntro3Content2.getCurrentContent())\r\n      );\r\n      const contentIntro3Content3 = draftToHtml(\r\n        convertToRaw(valueContentIntro3Content3.getCurrentContent())\r\n      );\r\n\r\n      const contentProduct = draftToHtml(\r\n        convertToRaw(valueContentProduct.getCurrentContent())\r\n      );\r\n\r\n      const contentAubout = draftToHtml(\r\n        convertToRaw(valueContentAbout.getCurrentContent())\r\n      );\r\n\r\n      const contentServiceList =\r\n        dataServiceEditor?.length > 0 &&\r\n        dataServiceEditor.map((item) => {\r\n          return {\r\n            ...item,\r\n            content_service: draftToHtml(\r\n              convertToRaw(item?.content_service?.getCurrentContent())\r\n            ),\r\n          };\r\n        });\r\n\r\n      const contentPartner = draftToHtml(\r\n        convertToRaw(valueContentPartner.getCurrentContent())\r\n      );\r\n\r\n      let intro1 = {\r\n        ...getDataIntro(\"#section-content-1\"),\r\n        content_content1: contentIntro1 || \"\",\r\n      };\r\n\r\n      let intro2 = {\r\n        ...getDataIntro(\"#section-content-2\"),\r\n        content_content2: contentIntro2 || \"\",\r\n      };\r\n      let intro3 = {\r\n        ...getDataIntro(\"#section-content-3\"),\r\n        content1_content3: contentIntro3Content1 || \"\",\r\n        content2_content3: contentIntro3Content2 || \"\",\r\n        content3_content3: contentIntro3Content3 || \"\",\r\n      };\r\n\r\n      let introProduct = {\r\n        ...getDataIntro(\"#section-content-product\"),\r\n        content_product: contentProduct || \"\",\r\n      };\r\n\r\n      let introService = {\r\n        ...getDataIntro(\"#section-content-service\"),\r\n      };\r\n      let introAbout = {\r\n        ...getDataIntro(\"#section-content-about\"),\r\n        content_about: contentAubout || \"\",\r\n      };\r\n      let introPartner = {\r\n        ...getDataIntro(\"#section-content-partner\"),\r\n        content_partner: contentPartner || \"\",\r\n      };\r\n      let introSystem = getDataIntro(\"#section-system\");\r\n\r\n      dispatch(\r\n        update({\r\n          id: idAbout && parseInt(idAbout),\r\n          data: {\r\n            ...values,\r\n            lang: lang,\r\n            company_name: values.company_name || \" \",\r\n            founded: values.founded || \" \",\r\n            officer: values.officer || \"officer\",\r\n            advisor: values.advisor || \" \",\r\n            address_1: values.address_1 || \" \",\r\n            address_2: values.address_2 || \" \",\r\n            section_intro_1: (intro1 && JSON.stringify(intro1)) || undefined,\r\n            section_intro_2: (intro2 && JSON.stringify(intro2)) || undefined,\r\n            section_intro_3: (intro3 && JSON.stringify(intro3)) || undefined,\r\n            section_product:\r\n              (introProduct && JSON.stringify(introProduct)) || undefined,\r\n            section_partner:\r\n              (introPartner && JSON.stringify(introPartner)) || undefined,\r\n            section_service:\r\n              (introService &&\r\n                JSON.stringify({\r\n                  ...introService,\r\n                  data: contentServiceList || [],\r\n                })) ||\r\n              undefined,\r\n            section_about:\r\n              (introAbout && JSON.stringify(introAbout)) || undefined,\r\n            privacy_policy: aboutData.privacy_policy,\r\n            faq: aboutData.faq,\r\n            terms_of_use: aboutData.terms_of_use || \"terms of use\",\r\n            section_system:\r\n              (introSystem && JSON.stringify(introSystem)) || undefined,\r\n          },\r\n        })\r\n      );\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (store.status == 200) {\r\n      history.push(\"/apps/cms/setting/list#about\");\r\n    }\r\n  }, [store.status]);\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\">\r\n        <Media className=\"mb-2\">\r\n          <Media className=\"mt-50\" body>\r\n            <h4>{selected.username} </h4>\r\n          </Media>\r\n        </Media>\r\n      </Col>\r\n      <Col sm=\"12\">\r\n        <Form onSubmit={handleSubmit(onSubmit)} enctype=\"multipart/form-data\">\r\n          <SectionContent2\r\n            {...{\r\n              clonePost,\r\n              aboutData,\r\n              deleteElement,\r\n              setValueContentIntro2,\r\n            }}\r\n          />\r\n          <br></br>\r\n          <div style={{ textAlign: \"end\" }}>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mr-1\"\r\n              color=\"primary\"\r\n              disabled={disable}\r\n            >\r\n              <FormattedMessage id=\"update\" />\r\n            </Button>\r\n            <Button\r\n              type=\"reset\"\r\n              color=\"secondary\"\r\n              outline\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              <FormattedMessage id=\"Cancel\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <br></br>\r\n          <SectionContentAbout\r\n            {...{ clonePost, aboutData, deleteElement, setValueContentAbout }}\r\n          />\r\n\r\n          <br></br>\r\n          <div style={{ textAlign: \"end\" }}>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mr-1\"\r\n              color=\"primary\"\r\n              disabled={disable}\r\n            >\r\n              <FormattedMessage id=\"update\" />\r\n            </Button>\r\n            <Button\r\n              type=\"reset\"\r\n              color=\"secondary\"\r\n              outline\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              <FormattedMessage id=\"Cancel\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <br></br>\r\n          <SectionContentProduct\r\n            {...{ clonePost, aboutData, deleteElement, setValueContentProduct }}\r\n          />\r\n          <br></br>\r\n          <div style={{ textAlign: \"end\" }}>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mr-1\"\r\n              color=\"primary\"\r\n              disabled={disable}\r\n            >\r\n              <FormattedMessage id=\"update\" />\r\n            </Button>\r\n            <Button\r\n              type=\"reset\"\r\n              color=\"secondary\"\r\n              outline\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              <FormattedMessage id=\"Cancel\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <br></br>\r\n          <SectionContent1\r\n            {...{ clonePost, aboutData, deleteElement, setValueContentIntro1 }}\r\n          />\r\n          <br></br>\r\n          <div style={{ textAlign: \"end\" }}>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mr-1\"\r\n              color=\"primary\"\r\n              disabled={disable}\r\n            >\r\n              <FormattedMessage id=\"update\" />\r\n            </Button>\r\n            <Button\r\n              type=\"reset\"\r\n              color=\"secondary\"\r\n              outline\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              <FormattedMessage id=\"Cancel\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <br></br>\r\n          <SectionContentService\r\n            {...{\r\n              clonePost,\r\n              aboutData,\r\n              deleteElement,\r\n              dataServiceEditor,\r\n              setDataServiceEditor,\r\n            }}\r\n          />\r\n          <br></br>\r\n          <div style={{ textAlign: \"end\" }}>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mr-1\"\r\n              color=\"primary\"\r\n              disabled={disable}\r\n            >\r\n              <FormattedMessage id=\"update\" />\r\n            </Button>\r\n            <Button\r\n              type=\"reset\"\r\n              color=\"secondary\"\r\n              outline\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              <FormattedMessage id=\"Cancel\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <br></br>\r\n          <SectionContent3\r\n            {...{\r\n              clonePost,\r\n              aboutData,\r\n              deleteElement,\r\n              setValueContentIntro3Content1,\r\n              setValueContentIntro3Content2,\r\n              setValueContentIntro3Content3,\r\n            }}\r\n          />\r\n          <br></br>\r\n          <div style={{ textAlign: \"end\" }}>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mr-1\"\r\n              color=\"primary\"\r\n              disabled={disable}\r\n            >\r\n              <FormattedMessage id=\"update\" />\r\n            </Button>\r\n            <Button\r\n              type=\"reset\"\r\n              color=\"secondary\"\r\n              outline\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              <FormattedMessage id=\"Cancel\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <br></br>\r\n          <SectionContentPartner\r\n            {...{ clonePost, aboutData, deleteElement, setValueContentPartner }}\r\n          />\r\n          <br></br>\r\n          <div style={{ textAlign: \"end\" }}>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mr-1\"\r\n              color=\"primary\"\r\n              disabled={disable}\r\n            >\r\n              <FormattedMessage id=\"update\" />\r\n            </Button>\r\n            <Button\r\n              type=\"reset\"\r\n              color=\"secondary\"\r\n              outline\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              <FormattedMessage id=\"Cancel\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <br></br>\r\n          <div className=\"text-center\">\r\n            <ExtensionsHeader title={<FormattedMessage id=\"contact\" />} />\r\n          </div>\r\n          <FormGroup>\r\n            <Label for=\"company_name\">\r\n              <FormattedMessage id=\"company name\" />{\" \"}\r\n              {/* <span className=\"text-danger\">*</span> */}\r\n            </Label>\r\n            <Input\r\n              name=\"company_name\"\r\n              id=\"company_name\"\r\n              placeholder=\"\"\r\n              innerRef={register(AboutOptions.about)}\r\n              onBlur={() => {\r\n                let about2 = document.getElementById(\"company_name\");\r\n                if (about2 && about2.value) {\r\n                  about2.value = about2.value.trim();\r\n                }\r\n              }}\r\n              className={classNames({ \"is-invalid\": errors[\"company_name\"] })}\r\n              defaultValue={aboutData?.company_name}\r\n            />\r\n          </FormGroup>\r\n          {/* editor */}\r\n          {/* <FormGroup>\r\n            <Label for=\"company_name\">\r\n              <FormattedMessage id=\"company name\" />\r\n            </Label>\r\n            <Editor\r\n              toolbar={{\r\n                options: [\"inline\", \"textAlign\"],\r\n                inline: {\r\n                  inDropdown: false,\r\n                  options: [\"bold\", \"italic\", \"underline\"],\r\n                },\r\n              }}\r\n              defaultEditorState={valueContent}\r\n              editorState={valueContent}\r\n              toolbarClassName=\"toolbarClassName\"\r\n              editorClassName=\"editorClassName \"\r\n              wrapperClassName=\"wrapperClassName\"\r\n              onEditorStateChange={(data) => {\r\n                setValueContent(data);\r\n                setValueContentIntro1(data);\r\n              }}\r\n              name=\"company_name\"\r\n            />\r\n          </FormGroup> */}\r\n\r\n          <FormGroup>\r\n            <Label for=\"founded\">\r\n              <FormattedMessage id=\"founded\" />{\" \"}\r\n              {/* <span className=\"text-danger\">*</span> */}\r\n            </Label>\r\n            <Input\r\n              name=\"founded\"\r\n              id=\"founded\"\r\n              placeholder=\"\"\r\n              innerRef={register(AboutOptions.about)}\r\n              onBlur={() => {\r\n                let about2 = document.getElementById(\"founded\");\r\n                if (about2 && about2.value) {\r\n                  about2.value = about2.value.trim();\r\n                }\r\n              }}\r\n              className={classNames({ \"is-invalid\": errors[\"founded\"] })}\r\n              defaultValue={aboutData?.founded}\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"officer\">\r\n              <FormattedMessage id=\"officer\" />{\" \"}\r\n              {/* <span className=\"text-danger\">*</span> */}\r\n            </Label>\r\n            <Input\r\n              name=\"officer\"\r\n              id=\"officer\"\r\n              type=\"textarea\"\r\n              placeholder=\"\"\r\n              innerRef={register(AboutOptions.about)}\r\n              onBlur={() => {\r\n                let about2 = document.getElementById(\"officer\");\r\n                if (about2 && about2.value) {\r\n                  about2.value = about2.value.trim();\r\n                }\r\n              }}\r\n              className={classNames({ \"is-invalid\": errors[\"officer\"] })}\r\n              defaultValue={aboutData?.officer}\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"advisor\">\r\n              <FormattedMessage id=\"advisor\" />{\" \"}\r\n              {/* <span className=\"text-danger\">*</span> */}\r\n            </Label>\r\n            <Input\r\n              name=\"advisor\"\r\n              id=\"advisor\"\r\n              placeholder=\"\"\r\n              innerRef={register(AboutOptions.about)}\r\n              onBlur={() => {\r\n                let about2 = document.getElementById(\"advisor\");\r\n                if (about2 && about2.value) {\r\n                  about2.value = about2.value.trim();\r\n                }\r\n              }}\r\n              className={classNames({ \"is-invalid\": errors[\"advisor\"] })}\r\n              defaultValue={aboutData?.advisor}\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"about\">\r\n              <FormattedMessage id=\"about title\" />{\" \"}\r\n              {/* <span className=\"text-danger\">*</span> */}\r\n            </Label>\r\n            <Input\r\n              name=\"about\"\r\n              id=\"about\"\r\n              placeholder=\"\"\r\n              innerRef={register(AboutOptions.about)}\r\n              onBlur={() => {\r\n                let about2 = document.getElementById(\"about\");\r\n                if (about2 && about2.value) {\r\n                  about2.value = about2.value.trim();\r\n                }\r\n              }}\r\n              className={classNames({ \"is-invalid\": errors[\"about\"] })}\r\n              defaultValue={aboutData?.about}\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.about && errors.about.message}\r\n            </small>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"address_1\">\r\n              <FormattedMessage id=\"Address 1\" />\r\n            </Label>\r\n            <Input\r\n              name=\"address_1\"\r\n              id=\"address_1\"\r\n              type=\"textarea\"\r\n              defaultValue={aboutData?.address_1}\r\n              innerRef={register(AboutOptions.address_1)}\r\n              onBlur={() => {\r\n                let addressl1 = document.getElementById(\"address_1\");\r\n                if (addressl1 && addressl1.value) {\r\n                  addressl1.value = addressl1.value.trim();\r\n                }\r\n              }}\r\n              className={classNames({ \"is-invalid\": errors[\"address_1\"] })}\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.address_1 && errors.address_1.message}\r\n            </small>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"address_2\">\r\n              <FormattedMessage id=\"Address 2\" />\r\n            </Label>\r\n            <Input\r\n              name=\"address_2\"\r\n              id=\"address_2\"\r\n              type=\"textarea\"\r\n              defaultValue={aboutData?.address_2}\r\n              innerRef={register(AboutOptions.address_2)}\r\n              onBlur={() => {\r\n                let addressl2 = document.getElementById(\"address_2\");\r\n                if (addressl2 && addressl2.value) {\r\n                  addressl2.value = addressl2.value.trim();\r\n                }\r\n              }}\r\n              className={classNames({ \"is-invalid\": errors[\"address_2\"] })}\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.address_2 && errors.address_2.message}\r\n            </small>\r\n          </FormGroup>\r\n          <br></br>\r\n          <div style={{ textAlign: \"end\" }}>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mr-1\"\r\n              color=\"primary\"\r\n              disabled={disable}\r\n            >\r\n              <FormattedMessage id=\"update\" />\r\n            </Button>\r\n            <Button\r\n              type=\"reset\"\r\n              color=\"secondary\"\r\n              outline\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              <FormattedMessage id=\"Cancel\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <br></br>\r\n          <SectionSystem {...{ clonePost, aboutData, deleteElement }} />\r\n          <br></br>\r\n\r\n          <div style={{ textAlign: \"end\" }}>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mr-1\"\r\n              color=\"primary\"\r\n              disabled={disable}\r\n            >\r\n              <FormattedMessage id=\"update\" />\r\n            </Button>\r\n            <Button\r\n              type=\"reset\"\r\n              color=\"secondary\"\r\n              outline\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              <FormattedMessage id=\"Cancel\" />\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default injectIntl(AboutTab);\r\n","import { useEffect, useState } from \"react\";\r\nimport { User } from \"react-feather\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Alert,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\nimport api from \"../../../../../constants/api\";\r\nimport request from \"../../../../../services/request\";\r\nimport { getById, getData } from \"../store/action\";\r\nimport AboutTab from \"./About\";\r\nconst AboutEdit = () => {\r\n  const [activeTab, setActiveTab] = useState(\"1\"),\r\n    store = useSelector((state) => state.abouts),\r\n    lang = useSelector((state) => state.common.language),\r\n    dispatch = useDispatch(),\r\n    toggle = (tab) => setActiveTab(tab);\r\nconst [idAbout,setIdAbout] = useState()\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      await request\r\n        .send({\r\n          method: api.LIST_ABOUT.method,\r\n          path: api.LIST_ABOUT.path,\r\n          query: { lang },\r\n        })\r\n        .then((response) => {\r\n          setIdAbout(response.data.data[0].id)\r\n          if (response?.data?.data) {\r\n            dispatch(getById({ id: parseInt(response.data.data[0].id), lang }));\r\n\r\n          }\r\n        });\r\n    };\r\n    init();\r\n  }, []);\r\n\r\n  return store.selected !== null && store.selected !== undefined ? (\r\n    <Row className=\"app-user-edit\">\r\n      <Col sm=\"12\">\r\n        <Card>\r\n          <CardBody className=\"pt-2\">\r\n            <Nav pills>\r\n              <NavItem>\r\n                <NavLink active={activeTab === \"1\"} onClick={() => toggle(\"1\")}>\r\n                  <User size={14} />\r\n                  <span className=\"align-middle d-none d-sm-block\">\r\n                    <FormattedMessage id=\"Home\" />\r\n                  </span>\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <AboutTab\r\n                  selected={store.selected}\r\n                  store={store}\r\n                  idAbout={idAbout}\r\n                />\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  ) : (\r\n    <Alert color=\"danger\">\r\n      <h4 className=\"alert-heading\">Not found</h4>\r\n    </Alert>\r\n  );\r\n};\r\nexport default AboutEdit;\r\n","import { FormattedMessage } from \"react-intl\";\r\nimport REGEX from \"./regex\";\r\nimport { number } from \"yup\";\r\nconst validateOptions = {\r\n  AboutOptions: {\r\n    about: {\r\n      // required: <FormattedMessage id=\"The about title field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"About title up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  PartnerOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DocumentOptions: {\r\n    label: {\r\n      required: <FormattedMessage id=\"the label field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Label up to 255 characters\" />,\r\n      },\r\n    },\r\n\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n\r\n    short_content: {\r\n      required: <FormattedMessage id=\"the short content field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DiscountOptions: {\r\n    discount: {\r\n      required: <FormattedMessage id=\"the discount field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"The discount is not suitable\" />,\r\n      },\r\n    },\r\n    time: {\r\n      required: <FormattedMessage id=\"The time price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  PriceOptions: {\r\n    price: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n    },\r\n  },\r\n  Document_Link_Options: {\r\n    document_link: {\r\n      required: (\r\n        <FormattedMessage id=\"The time document link field is required\" />\r\n      ),\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  CategoryOptions: {\r\n    code: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n\r\n    message_content: {\r\n      maxLength: {\r\n        value: 30,\r\n        message: <FormattedMessage id=\"Category must be 30 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  BranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n    // short_content: {\r\n    //   required: <FormattedMessage id=\"the short content field is required\" />,\r\n    //   validate: (value) => !REGEX.TITLE.test(value),\r\n    //   maxLength: {\r\n    //     value: 255,\r\n\r\n    //     message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n    //   },\r\n    // },\r\n    // content: {\r\n    //   required: <FormattedMessage id=\"the content field is required\" />,\r\n    //   maxLength: {\r\n    //     value: 3000,\r\n    //     message: <FormattedMessage id=\"Content up to 3000 characters\" />,\r\n    //   },\r\n    // },\r\n  },\r\n\r\n  EditBranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n  },\r\n\r\n  Document_course: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditCategoryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n      // pattern: {\r\n      //   value: REGEX.NAME2,\r\n      //   message: <FormattedMessage id=\"Invalid category name\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditDocumentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    author: {\r\n      required: <FormattedMessage id=\"The Author name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Author name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Author must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  EditQuizOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    contenttext: {\r\n      required: <FormattedMessage id=\"The content field is required\" />,\r\n    },\r\n    answer: {\r\n      required: <FormattedMessage id=\"The answer field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  TermOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    //Học phần\r\n  },\r\n  KindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditKindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  TranscriptOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditTranscriptOptions: {\r\n    student_code: {\r\n      required: <FormattedMessage id=\"The student code field is required\" />,\r\n    },\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  CertificateOptions: {},\r\n  UserCertificateOptions: {},\r\n\r\n  EditCertificateOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"The title must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"The title must be 70 characters max\" />,\r\n      },\r\n    },\r\n    provider: {\r\n      required: <FormattedMessage id=\"Provider field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Provider must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Provider must be 70 characters max\" />,\r\n      },\r\n    },\r\n    position: {\r\n      required: <FormattedMessage id=\"Position field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Position must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Position must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  ProductOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The product's name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Product name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Product name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    vat: {\r\n      required: <FormattedMessage id=\"The VAT field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"VAT more than 0\" />,\r\n      },\r\n      max: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"VAT less than 100\" />,\r\n      },\r\n    },\r\n    number_trial: {\r\n      // required: <FormattedMessage id=\"The Number day field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be greater than or equal to 0\" />\r\n        ),\r\n      },\r\n      max: {\r\n        value: 30,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be less than or equal to 30\" />\r\n        ),\r\n      },\r\n      validate: (value) =>\r\n        value >= 0 || (\r\n          <FormattedMessage id=\"Number day must be a positive number\" />\r\n        ),\r\n    },\r\n    categoryId: {\r\n      required: <FormattedMessage id=\"The category field is required\" />,\r\n      min: {\r\n        value: 0,\r\n      },\r\n    },\r\n    service_price_local: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n\r\n    service_price_cloud: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n  },\r\n  VersionOptions: {\r\n    version: {\r\n      required: <FormattedMessage id=\"The version field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Version up to 255 characters\" />,\r\n      },\r\n    },\r\n    infor: {\r\n      maxLength: {\r\n        value: 500,\r\n        message: <FormattedMessage id=\"Information up to 500 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  StaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditStaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  UserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|\\\\d)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditUserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  CityOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The city name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The city code field is required\" />,\r\n      alidate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n  },\r\n  CountryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The country name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The country code field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    phone_code: {\r\n      required: <FormattedMessage id=\"The phone code field is required\" />,\r\n      validate: (value) => REGEX.PHONE_CODE.test(value),\r\n    },\r\n  },\r\n  StudentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    date: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    },\r\n    // gender: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // courseId: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // formality: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n  },\r\n\r\n  CloudOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The cloud name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Cloud name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Cloud name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    // vat: {\r\n    //   required: <FormattedMessage id=\"The VAT field is required\" />,\r\n    //   min: {\r\n    //     value: 0,\r\n    //     message: <FormattedMessage id=\"VAT more than 0\" />,\r\n    //   },\r\n    //   max: {\r\n    //     value: 100,\r\n    //     message: <FormattedMessage id=\"VAT less than 100\" />,\r\n    //   },\r\n    // },\r\n  },\r\n};\r\nexport default validateOptions;\r\n","// ** React Imports\r\nimport Proptypes from 'prop-types'\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nconst ExtensionsHeader = props => {\r\n  return (\r\n    <Row className='mb-2'>\r\n      <Col sm='12' className='ml-50'>\r\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\r\n          {props.title}\r\n        </p>\r\n        {props.link ? (\r\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\r\n            {props.subTitle}\r\n          </a>\r\n        ) : (\r\n          <p className='text-primary'>{props.subTitle}</p>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default ExtensionsHeader\r\n\r\n// ** PropTypes\r\nExtensionsHeader.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  subTitle: Proptypes.string.isRequired,\r\n  link: Proptypes.string\r\n}\r\n","import api from '../../../../../../constants/api'\r\nimport Service from \"../../../../../../services/request\"\r\n\r\n\r\nexport const getData = (params) => {\r\n  return async (dispatch) => {\r\n    return await Service.send({\r\n      method: api.LIST_ABOUT.method, path: api.LIST_ABOUT.path, query: params\r\n    }).then(response => {\r\n      return dispatch({\r\n        type: 'GET_DATA_ABOUT',\r\n        data: response?.data?.data,\r\n        totalPages: response?.data?.total,\r\n        params\r\n      })\r\n    })\r\n  }\r\n}\r\nexport const add = data => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.CREATE_ABOUT.method, path: api.CREATE_ABOUT.path, data\r\n    }).then(response => {\r\n      dispatch({\r\n        type: 'ADD_ABOUT',\r\n        response\r\n      })\r\n    })\r\n\r\n    .catch(err =>  dispatch({\r\n      type: 'ADD_ABOUT',\r\n      err\r\n    }))\r\n  }\r\n}\r\nexport const getById = query => {\r\n  return async dispatch => {\r\n    await Service.send({\r\n      method: api.GET_ABOUT.method, path: api.GET_ABOUT.path, query \r\n    })\r\n      .then(response => {\r\n        dispatch({\r\n          type: 'GET_ABOUT',\r\n          selected: response?.data\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\nexport const update = (data) => {\r\n  return async (dispatch, getState) => {\r\n    await Service.send({\r\n      method: api.UPDATE_ABOUT.method,\r\n      path: api.UPDATE_ABOUT.path,\r\n      data\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"UPDATE_ABOUT\",\r\n          response,\r\n        });\r\n      })\r\n\r\n      .catch(err =>  dispatch({\r\n        type: 'UPDATE_ABOUT',\r\n        err\r\n      }))\r\n  };\r\n};"],"sourceRoot":""}