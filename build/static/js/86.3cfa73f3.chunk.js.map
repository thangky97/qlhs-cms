{"version":3,"sources":["views/apps/product/version/edit/Version.js","views/apps/product/version/edit/index.js","constants/validate.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js","../node_modules/reactstrap/es/Alert.js","../node_modules/reactstrap/es/Nav.js","views/apps/product/version/store/action/index.js"],"names":["injectIntl","_ref","selected","intl","common","_useForm","useForm","register","errors","handleSubmit","_useState","useState","_useState2","_slicedToArray","versionData","setVersionData","history","useHistory","dispatch","useDispatch","id","useParams","store","useSelector","state","versions","_useState3","_useState4","disable","setDisable","VersionOptions","validateOptions","useEffect","_store$err","err","statusCode","_jsxs","Row","children","_jsx","Col","sm","Media","className","body","username","Form","onSubmit","values","isObjEmpty","update","parseInt","data","_objectSpread","info","link","FormGroup","Label","for","FormattedMessage","Input","name","placeholder","innerRef","version","onBlur","versionl","document","getElementById","value","trim","classNames","defaultValue","message","last_name","infor","type","status","required","formatMessage","style","textAlign","Button","color","disabled","outline","onClick","goBack","VersionEdit","activeTab","setActiveTab","language","getById","undefined","Card","CardBody","Nav","pills","NavItem","NavLink","active","User","size","TabContent","TabPane","tabId","VersionTab","Alert","AboutOptions","about","maxLength","PartnerOptions","DocumentOptions","label","validate","REGEX","TITLE","test","sort_order","pattern","short_content","DiscountOptions","discount","min","time","PriceOptions","price","Document_Link_Options","document_link","CategoryOptions","code","minLength","message_content","BranchOptions","code_branch","email","EMAIL","phone","addpress","EditBranchOptions","Document_course","EditCategoryOptions","EditDocumentOptions","author","EditQuizOptions","title","contenttext","answer","TermOptions","KindOptions","EditKindOptions","TranscriptOptions","score","EditTranscriptOptions","student_code","CertificateOptions","UserCertificateOptions","EditCertificateOptions","provider","position","ProductOptions","product_name","NAME2","alidate","SPACE","vat","max","number_trial","categoryId","service_price_local","PRICE","service_price_cloud","StaffOptions","NAME","first_name","USERNAME","password","EditStaffOptions","UserOptions","PASSWORD","EditUserOptions","CityOptions","CountryOptions","phone_code","PHONE_CODE","StudentOptions","date","CloudOptions","TabContext","React","createContext","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","oneOfType","func","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","createElement","_extends","ref","defaultProps","any","_Component","_this","call","this","_inheritsLoose","getDerivedStateFromProps","nextProps","prevState","prototype","render","_this$props","omit","Object","keys","Provider","activeTabId","Component","getClasses","Consumer","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","node","closeClassName","closeAriaLabel","fade","bool","isOpen","toggle","transition","shape","Fade","unmountOnExit","closeClasses","alertTransition","baseClass","timeout","in","role","tabs","vertical","horizontal","justified","fill","navbar","card","getVerticalClass","getData","params","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","Service","send","method","api","LIST_VERSION","path","then","response","_response$data","_response$data2","totalPages","total","stop","_x","_ref2","_callee2","_context2","GET_VERSION","query","catch","console","log","_x2","add","_ref3","_callee3","getState","_context3","CREATE_VERSION_PRODUCT","_x3","_x4","_ref4","_callee4","_context4","UPDATE_VERSION","_x5","_x6","remove","staff","_ref5","_callee5","_context5","DELETE_VERSION","_x7","_x8"],"mappings":"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","file":"static/js/86.3cfa73f3.chunk.js","sourcesContent":["import { isObjEmpty } from \"@utils\";\r\nimport classNames from \"classnames\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Media,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport validateOptions from \"../../../../../constants/validate\";\r\nimport { update } from \"../store/action\";\r\n\r\nconst VersionTab = ({ selected, common, intl }) => {\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const [versionData, setVersionData] = useState(null);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n  const store = useSelector((state) => state.versions);\r\n\r\n  const [disable, setDisable] = useState(false);\r\n  const VersionOptions = validateOptions.VersionOptions;\r\n\r\n  useEffect(() => {\r\n    if (store?.err?.statusCode) {\r\n      setDisable(false);\r\n    }\r\n  }, [store?.err]);\r\n  useEffect(() => {\r\n    if (\r\n      selected !== null ||\r\n      (selected !== null &&\r\n        versionData !== null &&\r\n        selected.id !== versionData.id)\r\n    ) {\r\n      setVersionData(selected);\r\n    }\r\n  }, [selected]);\r\n  const onSubmit = (values) => {\r\n    if (isObjEmpty(errors)) {\r\n      setDisable(true);\r\n      dispatch(\r\n        update({\r\n          id: parseInt(id),\r\n          data: {\r\n            ...values,\r\n            info: values.info || \" \",\r\n            link: values.link || \" \",\r\n          },\r\n        })\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\">\r\n        <Media className=\"mb-2\">\r\n          <Media className=\"mt-50\" body>\r\n            <h4>{selected.username} </h4>\r\n          </Media>\r\n        </Media>\r\n      </Col>\r\n      <Col sm=\"12\">\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <FormGroup>\r\n            <Label for=\"version\">\r\n              <FormattedMessage id=\"Version\" />{\" \"}\r\n              <span className=\"text-danger\">*</span>\r\n            </Label>\r\n            <Input\r\n              name=\"version\"\r\n              id=\"version\"\r\n              placeholder=\" \"\r\n              innerRef={register(VersionOptions.version)}\r\n              onBlur={() => {\r\n                let versionl = document.getElementById(\"version\");\r\n                if (versionl && versionl.value) {\r\n                  versionl.value = versionl.value.trim();\r\n                }\r\n              }}\r\n              className={classNames({ \"is-invalid\": errors[\"version\"] })}\r\n              defaultValue={versionData && versionData.version}\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.version && errors.version.message}\r\n            </small>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"link\">\r\n              <FormattedMessage id=\"Link\" />{\" \"}\r\n            </Label>\r\n            <Input\r\n              name=\"link\"\r\n              id=\"link\"\r\n              placeholder=\" \"\r\n              innerRef={register(VersionOptions.last_name)}\r\n              className={classNames({ \"is-invalid\": errors[\"link\"] })}\r\n              onBlur={() => {\r\n                let link = document.getElementById(\"link\");\r\n                if (link && link.value) {\r\n                  link.value = link.value.trim();\r\n                }\r\n              }}\r\n              defaultValue={versionData && versionData.link}\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.last_name && errors.last_name.message}\r\n            </small>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"info\">\r\n              <FormattedMessage id=\"infor\" />{\" \"}\r\n            </Label>\r\n            <Input\r\n              name=\"info\"\r\n              id=\"info\"\r\n              placeholder=\" \"\r\n              innerRef={register(VersionOptions.infor)}\r\n              onBlur={() => {\r\n                let infor = document.getElementById(\"info\");\r\n                if (infor && infor.value) {\r\n                  infor.value = infor.value.trim();\r\n                }\r\n              }}\r\n              className={classNames({ \"is-invalid\": errors[\"infor\"] })}\r\n              defaultValue={versionData && versionData.info}\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.infor && errors.infor.message}\r\n            </small>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"status\">\r\n              <FormattedMessage id=\"status\" />\r\n            </Label>\r\n\r\n            <Input\r\n              type=\"select\"\r\n              name=\"status\"\r\n              id=\"status\"\r\n              defaultValue={versionData && versionData.status}\r\n              innerRef={register({ required: true })}\r\n            >\r\n              <option value=\"1\">{intl.formatMessage({ id: \"Active\" })}</option>\r\n              <option value=\"0\">\r\n                {intl.formatMessage({ id: \"Deactive\" })}\r\n              </option>\r\n            </Input>\r\n          </FormGroup>\r\n\r\n          <div style={{ textAlign: \"end\" }}>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mr-1\"\r\n              color=\"primary\"\r\n              disabled={disable}\r\n            >\r\n              <FormattedMessage id=\"update\" />\r\n            </Button>\r\n            <Button\r\n              type=\"reset\"\r\n              color=\"secondary\"\r\n              outline\r\n              onClick={() => history.goBack()}\r\n            >\r\n              <FormattedMessage id=\"Cancel\" />\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default injectIntl(VersionTab);\r\n","import { useEffect, useState } from \"react\";\r\nimport { User } from \"react-feather\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Alert,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\nimport { getById } from \"../store/action\";\r\nimport VersionTab from \"./Version\";\r\nconst VersionEdit = () => {\r\n  const history = useHistory();\r\n  const [activeTab, setActiveTab] = useState(\"1\"),\r\n    store = useSelector((state) => state.versions),\r\n    lang = useSelector((state) => state.common.language),\r\n    dispatch = useDispatch(),\r\n    { id } = useParams();\r\n\r\n  const toggle = (tab) => setActiveTab(tab);\r\n  useEffect(() => {\r\n    dispatch(\r\n      getById({\r\n        id: parseInt(id),\r\n      })\r\n    );\r\n  }, []);\r\n  useEffect(() => {\r\n    if (store.status == 200) {\r\n      history.goBack();\r\n    }\r\n  }, [store.status]);\r\n  return store.selected !== null && store.selected !== undefined ? (\r\n    <Row className=\"app-user-edit\">\r\n      <Col sm=\"12\">\r\n        <Card>\r\n          <CardBody className=\"pt-2\">\r\n            <Nav pills>\r\n              <NavItem>\r\n                <NavLink active={activeTab === \"1\"} onClick={() => toggle(\"1\")}>\r\n                  <User size={14} />\r\n                  <span className=\"align-middle d-none d-sm-block\">\r\n                    <FormattedMessage id=\"Version\" />\r\n                  </span>\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <VersionTab selected={store.selected} />\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  ) : (\r\n    <Alert color=\"danger\">\r\n      <h4 className=\"alert-heading\">Not found</h4>\r\n    </Alert>\r\n  );\r\n};\r\nexport default VersionEdit;\r\n","import { FormattedMessage } from \"react-intl\";\r\nimport REGEX from \"./regex\";\r\nimport { number } from \"yup\";\r\nconst validateOptions = {\r\n  AboutOptions: {\r\n    about: {\r\n      // required: <FormattedMessage id=\"The about title field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"About title up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  PartnerOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DocumentOptions: {\r\n    label: {\r\n      required: <FormattedMessage id=\"the label field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Label up to 255 characters\" />,\r\n      },\r\n    },\r\n\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n\r\n    short_content: {\r\n      required: <FormattedMessage id=\"the short content field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DiscountOptions: {\r\n    discount: {\r\n      required: <FormattedMessage id=\"the discount field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"The discount is not suitable\" />,\r\n      },\r\n    },\r\n    time: {\r\n      required: <FormattedMessage id=\"The time price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  PriceOptions: {\r\n    price: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n    },\r\n  },\r\n  Document_Link_Options: {\r\n    document_link: {\r\n      required: (\r\n        <FormattedMessage id=\"The time document link field is required\" />\r\n      ),\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  CategoryOptions: {\r\n    code: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n\r\n    message_content: {\r\n      maxLength: {\r\n        value: 30,\r\n        message: <FormattedMessage id=\"Category must be 30 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  BranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n    // short_content: {\r\n    //   required: <FormattedMessage id=\"the short content field is required\" />,\r\n    //   validate: (value) => !REGEX.TITLE.test(value),\r\n    //   maxLength: {\r\n    //     value: 255,\r\n\r\n    //     message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n    //   },\r\n    // },\r\n    // content: {\r\n    //   required: <FormattedMessage id=\"the content field is required\" />,\r\n    //   maxLength: {\r\n    //     value: 3000,\r\n    //     message: <FormattedMessage id=\"Content up to 3000 characters\" />,\r\n    //   },\r\n    // },\r\n  },\r\n\r\n  EditBranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n  },\r\n\r\n  Document_course: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditCategoryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n      // pattern: {\r\n      //   value: REGEX.NAME2,\r\n      //   message: <FormattedMessage id=\"Invalid category name\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditDocumentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    author: {\r\n      required: <FormattedMessage id=\"The Author name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Author name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Author must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  EditQuizOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    contenttext: {\r\n      required: <FormattedMessage id=\"The content field is required\" />,\r\n    },\r\n    answer: {\r\n      required: <FormattedMessage id=\"The answer field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  TermOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    //Học phần\r\n  },\r\n  KindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditKindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  TranscriptOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditTranscriptOptions: {\r\n    student_code: {\r\n      required: <FormattedMessage id=\"The student code field is required\" />,\r\n    },\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  CertificateOptions: {},\r\n  UserCertificateOptions: {},\r\n\r\n  EditCertificateOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"The title must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"The title must be 70 characters max\" />,\r\n      },\r\n    },\r\n    provider: {\r\n      required: <FormattedMessage id=\"Provider field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Provider must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Provider must be 70 characters max\" />,\r\n      },\r\n    },\r\n    position: {\r\n      required: <FormattedMessage id=\"Position field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Position must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Position must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  ProductOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The product's name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Product name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Product name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    vat: {\r\n      required: <FormattedMessage id=\"The VAT field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"VAT more than 0\" />,\r\n      },\r\n      max: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"VAT less than 100\" />,\r\n      },\r\n    },\r\n    number_trial: {\r\n      // required: <FormattedMessage id=\"The Number day field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be greater than or equal to 0\" />\r\n        ),\r\n      },\r\n      max: {\r\n        value: 30,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be less than or equal to 30\" />\r\n        ),\r\n      },\r\n      validate: (value) =>\r\n        value >= 0 || (\r\n          <FormattedMessage id=\"Number day must be a positive number\" />\r\n        ),\r\n    },\r\n    categoryId: {\r\n      required: <FormattedMessage id=\"The category field is required\" />,\r\n      min: {\r\n        value: 0,\r\n      },\r\n    },\r\n    service_price_local: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n\r\n    service_price_cloud: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n  },\r\n  VersionOptions: {\r\n    version: {\r\n      required: <FormattedMessage id=\"The version field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Version up to 255 characters\" />,\r\n      },\r\n    },\r\n    infor: {\r\n      maxLength: {\r\n        value: 500,\r\n        message: <FormattedMessage id=\"Information up to 500 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  StaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditStaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  UserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|\\\\d)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditUserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  CityOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The city name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The city code field is required\" />,\r\n      alidate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n  },\r\n  CountryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The country name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The country code field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    phone_code: {\r\n      required: <FormattedMessage id=\"The phone code field is required\" />,\r\n      validate: (value) => REGEX.PHONE_CODE.test(value),\r\n    },\r\n  },\r\n  StudentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    date: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    },\r\n    // gender: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // courseId: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // formality: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n  },\r\n\r\n  CloudOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The cloud name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Cloud name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Cloud name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    // vat: {\r\n    //   required: <FormattedMessage id=\"The VAT field is required\" />,\r\n    //   min: {\r\n    //     value: 0,\r\n    //     message: <FormattedMessage id=\"VAT more than 0\" />,\r\n    //   },\r\n    //   max: {\r\n    //     value: 100,\r\n    //     message: <FormattedMessage id=\"VAT less than 100\" />,\r\n    //   },\r\n    // },\r\n  },\r\n};\r\nexport default validateOptions;\r\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabId\", \"tag\"]);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread(_objectSpread({}, Fade.defaultProps), {}, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread(_objectSpread(_objectSpread({}, Fade.defaultProps), transition), {}, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return /*#__PURE__*/React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import api from \"../../../../../../constants/api\";\r\nimport Service from \"../../../../../../services/request\";\r\n\r\nexport const getData = (params) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.LIST_VERSION.method,\r\n      path: api.LIST_VERSION.path,\r\n      data: params,\r\n    }).then((response) => {\r\n      dispatch({\r\n        type: \"GET_DATA_VERSION_PRODUCT\",\r\n        data: response?.data?.data,\r\n        totalPages: response?.data?.total,\r\n        params,\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const getById= (data) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.GET_VERSION.method,\r\n      path: api.GET_VERSION.path,\r\n      query: data,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"GET_VERSION_PRODUCT\",\r\n          selected: response?.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const add = (data) => {\r\n  return async (dispatch, getState) => {\r\n    await Service.send({\r\n      method: api.CREATE_VERSION_PRODUCT.method,\r\n      path: api.CREATE_VERSION_PRODUCT.path,\r\n      data\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"ADD_VERSION_PRODUCT\",\r\n          response,\r\n        });\r\n      })\r\n\r\n      .catch(err =>  dispatch({\r\n        type: 'ADD_VERSION_PRODUCT',\r\n        err\r\n      }))\r\n  };\r\n};\r\nexport const update = (data) => {\r\n  return async (dispatch, getState) => {\r\n    await Service.send({\r\n      method: api.UPDATE_VERSION.method,\r\n      path: api.UPDATE_VERSION.path,\r\n      data,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"UPDATE_VERSION_PRODUCT\",\r\n          response,\r\n        });\r\n      })\r\n\r\n      .catch(err =>  dispatch({\r\n        type: 'UPDATE_VERSION_PRODUCT',\r\n        err\r\n      }))\r\n  };\r\n};\r\nexport const remove= (staff) => {\r\n  return async (dispatch, getState) => {\r\n    await Service.send({\r\n      method: api.DELETE_VERSION.method,\r\n      path: api.DELETE_VERSION.path,\r\n      data: staff,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"DELETE_VERSION_PRODUCT\",\r\n          response,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n"],"sourceRoot":""}