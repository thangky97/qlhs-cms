{"version":3,"sources":["views/apps/kind/list/Sidebar.js","views/apps/kind/list/columns.js","views/apps/kind/list/index.js","constants/validate.js","@core/components/extensions-header/index.js","@core/components/sidebar/index.js","views/apps/kind/store/action/index.js"],"names":["injectIntl","_ref","_errors$name","open","toggleSidebar","intl","disable","setDisable","store","useSelector","state","kind","_useState","useState","_useState2","_slicedToArray","kindData","lang","common","language","KindOptions","validateOptions","dispatch","useDispatch","_useForm","useForm","register","errors","handleSubmit","useEffect","_store$err","err","statusCode","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","isObjEmpty","addKind","_objectSpread","name","undefined","status","parseInt","error","console","log","stop","_x","apply","arguments","_jsx","Sidebar","size","title","FormattedMessage","id","headerClassName","contentClassName","children","_jsxs","Form","FormGroup","Label","for","className","Input","placeholder","innerRef","onBlur","document","getElementById","value","trim","classnames","message","type","defaultValue","required","formatMessage","style","textAlign","Button","color","disabled","outline","onClick","statusObj","class","text","columns","minWidth","selector","cell","row","_statusObj$row$status","_statusObj$row$status2","Badge","pill","padding","Link","to","concat","CustomHeader","Row","Col","xl","Ripple","searchTerm","_useState3","_useState4","currentPage","setCurrentPage","_useState5","_useState6","rowsPerPage","setRowsPerPage","_useState7","_useState8","sidebarOpen","setSidebarOpen","_useState9","_useState10","_useState11","label","_useState12","filterStatus","setFilterStatus","_useState13","_useState14","searchName","setSearchName","_useState15","_useState16","loadData","setLoadData","getData","filter","skip","limit","order","key","toast","success","warn","statusOptions","count","Number","Math","ceil","total","ExtensionsHeader","Card","CardHeader","CardTitle","tag","CardBody","md","onChange","e","target","Select","isClearable","classNamePrefix","options","data","DataTable","noHeader","subHeader","responsive","highlightOnHover","noDataComponent","role","background","paginationServer","sortIcon","ChevronDown","_store$data","length","dataToRender","subHeaderComponent","handlePerPage","currentTarget","ReactPaginate","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","page","selected","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","AboutOptions","about","maxLength","PartnerOptions","DocumentOptions","validate","REGEX","TITLE","test","sort_order","pattern","short_content","DiscountOptions","discount","min","time","PriceOptions","price","Document_Link_Options","document_link","CategoryOptions","code","minLength","message_content","BranchOptions","code_branch","email","EMAIL","phone","addpress","EditBranchOptions","Document_course","EditCategoryOptions","EditDocumentOptions","author","EditQuizOptions","contenttext","answer","TermOptions","EditKindOptions","TranscriptOptions","score","EditTranscriptOptions","student_code","CertificateOptions","UserCertificateOptions","EditCertificateOptions","provider","position","ProductOptions","product_name","NAME2","alidate","SPACE","vat","max","number_trial","categoryId","service_price_local","PRICE","service_price_cloud","VersionOptions","version","infor","StaffOptions","last_name","NAME","first_name","username","USERNAME","password","EditStaffOptions","UserOptions","PASSWORD","EditUserOptions","CityOptions","CountryOptions","phone_code","PHONE_CODE","StudentOptions","date","CloudOptions","props","sm","link","href","rel","subTitle","_classnames3","width","bodyClassName","wrapperClassName","closeBtn","rest","_objectWithoutProperties","_excluded","renderCloseBtn","X","Modal","isOpen","_defineProperty","modalClassName","String","ModalHeader","toggle","close","ModalBody","params","Service","send","method","api","LIST_KIND","path","then","response","_response$data","_response$data2","totalPages","getKind","_callee2","_context2","GET_KIND","query","catch","_x2","Kind","_ref3","_callee3","getState","_context3","CREATE_KIND","_x3","_x4","updateKind","_ref4","_callee4","_context4","UPDATE_KIND","_x5","_x6"],"mappings":"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","file":"static/js/126.aa80a441.chunk.js","sourcesContent":["import Sidebar from \"@components/sidebar\";\r\nimport { isObjEmpty } from \"@utils\";\r\nimport classnames from \"classnames\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport \"react-phone-number-input/style.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Form, FormGroup, Input, Label, Media, Row } from \"reactstrap\";\r\nimport validateOptions from \"../../../../constants/validate\";\r\nimport { addKind } from \"../store/action\";\r\n\r\nconst SidebarNewKind = ({ open, toggleSidebar, intl, disable, setDisable }) => {\r\n  const store = useSelector((state) => state.kind);\r\n  const [kindData, setKindData] = useState(null);\r\n  const lang = useSelector((state) => state.common.language);\r\n  const KindOptions = validateOptions.KindOptions;\r\n  const dispatch = useDispatch();\r\n  const { register, errors, handleSubmit } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (store?.err?.statusCode) {\r\n      setDisable(false);\r\n    }\r\n  }, [store?.err]);\r\n\r\n  const onSubmit = async (values) => {\r\n    if (isObjEmpty(errors)) {\r\n      setDisable(true);\r\n      try {\r\n        dispatch(\r\n          addKind({\r\n            ...values,\r\n            name: values.name || undefined,\r\n            status: parseInt(values.status),\r\n            lang,\r\n          })\r\n        );\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Sidebar\r\n      size=\"lg\"\r\n      open={open}\r\n      title={<FormattedMessage id=\"Add New Solution\" />}\r\n      headerClassName=\"mb-1\"\r\n      contentClassName=\"pt-0\"\r\n      toggleSidebar={toggleSidebar}\r\n    >\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <FormGroup>\r\n          <Label for=\"name\">\r\n            <FormattedMessage id=\"Solution\" />{\" \"}\r\n            <span className=\"text-danger\">*</span>\r\n          </Label>\r\n          <Input\r\n            name=\"name\"\r\n            id=\"name\"\r\n            placeholder=\"\"\r\n            innerRef={register(KindOptions.name)}\r\n            onBlur={() => {\r\n              let name = document.getElementById(\"name\");\r\n              if (name && name.value) {\r\n                name.value = name.value.trim();\r\n              }\r\n            }}\r\n            className={classnames({ \"is-invalid\": errors[\"name\"] })}\r\n          />\r\n          <small className=\"text-danger\">\r\n            {errors?.name && errors.name.message}\r\n          </small>\r\n          {errors?.name?.type == \"validate\" && (\r\n            <small className=\"text-danger\">\r\n              <FormattedMessage id=\"Invalid name\" />\r\n            </small>\r\n          )}\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"status\">\r\n            <FormattedMessage id=\"status\" />{\" \"}\r\n          </Label>\r\n          <Input\r\n            type=\"select\"\r\n            name=\"status\"\r\n            id=\"status\"\r\n            defaultValue={kindData && kindData.status}\r\n            innerRef={register({ required: true })}\r\n          >\r\n            <option value=\"1\">{intl.formatMessage({ id: \"Active\" })}</option>\r\n            <option value=\"0\">{intl.formatMessage({ id: \"Deactive\" })}</option>\r\n\r\n            <option value=\"2\">{intl.formatMessage({ id: \"Blocked\" })}</option>\r\n          </Input>\r\n        </FormGroup>\r\n\r\n        <div style={{ textAlign: \"end\" }}>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mr-1\"\r\n            color=\"primary\"\r\n            disabled={disable}\r\n          >\r\n            <FormattedMessage id=\"add\" />\r\n          </Button>\r\n          <Button\r\n            type=\"reset\"\r\n            color=\"secondary\"\r\n            outline\r\n            onClick={toggleSidebar}\r\n          >\r\n            <FormattedMessage id=\"Cancel\" />\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </Sidebar>\r\n  );\r\n};\r\n\r\nexport default injectIntl(SidebarNewKind);\r\n","import { Edit, MoreVertical, Search } from \"react-feather\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Badge,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\n\r\nconst statusObj = {\r\n  1: {\r\n    class: \"light-success\",\r\n    text: <FormattedMessage id=\"Active\" />,\r\n  },\r\n  0: {\r\n    class: \"light-warning\",\r\n    text: <FormattedMessage id=\"Deactive\" />,\r\n  },\r\n  2: {\r\n    class: \"light-secondary\",\r\n\r\n    text: <FormattedMessage id=\"Blocked\" />,\r\n  },\r\n};\r\n\r\nexport const columns = [\r\n  {\r\n    name: <FormattedMessage id=\"Solution\" />,\r\n    minWidth: \"120px\",\r\n    selector: \"name\",\r\n    cell: (row) => row.name,\r\n  },\r\n  {\r\n    name: <FormattedMessage id=\"status\" />,\r\n    minWidth: \"170px\",\r\n    selector: \"status\",\r\n    cell: (row) => (\r\n      <Badge className=\"text-capitalize\" color={statusObj[row.status]?.class}>\r\n        {statusObj[row.status]?.text}\r\n      </Badge>\r\n    ),\r\n  },\r\n  {\r\n    name: <FormattedMessage id=\"actions\" />,\r\n    minWidth: \"100px\",\r\n\r\n    cell: (row) => {\r\n      return (\r\n        row?.id && (\r\n          <div className=\"mh-100 d-flex align-items-center justify-content-center mw-100\">\r\n            <Badge\r\n              className=\" w-100\"\r\n              pill\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 25px\" }}\r\n            >\r\n              <Link\r\n                className=\"text-edit hover:text-white\"\r\n                to={`/apps/kind/edit/${row.id}`}\r\n              >\r\n                {\" \"}\r\n                <FormattedMessage id=\"edit\" />\r\n              </Link>\r\n            </Badge>\r\n          </div>\r\n        )\r\n      );\r\n    },\r\n  },\r\n];\r\n","import ExtensionsHeader from \"@components/extensions-header\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport { columns } from \"./columns\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getData } from \"../store/action\";\r\n\r\nimport DataTable from \"react-data-table-component\";\r\nimport { ChevronDown } from \"react-feather\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Col,\r\n  Input,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport \"@styles/react/libs/react-select/_react-select.scss\";\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst CustomHeader = ({ toggleSidebar }) => {\r\n  return (\r\n    <div className=\"invoice-list-table-header w-100 mr-1 ml-50 mt-1 mb-75\">\r\n      <Row className=\"justify-content-end\">\r\n        <Col\r\n          xl=\"6\"\r\n          className=\"d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1\"\r\n        >\r\n          <Button.Ripple color=\"primary\" onClick={toggleSidebar}>\r\n            <FormattedMessage id=\"Add\" />\r\n          </Button.Ripple>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst KindList = ({ intl }) => {\r\n  const dispatch = useDispatch();\r\n  const store = useSelector((state) => state.kind);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(20);\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  const [disable, setDisable] = useState(false);\r\n  const lang = useSelector((state) => state.common.language);\r\n  const [filterStatus, setFilterStatus] = useState({\r\n    value: \"\",\r\n    label: <FormattedMessage id=\"status\" />,\r\n  });\r\n  const [searchName, setSearchName] = useState(null);\r\n\r\n  const [loadData, setLoadData] = useState(false);\r\n  const toggleSidebar = () => {\r\n    setSidebarOpen(!sidebarOpen);\r\n    setDisable(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      getData({\r\n        filter: {\r\n          status: filterStatus.value || undefined,\r\n          name: searchName || undefined,\r\n          lang,\r\n        },\r\n        skip: (currentPage - 1) * rowsPerPage,\r\n        limit: rowsPerPage,\r\n        order: {\r\n          key: \"status\",\r\n          value: \"asc\",\r\n        },\r\n      })\r\n    );\r\n  }, [loadData, currentPage, rowsPerPage, lang]);\r\n\r\n  useEffect(() => {\r\n    switch (store?.type) {\r\n      case \"ADD_KIND\":\r\n        if (store?.status == 200) {\r\n          toast.success(<FormattedMessage id={\"successfully added new!\"} />);\r\n          setLoadData(!loadData);\r\n          toggleSidebar();\r\n        } else if (store?.status == 400) {\r\n          toast.warn(<FormattedMessage id={\"Add new failure!\"} />);\r\n        }\r\n        break;\r\n      case \"UPDATE_KIND\":\r\n        if (store?.status == 200) {\r\n          toast.success(<FormattedMessage id={\"Update successful!\"} />);\r\n          setLoadData(!loadData);\r\n        } else if (store?.status == 400) {\r\n          toast.warn(<FormattedMessage id={\"Update failed!\"} />);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [store.status]);\r\n\r\n  const statusOptions = [\r\n    { value: \"\", label: <FormattedMessage id=\"Select status\" /> },\r\n    { value: \"0\", label: <FormattedMessage id=\"Deactive\" /> },\r\n    { value: \"1\", label: <FormattedMessage id=\"Active\" /> },\r\n    { value: \"2\", label: <FormattedMessage id=\"Blocked\" /> },\r\n  ];\r\n\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value);\r\n    setRowsPerPage(value);\r\n  };\r\n  const count = Number(Math.ceil(store.total / rowsPerPage));\r\n\r\n  const dataToRender = () => {\r\n    if (store?.data?.length > 0) {\r\n      return store?.data;\r\n    }\r\n  };\r\n  const isSearchable = (event) => {\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-user-list\">\r\n      <ExtensionsHeader title={<FormattedMessage id=\"Solution\" />} />\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag=\"h4\">\r\n            <FormattedMessage id=\"Filters\" />\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <Input\r\n                id=\"search-invoice\"\r\n                className=\" w-100\"\r\n                placeholder={intl.formatMessage({ id: \"Solution\" })}\r\n                type=\"text\"\r\n                value={searchName}\r\n                onChange={(e) => {\r\n                  setSearchName(e.target.value);\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <Select\r\n                isClearable={false}\r\n                className=\"react-select\"\r\n                classNamePrefix=\"select\"\r\n                options={statusOptions}\r\n                value={filterStatus}\r\n                onChange={(data) => {\r\n                  setFilterStatus(data);\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  setLoadData(!loadData);\r\n                  setCurrentPage(1);\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"Search\" />\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Card>\r\n        <DataTable\r\n          noHeader\r\n          subHeader\r\n          responsive\r\n          highlightOnHover\r\n          noDataComponent={\r\n            <div className=\"sc-fznWqX gnahTY\">\r\n              <div className=\"sc-AxjAm gIMaKV rdt_Table\" role=\"table\">\r\n                <div className=\"sc-fzqARJ icdHOq\">\r\n                  <div\r\n                    style={{\r\n                      padding: \"25px \",\r\n                      textAlign: \"center\",\r\n                      color: \"black\",\r\n                      background: \"white\",\r\n                    }}\r\n                  >\r\n                    <FormattedMessage id={\"There are no records to display\"} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n          paginationServer\r\n          columns={columns}\r\n          sortIcon={<ChevronDown />}\r\n          className=\"react-dataTable\"\r\n          data={dataToRender()}\r\n          subHeaderComponent={\r\n            <CustomHeader\r\n              toggleSidebar={toggleSidebar}\r\n              handlePerPage={handlePerPage}\r\n              rowsPerPage={rowsPerPage}\r\n              searchTerm={searchTerm}\r\n            />\r\n          }\r\n        />\r\n      </Card>\r\n      {count > 0 && (\r\n        <ReactPaginate\r\n          previousLabel={\"\"}\r\n          nextLabel={\"\"}\r\n          pageCount={count || 0}\r\n          activeClassName=\"active\"\r\n          forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n          onPageChange={(page) => setCurrentPage(page.selected + 1)}\r\n          pageClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item next\"}\r\n          previousClassName={\"page-item prev\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          containerClassName={\r\n            \"pagination react-paginate justify-content-center my-2 pr-1\"\r\n          }\r\n        />\r\n      )}\r\n      <Sidebar\r\n        open={sidebarOpen}\r\n        toggleSidebar={toggleSidebar}\r\n        {...{\r\n          disable,\r\n          setDisable,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default injectIntl(KindList);\r\n","import { FormattedMessage } from \"react-intl\";\r\nimport REGEX from \"./regex\";\r\nimport { number } from \"yup\";\r\nconst validateOptions = {\r\n  AboutOptions: {\r\n    about: {\r\n      // required: <FormattedMessage id=\"The about title field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"About title up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  PartnerOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DocumentOptions: {\r\n    label: {\r\n      required: <FormattedMessage id=\"the label field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Label up to 255 characters\" />,\r\n      },\r\n    },\r\n\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n\r\n    short_content: {\r\n      required: <FormattedMessage id=\"the short content field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DiscountOptions: {\r\n    discount: {\r\n      required: <FormattedMessage id=\"the discount field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"The discount is not suitable\" />,\r\n      },\r\n    },\r\n    time: {\r\n      required: <FormattedMessage id=\"The time price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  PriceOptions: {\r\n    price: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n    },\r\n  },\r\n  Document_Link_Options: {\r\n    document_link: {\r\n      required: (\r\n        <FormattedMessage id=\"The time document link field is required\" />\r\n      ),\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  CategoryOptions: {\r\n    code: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n\r\n    message_content: {\r\n      maxLength: {\r\n        value: 30,\r\n        message: <FormattedMessage id=\"Category must be 30 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  BranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n    // short_content: {\r\n    //   required: <FormattedMessage id=\"the short content field is required\" />,\r\n    //   validate: (value) => !REGEX.TITLE.test(value),\r\n    //   maxLength: {\r\n    //     value: 255,\r\n\r\n    //     message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n    //   },\r\n    // },\r\n    // content: {\r\n    //   required: <FormattedMessage id=\"the content field is required\" />,\r\n    //   maxLength: {\r\n    //     value: 3000,\r\n    //     message: <FormattedMessage id=\"Content up to 3000 characters\" />,\r\n    //   },\r\n    // },\r\n  },\r\n\r\n  EditBranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n  },\r\n\r\n  Document_course: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditCategoryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n      // pattern: {\r\n      //   value: REGEX.NAME2,\r\n      //   message: <FormattedMessage id=\"Invalid category name\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditDocumentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    author: {\r\n      required: <FormattedMessage id=\"The Author name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Author name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Author must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  EditQuizOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    contenttext: {\r\n      required: <FormattedMessage id=\"The content field is required\" />,\r\n    },\r\n    answer: {\r\n      required: <FormattedMessage id=\"The answer field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  TermOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    //Học phần\r\n  },\r\n  KindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditKindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  TranscriptOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditTranscriptOptions: {\r\n    student_code: {\r\n      required: <FormattedMessage id=\"The student code field is required\" />,\r\n    },\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  CertificateOptions: {},\r\n  UserCertificateOptions: {},\r\n\r\n  EditCertificateOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"The title must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"The title must be 70 characters max\" />,\r\n      },\r\n    },\r\n    provider: {\r\n      required: <FormattedMessage id=\"Provider field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Provider must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Provider must be 70 characters max\" />,\r\n      },\r\n    },\r\n    position: {\r\n      required: <FormattedMessage id=\"Position field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Position must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Position must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  ProductOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The product's name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Product name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Product name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    vat: {\r\n      required: <FormattedMessage id=\"The VAT field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"VAT more than 0\" />,\r\n      },\r\n      max: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"VAT less than 100\" />,\r\n      },\r\n    },\r\n    number_trial: {\r\n      // required: <FormattedMessage id=\"The Number day field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be greater than or equal to 0\" />\r\n        ),\r\n      },\r\n      max: {\r\n        value: 30,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be less than or equal to 30\" />\r\n        ),\r\n      },\r\n      validate: (value) =>\r\n        value >= 0 || (\r\n          <FormattedMessage id=\"Number day must be a positive number\" />\r\n        ),\r\n    },\r\n    categoryId: {\r\n      required: <FormattedMessage id=\"The category field is required\" />,\r\n      min: {\r\n        value: 0,\r\n      },\r\n    },\r\n    service_price_local: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n\r\n    service_price_cloud: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n  },\r\n  VersionOptions: {\r\n    version: {\r\n      required: <FormattedMessage id=\"The version field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Version up to 255 characters\" />,\r\n      },\r\n    },\r\n    infor: {\r\n      maxLength: {\r\n        value: 500,\r\n        message: <FormattedMessage id=\"Information up to 500 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  StaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditStaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  UserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|\\\\d)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditUserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  CityOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The city name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The city code field is required\" />,\r\n      alidate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n  },\r\n  CountryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The country name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The country code field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    phone_code: {\r\n      required: <FormattedMessage id=\"The phone code field is required\" />,\r\n      validate: (value) => REGEX.PHONE_CODE.test(value),\r\n    },\r\n  },\r\n  StudentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    date: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    },\r\n    // gender: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // courseId: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // formality: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n  },\r\n\r\n  CloudOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The cloud name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Cloud name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Cloud name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    // vat: {\r\n    //   required: <FormattedMessage id=\"The VAT field is required\" />,\r\n    //   min: {\r\n    //     value: 0,\r\n    //     message: <FormattedMessage id=\"VAT more than 0\" />,\r\n    //   },\r\n    //   max: {\r\n    //     value: 100,\r\n    //     message: <FormattedMessage id=\"VAT less than 100\" />,\r\n    //   },\r\n    // },\r\n  },\r\n};\r\nexport default validateOptions;\r\n","// ** React Imports\r\nimport Proptypes from 'prop-types'\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nconst ExtensionsHeader = props => {\r\n  return (\r\n    <Row className='mb-2'>\r\n      <Col sm='12' className='ml-50'>\r\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\r\n          {props.title}\r\n        </p>\r\n        {props.link ? (\r\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\r\n            {props.subTitle}\r\n          </a>\r\n        ) : (\r\n          <p className='text-primary'>{props.subTitle}</p>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default ExtensionsHeader\r\n\r\n// ** PropTypes\r\nExtensionsHeader.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  subTitle: Proptypes.string.isRequired,\r\n  link: Proptypes.string\r\n}\r\n","// ** Third Party Components\r\nimport { X } from 'react-feather'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const {\r\n    width,\r\n    open,\r\n    toggleSidebar,\r\n    size,\r\n    bodyClassName,\r\n    contentClassName,\r\n    wrapperClassName,\r\n    headerClassName,\r\n    className,\r\n    title,\r\n    children,\r\n    closeBtn,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** If user passes custom close btn render that else default close btn\r\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={open}\r\n      // toggle={toggleSidebar}\r\n      contentClassName={classnames({\r\n        [contentClassName]: contentClassName\r\n      })}\r\n      modalClassName={classnames('modal-slide-in', {\r\n        [wrapperClassName]: wrapperClassName\r\n      })}\r\n      className={classnames({\r\n        [className]: className,\r\n        'sidebar-lg': size === 'lg',\r\n        'sidebar-sm': size === 'sm'\r\n      })}\r\n      /*eslint-disable */\r\n      {...(width !== undefined\r\n        ? {\r\n            style: { width: String(width) + 'px' }\r\n          }\r\n        : {})}\r\n      /*eslint-enable */\r\n      {...rest}\r\n    >\r\n      <ModalHeader\r\n        className={classnames({\r\n          [headerClassName]: headerClassName\r\n        })}\r\n        toggle={toggleSidebar}\r\n        close={renderCloseBtn}\r\n        tag='div'\r\n      >\r\n        <h5 className='modal-title'>\r\n          <span className='align-middle'>{title}</span>\r\n        </h5>\r\n      </ModalHeader>\r\n      <ModalBody\r\n        className={classnames('flex-grow-1', {\r\n          [bodyClassName]: bodyClassName\r\n        })}\r\n      >\r\n        {children}\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n\r\n// ** PropTypes\r\nSidebar.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  open: Proptypes.bool.isRequired,\r\n  toggleSidebar: Proptypes.func.isRequired,\r\n  size: Proptypes.oneOf(['sm', 'lg']),\r\n  className: Proptypes.string,\r\n  bodyClassName: Proptypes.string,\r\n  contentClassName: Proptypes.string,\r\n  wrapperClassName: Proptypes.string,\r\n  children: Proptypes.any.isRequired,\r\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\r\n}\r\n","import api from \"../../../../../constants/api\";\r\nimport Service from \"../../../../../services/request\";\r\n\r\nexport const getData = (params) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.LIST_KIND.method,\r\n      path: api.LIST_KIND.path,\r\n      data: params,\r\n    }).then((response) => {\r\n      dispatch({\r\n        type: \"GET_DATA_KIND\",\r\n        data: response?.data?.data,\r\n        totalPages: response?.data?.total,\r\n        params,\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const getKind = (id) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.GET_KIND.method,\r\n      path: api.GET_KIND.path,\r\n      query: { id },\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"GET_KIND\",\r\n          selected: response?.data,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const addKind = (Kind) => {\r\n  return async (dispatch, getState) => {\r\n    await Service.send({\r\n      method: api.CREATE_KIND.method,\r\n      path: api.CREATE_KIND.path,\r\n      data: Kind,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"ADD_KIND\",\r\n          response,\r\n        });\r\n      })\r\n      .catch((err) =>\r\n        dispatch({\r\n          type: \"ADD_KIND\",\r\n          err,\r\n        })\r\n      );\r\n  };\r\n};\r\nexport const updateKind = (Kind) => {\r\n  return async (dispatch, getState) => {\r\n    await Service.send({\r\n      method: api.UPDATE_KIND.method,\r\n      path: api.UPDATE_KIND.path,\r\n      data: Kind,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"UPDATE_KIND\",\r\n          response,\r\n        });\r\n      })\r\n\r\n      .catch((err) =>\r\n        dispatch({\r\n          type: \"UPDATE_KIND\",\r\n          err,\r\n        })\r\n      );\r\n  };\r\n};\r\n\r\n\r\n"],"sourceRoot":""}