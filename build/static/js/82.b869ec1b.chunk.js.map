{"version":3,"sources":["views/apps/cms/home/partner/edit/Partner.js","views/apps/cms/home/partner/edit/index.js","constants/validate.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js","../node_modules/reactstrap/es/Alert.js","../node_modules/reactstrap/es/Nav.js","views/apps/cms/home/partner/store/action/index.js"],"names":["PartneTab","_ref","selected","_useForm","useForm","register","errors","handleSubmit","history","useHistory","_useState","useState","_useState2","_slicedToArray","sliderData","seSliderData","_useState3","_useState4","disable","setDisable","dispatch","useDispatch","PartnerOptions","validateOptions","_useState5","_useState6","avatar","setAvatar","_useState7","_useState8","fileImage","setFileImage","store","useSelector","state","partners","onChange","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","imageBase64","wrap","_context","prev","next","convertFileToBase64","target","files","sent","stop","_x","apply","arguments","useEffect","_store$err","err","statusCode","status","goBack","id","image","onSubmit","_ref3","_callee2","values","urlImage","newData","_fileImage$type","data","_context2","isObjEmpty","replace","split","length","imageData","imageFormat","type","uploadImage","then","res","update","parseInt","_objectSpread","priority_index","_x2","_jsxs","Row","children","_jsx","Col","sm","Media","className","body","Form","FormGroup","Label","for","FormattedMessage","Input","name","placeholder","innerRef","onBlur","partnerName2","document","getElementById","value","trim","classNames","defaultValue","message","required","title","left","object","src","height","width","Button","Ripple","tag","color","hidden","accept","style","textAlign","disabled","outline","onClick","PartnerEdit","activeTab","setActiveTab","useParams","getById","undefined","Card","CardBody","Nav","pills","NavItem","NavLink","active","User","size","TabContent","TabPane","tabId","Alert","AboutOptions","about","maxLength","DocumentOptions","label","validate","REGEX","TITLE","test","sort_order","pattern","short_content","DiscountOptions","discount","min","time","PriceOptions","price","Document_Link_Options","document_link","CategoryOptions","code","minLength","message_content","BranchOptions","code_branch","email","EMAIL","phone","addpress","EditBranchOptions","Document_course","EditCategoryOptions","EditDocumentOptions","author","EditQuizOptions","contenttext","answer","TermOptions","KindOptions","EditKindOptions","TranscriptOptions","score","EditTranscriptOptions","student_code","CertificateOptions","UserCertificateOptions","EditCertificateOptions","provider","position","ProductOptions","product_name","NAME2","alidate","SPACE","vat","max","number_trial","categoryId","service_price_local","PRICE","service_price_cloud","VersionOptions","version","infor","StaffOptions","last_name","NAME","first_name","username","USERNAME","password","EditStaffOptions","UserOptions","PASSWORD","EditUserOptions","CityOptions","CountryOptions","phone_code","PHONE_CODE","StudentOptions","date","CloudOptions","TabContext","React","createContext","propTypes","tagPropType","PropTypes","string","cssModule","oneOfType","func","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","createElement","_extends","ref","defaultProps","any","_Component","_this","call","this","_inheritsLoose","getDerivedStateFromProps","nextProps","prevState","prototype","render","_this$props","omit","Object","keys","Provider","activeTabId","Component","getClasses","Consumer","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","i","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","node","closeClassName","closeAriaLabel","fade","bool","isOpen","toggle","transition","shape","Fade","unmountOnExit","closeClasses","alertTransition","baseClass","timeout","in","role","tabs","vertical","horizontal","justified","fill","navbar","card","getVerticalClass","getData","params","Service","send","method","api","LIST_PARTNER","path","response","_response$data","totalPages","total","GET_PARTNER","query","catch","console","log","add","_callee3","_context3","CREATE_PARTNER","_x3","_ref4","_callee4","_context4","UPDATE_PARTNER","_x4","remove","_ref5","_callee5","getState","_context5","DELETE_PARTNER","_x5","_x6"],"mappings":"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","file":"static/js/82.b869ec1b.chunk.js","sourcesContent":["import { isObjEmpty } from \"@utils\";\r\nimport classNames from \"classnames\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Media,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport validateOptions from \"../../../../../../constants/validate\";\r\nimport {\r\n  convertFileToBase64,\r\n  uploadImage,\r\n} from \"../../../../../../helper/common\";\r\nimport { update } from \"../store/action\";\r\n\r\nconst PartneTab = ({ selected }) => {\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const history = useHistory();\r\n  const [sliderData, seSliderData] = useState(null);\r\n  const [disable, setDisable] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const PartnerOptions = validateOptions.PartnerOptions;\r\n  const [avatar, setAvatar] = useState();\r\n\r\n  const [fileImage, setFileImage] = useState();\r\n  const store = useSelector((state) => state.partners);\r\n  const onChange = async (e) => {\r\n    const imageBase64 = await convertFileToBase64(e.target.files[0]);\r\n    setFileImage(e.target.files[0]);\r\n    setAvatar(imageBase64);\r\n  };\r\n  useEffect(() => {\r\n    if (store?.err?.statusCode) {\r\n      setDisable(false);\r\n    }\r\n  }, [store?.err]);\r\n  useEffect(() => {\r\n    if (store.status == 200) {\r\n      history.goBack();\r\n    }\r\n  }, [store.status]);\r\n  useEffect(() => {\r\n    if (\r\n      selected !== null ||\r\n      (selected !== null &&\r\n        sliderData !== null &&\r\n        selected.id !== sliderData.id)\r\n    ) {\r\n      seSliderData(selected);\r\n    }\r\n  }, [selected]);\r\n\r\n  useEffect(() => {\r\n    if (sliderData) {\r\n      setAvatar(sliderData.image);\r\n    }\r\n  }, [sliderData]);\r\n\r\n  const onSubmit = async (values) => {\r\n    if (isObjEmpty(errors)) {\r\n      setDisable(true);\r\n      var urlImage = \"\";\r\n      if (avatar) {\r\n        const newData = avatar.replace(/,/gi, \"\").split(\"base64\");\r\n        if (newData.length > 1 && newData[1]) {\r\n          const data = {\r\n            imageData: newData[1],\r\n            imageFormat: fileImage?.type?.split(\"/\")[1] || \"png\",\r\n          };\r\n          await uploadImage(data, fileImage).then((res) => {\r\n            urlImage = res?.data;\r\n          });\r\n        } else {\r\n          urlImage = avatar;\r\n        }\r\n        if (urlImage) {\r\n          dispatch(\r\n            update({\r\n              id: parseInt(sliderData.id),\r\n              data: {\r\n                ...values,\r\n                image: urlImage,\r\n                priority_index: parseInt(values?.priority_index),\r\n              },\r\n            })\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\">\r\n        <Media className=\"mb-2\">\r\n          <Media className=\"mt-50\" body></Media>\r\n        </Media>\r\n      </Col>\r\n      <Col sm=\"12\">\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <FormGroup>\r\n            <Label for=\"name\">\r\n              <FormattedMessage id=\"name\" />{\" \"}\r\n              <span className=\"text-danger\">*</span>\r\n            </Label>\r\n            <Input\r\n              name=\"name\"\r\n              id=\"name\"\r\n              placeholder=\" \"\r\n              innerRef={register(PartnerOptions.name)}\r\n              onBlur={() => {\r\n                let partnerName2 = document.getElementById(\"name\");\r\n                if (partnerName2 && partnerName2.value) {\r\n                  partnerName2.value = partnerName2.value.trim();\r\n                }\r\n              }}\r\n              className={classNames({ \"is-invalid\": errors[\"name\"] })}\r\n              defaultValue={sliderData && sliderData.name}\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.name && errors.name.message}\r\n            </small>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"index\">\r\n              <FormattedMessage id=\"index\" />{\" \"}\r\n            </Label>\r\n            <Input\r\n              name=\"priority_index\"\r\n              id=\"priority_index\"\r\n              placeholder=\" \"\r\n              innerRef={register({\r\n                required: false,\r\n              })}\r\n              onBlur={() => {\r\n                let title = document.getElementById(\"priority_index\");\r\n                if (title && title.value) {\r\n                  title.value = title.value.trim();\r\n                }\r\n              }}\r\n              className={classNames({ \"is-invalid\": errors[\"priority_index\"] })}\r\n              defaultValue={selected?.priority_index}\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.title && errors.title.message}\r\n            </small>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"Image\">\r\n              <FormattedMessage id=\"Image\" />\r\n            </Label>\r\n            <Row className=\"align-items-end p-1\">\r\n              <Media className=\"mr-25\" left>\r\n                <Media\r\n                  object\r\n                  className=\"rounded mr-50 objectFit-contain\"\r\n                  src={avatar}\r\n                  height=\"100\"\r\n                  width=\"100\"\r\n                />\r\n              </Media>{\" \"}\r\n              <Row className=\"flex-column px-1\">\r\n                <Button.Ripple tag={Label} className=\"mt-1\" color=\"primary\">\r\n                  <FormattedMessage id=\"Upload\" />\r\n                  <Input\r\n                    type=\"file\"\r\n                    onChange={(e) => onChange(e)}\r\n                    hidden\r\n                    accept=\"image/*\"\r\n                  />\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Row>\r\n          </FormGroup>\r\n\r\n          <div style={{ textAlign: \"end\" }}>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mr-1\"\r\n              color=\"primary\"\r\n              disabled={disable}\r\n            >\r\n              <FormattedMessage id=\"update\" />\r\n            </Button>\r\n            <Button\r\n              type=\"reset\"\r\n              color=\"secondary\"\r\n              outline\r\n              onClick={() => history.goBack()}\r\n            >\r\n              <FormattedMessage id=\"cancel\" />\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default PartneTab;\r\n","import { useEffect, useState } from \"react\";\r\nimport { User } from \"react-feather\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Alert,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\nimport { getById } from \"../store/action\";\r\nimport PartneTab from \"./Partner\";\r\nconst PartnerEdit = () => {\r\n  const [activeTab, setActiveTab] = useState(\"1\"),\r\n    store = useSelector((state) => state.partners),\r\n    dispatch = useDispatch(),\r\n    { id } = useParams();\r\n  const toggle = (tab) => setActiveTab(tab);\r\n  useEffect(() => {\r\n    dispatch(\r\n      getById({\r\n        id: parseInt(id),\r\n      })\r\n    );\r\n  }, []);\r\n  return store.selected !== null && store.selected !== undefined ? (\r\n    <Row className=\"app-user-edit\">\r\n      <Col sm=\"12\">\r\n        <Card>\r\n          <CardBody className=\"pt-2\">\r\n            <Nav pills>\r\n              <NavItem>\r\n                <NavLink active={activeTab === \"1\"} onClick={() => toggle(\"1\")}>\r\n                  <User size={14} />\r\n                  <span className=\"align-middle d-none d-sm-block\">\r\n                    <FormattedMessage id=\"Partner\" />\r\n                  </span>\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <PartneTab selected={store.selected} />\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  ) : (\r\n    <Alert color=\"danger\">\r\n      <h4 className=\"alert-heading\">Not found</h4>\r\n    </Alert>\r\n  );\r\n};\r\nexport default PartnerEdit;\r\n","import { FormattedMessage } from \"react-intl\";\r\nimport REGEX from \"./regex\";\r\nimport { number } from \"yup\";\r\nconst validateOptions = {\r\n  AboutOptions: {\r\n    about: {\r\n      // required: <FormattedMessage id=\"The about title field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"About title up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  PartnerOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DocumentOptions: {\r\n    label: {\r\n      required: <FormattedMessage id=\"the label field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Label up to 255 characters\" />,\r\n      },\r\n    },\r\n\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n\r\n    short_content: {\r\n      required: <FormattedMessage id=\"the short content field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DiscountOptions: {\r\n    discount: {\r\n      required: <FormattedMessage id=\"the discount field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"The discount is not suitable\" />,\r\n      },\r\n    },\r\n    time: {\r\n      required: <FormattedMessage id=\"The time price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  PriceOptions: {\r\n    price: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n    },\r\n  },\r\n  Document_Link_Options: {\r\n    document_link: {\r\n      required: (\r\n        <FormattedMessage id=\"The time document link field is required\" />\r\n      ),\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  CategoryOptions: {\r\n    code: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n\r\n    message_content: {\r\n      maxLength: {\r\n        value: 30,\r\n        message: <FormattedMessage id=\"Category must be 30 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  BranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n    // short_content: {\r\n    //   required: <FormattedMessage id=\"the short content field is required\" />,\r\n    //   validate: (value) => !REGEX.TITLE.test(value),\r\n    //   maxLength: {\r\n    //     value: 255,\r\n\r\n    //     message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n    //   },\r\n    // },\r\n    // content: {\r\n    //   required: <FormattedMessage id=\"the content field is required\" />,\r\n    //   maxLength: {\r\n    //     value: 3000,\r\n    //     message: <FormattedMessage id=\"Content up to 3000 characters\" />,\r\n    //   },\r\n    // },\r\n  },\r\n\r\n  EditBranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n  },\r\n\r\n  Document_course: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditCategoryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n      // pattern: {\r\n      //   value: REGEX.NAME2,\r\n      //   message: <FormattedMessage id=\"Invalid category name\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditDocumentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    author: {\r\n      required: <FormattedMessage id=\"The Author name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Author name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Author must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  EditQuizOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    contenttext: {\r\n      required: <FormattedMessage id=\"The content field is required\" />,\r\n    },\r\n    answer: {\r\n      required: <FormattedMessage id=\"The answer field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  TermOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    //Học phần\r\n  },\r\n  KindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditKindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  TranscriptOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditTranscriptOptions: {\r\n    student_code: {\r\n      required: <FormattedMessage id=\"The student code field is required\" />,\r\n    },\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  CertificateOptions: {},\r\n  UserCertificateOptions: {},\r\n\r\n  EditCertificateOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"The title must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"The title must be 70 characters max\" />,\r\n      },\r\n    },\r\n    provider: {\r\n      required: <FormattedMessage id=\"Provider field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Provider must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Provider must be 70 characters max\" />,\r\n      },\r\n    },\r\n    position: {\r\n      required: <FormattedMessage id=\"Position field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Position must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Position must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  ProductOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The product's name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Product name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Product name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    vat: {\r\n      required: <FormattedMessage id=\"The VAT field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"VAT more than 0\" />,\r\n      },\r\n      max: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"VAT less than 100\" />,\r\n      },\r\n    },\r\n    number_trial: {\r\n      // required: <FormattedMessage id=\"The Number day field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be greater than or equal to 0\" />\r\n        ),\r\n      },\r\n      max: {\r\n        value: 30,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be less than or equal to 30\" />\r\n        ),\r\n      },\r\n      validate: (value) =>\r\n        value >= 0 || (\r\n          <FormattedMessage id=\"Number day must be a positive number\" />\r\n        ),\r\n    },\r\n    categoryId: {\r\n      required: <FormattedMessage id=\"The category field is required\" />,\r\n      min: {\r\n        value: 0,\r\n      },\r\n    },\r\n    service_price_local: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n\r\n    service_price_cloud: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n  },\r\n  VersionOptions: {\r\n    version: {\r\n      required: <FormattedMessage id=\"The version field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Version up to 255 characters\" />,\r\n      },\r\n    },\r\n    infor: {\r\n      maxLength: {\r\n        value: 500,\r\n        message: <FormattedMessage id=\"Information up to 500 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  StaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditStaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  UserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|\\\\d)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditUserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  CityOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The city name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The city code field is required\" />,\r\n      alidate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n  },\r\n  CountryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The country name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The country code field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    phone_code: {\r\n      required: <FormattedMessage id=\"The phone code field is required\" />,\r\n      validate: (value) => REGEX.PHONE_CODE.test(value),\r\n    },\r\n  },\r\n  StudentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    date: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    },\r\n    // gender: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // courseId: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // formality: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n  },\r\n\r\n  CloudOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The cloud name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Cloud name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Cloud name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    // vat: {\r\n    //   required: <FormattedMessage id=\"The VAT field is required\" />,\r\n    //   min: {\r\n    //     value: 0,\r\n    //     message: <FormattedMessage id=\"VAT more than 0\" />,\r\n    //   },\r\n    //   max: {\r\n    //     value: 100,\r\n    //     message: <FormattedMessage id=\"VAT less than 100\" />,\r\n    //   },\r\n    // },\r\n  },\r\n};\r\nexport default validateOptions;\r\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabId\", \"tag\"]);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread(_objectSpread({}, Fade.defaultProps), {}, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread(_objectSpread(_objectSpread({}, Fade.defaultProps), transition), {}, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return /*#__PURE__*/React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import api from \"../../../../../../../constants/api\";\r\nimport Service from \"../../../../../../../services/request\";\r\nexport const getData = (params) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.LIST_PARTNER.method,\r\n      path: api.LIST_PARTNER.path,\r\n      data: params,\r\n    }).then((response) => {\r\n      dispatch({\r\n        type: \"GET_DATA_PARTNER\",\r\n        data: response?.data,\r\n        totalPages: response?.data?.total,\r\n        params,\r\n      });\r\n    });\r\n  };\r\n};\r\nexport const getById = (params) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.GET_PARTNER.method,\r\n      path: api.GET_PARTNER.path,\r\n      query: params,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"GET_PARTNER\",\r\n          selected: response?.data,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\nexport const add = (data) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.CREATE_PARTNER.method,\r\n      path: api.CREATE_PARTNER.path,\r\n      data,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"ADD_PARTNER\",\r\n          response,\r\n        });\r\n      })\r\n\r\n      .catch((err) =>\r\n        dispatch({\r\n          type: \"ADD_PARTNER\",\r\n          err,\r\n        })\r\n      );\r\n  };\r\n};\r\nexport const update = (data) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.UPDATE_PARTNER.method,\r\n      path: api.UPDATE_PARTNER.path,\r\n      data,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"UPDATE_PARTNER\",\r\n          response,\r\n        });\r\n      })\r\n\r\n      .catch((err) =>\r\n        dispatch({\r\n          type: \"UPDATE_PARTNER\",\r\n          err,\r\n        })\r\n      );\r\n  };\r\n};\r\nexport const remove = (params) => {\r\n  return async (dispatch, getState) => {\r\n    await Service.send({\r\n      method: api.DELETE_PARTNER.method,\r\n      path: api.DELETE_PARTNER.path,\r\n      query: params,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"DELETE_PARTNER\",\r\n          response,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n"],"sourceRoot":""}