{"version":3,"sources":["views/apps/categoryProduct/edit/CategoryProduct.js","views/apps/categoryProduct/edit/index.js","constants/validate.js","views/apps/categoryProduct/store/action/index.js"],"names":["injectIntl","_ref","_errors$name","selected","intl","store","useSelector","state","categoryProduct","_useForm","useForm","register","errors","handleSubmit","history","useHistory","_useState","useState","_useState2","_slicedToArray","categoryProductData","setCategoryProductData","lang","common","language","dispatch","useDispatch","_useState3","_useState4","status","setStatus","_useState5","_useState6","disable","setDisable","id","useParams","EditCategoryOptions","validateOptions","useEffect","_store$err","err","statusCode","_useState7","EditorState","createEmpty","_useState8","valueDescription","setValueDescription","scrollToTop","push","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","description","wrap","_context","prev","next","draftToHtml","convertToRaw","getCurrentContent","isObjEmpty","updateCategoryProduct","parseInt","data","_objectSpread","name","stop","_x","apply","arguments","htmlToDraftUtil","_jsxs","Row","children","_jsx","Col","sm","Media","className","body","Form","FormGroup","Label","for","FormattedMessage","Input","innerRef","onBlur","document","getElementById","value","trim","classnames","defaultValue","message","type","Editor","stripPastedStyles","toolbar","options","inline","inDropdown","editorState","onEditorStateChange","onChange","e","target","required","formatMessage","style","textAlign","marginTop","Button","color","disabled","outline","onClick","goBack","CategoryProductEdit","activeTab","setActiveTab","getCategoryProduct","undefined","Card","CardBody","Nav","pills","NavItem","NavLink","active","Archive","size","TabContent","TabPane","tabId","CategoryProductTab","Alert","AboutOptions","about","maxLength","PartnerOptions","DocumentOptions","label","validate","REGEX","TITLE","test","sort_order","pattern","short_content","DiscountOptions","discount","min","time","PriceOptions","price","Document_Link_Options","document_link","CategoryOptions","code","minLength","message_content","BranchOptions","code_branch","email","EMAIL","phone","addpress","EditBranchOptions","Document_course","EditDocumentOptions","author","EditQuizOptions","title","contenttext","answer","TermOptions","KindOptions","EditKindOptions","TranscriptOptions","score","EditTranscriptOptions","student_code","CertificateOptions","UserCertificateOptions","EditCertificateOptions","provider","position","ProductOptions","product_name","NAME2","alidate","SPACE","vat","max","number_trial","categoryId","service_price_local","PRICE","service_price_cloud","VersionOptions","version","infor","StaffOptions","last_name","NAME","first_name","username","USERNAME","password","EditStaffOptions","UserOptions","PASSWORD","EditUserOptions","CityOptions","CountryOptions","phone_code","PHONE_CODE","StudentOptions","date","CloudOptions","getListCategoryProduct","params","Service","send","method","api","LIST_CATEGORY_PRODUCT","path","then","response","_response$data","_response$data2","totalPages","total","_callee2","_context2","GET_CATEGORY_PRODUCT","query","catch","console","log","_x2","addCategoryProduct","CategoryProduct","_ref3","_callee3","_context3","CREATE_CATEGORY_PRODUCT","_x3","_ref4","_callee4","_context4","UPDATE_CATEGORY_PRODUCT","_x4"],"mappings":"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","file":"static/js/140.a2e6f83b.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\n\r\nimport { isObjEmpty, scrollToTop } from \"@utils\";\r\n\r\nimport classnames from \"classnames\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Media,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport validateOptions from \"../../../../constants/validate\";\r\nimport { updateCategoryProduct } from \"../store/action\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { convertToRaw, EditorState } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { htmlToDraftUtil } from \"../../../../utility/Utils\";\r\nimport {} from \"react-scroll-up\";\r\n\r\nconst CategoryProductTab = ({ selected, intl }) => {\r\n  const store = useSelector((state) => state.categoryProduct);\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const history = useHistory();\r\n  const [categoryProductData, setCategoryProductData] = useState(null);\r\n  const lang = useSelector((state) => state.common.language);\r\n  const dispatch = useDispatch();\r\n  const [status, setStatus] = useState(null);\r\n  const [disable, setDisable] = useState(false);\r\n  const { id } = useParams();\r\n  \r\n  const EditCategoryOptions = validateOptions.EditCategoryOptions;\r\n  \r\n  useEffect(() => {\r\n    if (store?.err?.statusCode) {\r\n      setDisable(false);\r\n    }\r\n  }, [store?.err]);\r\n\r\n  const [valueDescription, setValueDescription] = useState(\r\n    EditorState.createEmpty()\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (\r\n      selected !== null ||\r\n      (selected !== null &&\r\n        categoryProductData !== null &&\r\n        selected.id !== categoryProductData.id)\r\n    ) {\r\n      setCategoryProductData(selected);\r\n    }\r\n  }, [selected, categoryProductData]);\r\n\r\n  useEffect(() => {\r\n    if (store.status === 200) {\r\n      scrollToTop();\r\n      history.push(\"/apps/categoryProduct/list\");\r\n    }\r\n  }, [store.status, history]);\r\n\r\n  const onSubmit = async (values) => {\r\n    const description = draftToHtml(\r\n      convertToRaw(valueDescription.getCurrentContent())\r\n    );\r\n    if (isObjEmpty(errors)) {\r\n      setDisable(true);\r\n      dispatch(\r\n        updateCategoryProduct({\r\n          id: parseInt(id),\r\n          data: {\r\n            ...values,\r\n            name: values.name,\r\n            status: parseInt(values.status),\r\n            description: description,\r\n            lang,\r\n          },\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (categoryProductData) {\r\n      setStatus(categoryProductData.status);\r\n      setValueDescription(htmlToDraftUtil(categoryProductData?.description || \" \"));\r\n    }\r\n  }, [categoryProductData]);\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\">\r\n        <Media className=\"mb-2\">\r\n          <Media className=\"mt-50\" body>\r\n            <h4>{selected.name} </h4>\r\n          </Media>\r\n        </Media>\r\n      </Col>\r\n      <Col sm=\"12\">\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <FormGroup>\r\n            <Label for=\"name\">\r\n              <FormattedMessage id=\"catename\" />{\" \"}\r\n              <span className=\"text-danger\">*</span>\r\n            </Label>\r\n            <Input\r\n              name=\"name\"\r\n              id=\"name\"\r\n              innerRef={register(EditCategoryOptions.name)}\r\n              onBlur={() => {\r\n                let name = document.getElementById(\"name\");\r\n                if (name && name.value) {\r\n                  name.value = name.value.trim();\r\n                }\r\n              }}\r\n              className={classnames({ \"is-invalid\": errors[\"name\"] })}\r\n              defaultValue={categoryProductData && categoryProductData.name}\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.name && errors.name.message}\r\n            </small>\r\n            {errors?.name?.type === \"validate\" && (\r\n              <small className=\"text-danger\">\r\n                <FormattedMessage id=\"Invalid category name\" />\r\n              </small>\r\n            )}\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"description\">\r\n              <FormattedMessage id=\"Description\" />{\" \"}\r\n            </Label>\r\n\r\n            <Editor\r\n              stripPastedStyles={true}\r\n              toolbar={{\r\n                options: [\"inline\", \"textAlign\"],\r\n                inline: {\r\n                  inDropdown: false,\r\n                  options: [\"bold\", \"italic\", \"underline\"],\r\n                },\r\n              }}\r\n              editorState={valueDescription}\r\n              onEditorStateChange={(data) => setValueDescription(data)}\r\n              name=\"description\"\r\n              innerRef={register()}\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"status\">\r\n              <FormattedMessage id=\"Status\" />\r\n            </Label>\r\n\r\n            <Input\r\n              type=\"select\"\r\n              name=\"status\"\r\n              value={status}\r\n              onChange={(e) => setStatus(e.target.value)}\r\n              id=\"status\"\r\n              innerRef={register({ required: true })}\r\n            >\r\n              <option value=\"1\">{intl.formatMessage({ id: \"Active\" })}</option>\r\n\r\n              <option value=\"2\">{intl.formatMessage({ id: \"Blocked\" })}</option>\r\n            </Input>\r\n          </FormGroup>\r\n\r\n          <div style={{ textAlign: \"end\", marginTop: \"145px\" }}>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mr-1\"\r\n              color=\"primary\"\r\n              disabled={disable}\r\n            >\r\n              <FormattedMessage id=\"update\" />\r\n            </Button>\r\n            <Button\r\n              type=\"reset\"\r\n              color=\"secondary\"\r\n              outline\r\n              onClick={() => history.goBack()}\r\n            >\r\n              <FormattedMessage id=\"Cancel\" />\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default injectIntl(CategoryProductTab);\r\n","import { useEffect, useState } from \"react\";\r\nimport { Archive } from \"react-feather\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Alert,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\nimport { getCategoryProduct } from \"../store/action\";\r\nimport CategoryProductTab from \"./CategoryProduct\";\r\n\r\nconst CategoryProductEdit = () => {\r\n  const [activeTab, setActiveTab] = useState(\"1\"),\r\n    store = useSelector((state) => state.categoryProduct),\r\n    dispatch = useDispatch(),\r\n    { id } = useParams();\r\n\r\n  const toggle = (tab) => setActiveTab(tab);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategoryProduct(parseInt(id)));\r\n  }, [dispatch]);\r\n\r\n  return store.selected !== null && store.selected !== undefined ? (\r\n    <Row className=\"app-user-edit\">\r\n      <Col sm=\"12\">\r\n        <Card>\r\n          <CardBody className=\"pt-2\">\r\n            <Nav pills>\r\n              <NavItem>\r\n                <NavLink active={activeTab === \"1\"} onClick={() => toggle(\"1\")}>\r\n                  <Archive size={14} />\r\n                  <span className=\"align-middle d-none d-sm-block\">\r\n                    <FormattedMessage id=\"section content product\" />\r\n                  </span>\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <CategoryProductTab selected={store.selected} store={store} />\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  ) : (\r\n    <Alert color=\"danger\">\r\n      <h4 className=\"alert-heading\">Not found</h4>\r\n    </Alert>\r\n  );\r\n};\r\nexport default CategoryProductEdit;\r\n","import { FormattedMessage } from \"react-intl\";\r\nimport REGEX from \"./regex\";\r\nimport { number } from \"yup\";\r\nconst validateOptions = {\r\n  AboutOptions: {\r\n    about: {\r\n      // required: <FormattedMessage id=\"The about title field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"About title up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  PartnerOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DocumentOptions: {\r\n    label: {\r\n      required: <FormattedMessage id=\"the label field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Label up to 255 characters\" />,\r\n      },\r\n    },\r\n\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n\r\n    short_content: {\r\n      required: <FormattedMessage id=\"the short content field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DiscountOptions: {\r\n    discount: {\r\n      required: <FormattedMessage id=\"the discount field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"The discount is not suitable\" />,\r\n      },\r\n    },\r\n    time: {\r\n      required: <FormattedMessage id=\"The time price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  PriceOptions: {\r\n    price: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n    },\r\n  },\r\n  Document_Link_Options: {\r\n    document_link: {\r\n      required: (\r\n        <FormattedMessage id=\"The time document link field is required\" />\r\n      ),\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  CategoryOptions: {\r\n    code: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n\r\n    message_content: {\r\n      maxLength: {\r\n        value: 30,\r\n        message: <FormattedMessage id=\"Category must be 30 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  BranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n    // short_content: {\r\n    //   required: <FormattedMessage id=\"the short content field is required\" />,\r\n    //   validate: (value) => !REGEX.TITLE.test(value),\r\n    //   maxLength: {\r\n    //     value: 255,\r\n\r\n    //     message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n    //   },\r\n    // },\r\n    // content: {\r\n    //   required: <FormattedMessage id=\"the content field is required\" />,\r\n    //   maxLength: {\r\n    //     value: 3000,\r\n    //     message: <FormattedMessage id=\"Content up to 3000 characters\" />,\r\n    //   },\r\n    // },\r\n  },\r\n\r\n  EditBranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n  },\r\n\r\n  Document_course: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditCategoryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n      // pattern: {\r\n      //   value: REGEX.NAME2,\r\n      //   message: <FormattedMessage id=\"Invalid category name\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditDocumentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    author: {\r\n      required: <FormattedMessage id=\"The Author name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Author name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Author must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  EditQuizOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    contenttext: {\r\n      required: <FormattedMessage id=\"The content field is required\" />,\r\n    },\r\n    answer: {\r\n      required: <FormattedMessage id=\"The answer field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  TermOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    //Học phần\r\n  },\r\n  KindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditKindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  TranscriptOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditTranscriptOptions: {\r\n    student_code: {\r\n      required: <FormattedMessage id=\"The student code field is required\" />,\r\n    },\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  CertificateOptions: {},\r\n  UserCertificateOptions: {},\r\n\r\n  EditCertificateOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"The title must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"The title must be 70 characters max\" />,\r\n      },\r\n    },\r\n    provider: {\r\n      required: <FormattedMessage id=\"Provider field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Provider must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Provider must be 70 characters max\" />,\r\n      },\r\n    },\r\n    position: {\r\n      required: <FormattedMessage id=\"Position field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Position must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Position must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  ProductOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The product's name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Product name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Product name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    vat: {\r\n      required: <FormattedMessage id=\"The VAT field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"VAT more than 0\" />,\r\n      },\r\n      max: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"VAT less than 100\" />,\r\n      },\r\n    },\r\n    number_trial: {\r\n      // required: <FormattedMessage id=\"The Number day field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be greater than or equal to 0\" />\r\n        ),\r\n      },\r\n      max: {\r\n        value: 30,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be less than or equal to 30\" />\r\n        ),\r\n      },\r\n      validate: (value) =>\r\n        value >= 0 || (\r\n          <FormattedMessage id=\"Number day must be a positive number\" />\r\n        ),\r\n    },\r\n    categoryId: {\r\n      required: <FormattedMessage id=\"The category field is required\" />,\r\n      min: {\r\n        value: 0,\r\n      },\r\n    },\r\n    service_price_local: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n\r\n    service_price_cloud: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n  },\r\n  VersionOptions: {\r\n    version: {\r\n      required: <FormattedMessage id=\"The version field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Version up to 255 characters\" />,\r\n      },\r\n    },\r\n    infor: {\r\n      maxLength: {\r\n        value: 500,\r\n        message: <FormattedMessage id=\"Information up to 500 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  StaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditStaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  UserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|\\\\d)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditUserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  CityOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The city name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The city code field is required\" />,\r\n      alidate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n  },\r\n  CountryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The country name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The country code field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    phone_code: {\r\n      required: <FormattedMessage id=\"The phone code field is required\" />,\r\n      validate: (value) => REGEX.PHONE_CODE.test(value),\r\n    },\r\n  },\r\n  StudentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    date: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    },\r\n    // gender: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // courseId: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // formality: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n  },\r\n\r\n  CloudOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The cloud name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Cloud name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Cloud name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    // vat: {\r\n    //   required: <FormattedMessage id=\"The VAT field is required\" />,\r\n    //   min: {\r\n    //     value: 0,\r\n    //     message: <FormattedMessage id=\"VAT more than 0\" />,\r\n    //   },\r\n    //   max: {\r\n    //     value: 100,\r\n    //     message: <FormattedMessage id=\"VAT less than 100\" />,\r\n    //   },\r\n    // },\r\n  },\r\n};\r\nexport default validateOptions;\r\n","import api from \"../../../../../constants/api\";\r\nimport Service from \"../../../../../services/request\";\r\n\r\nexport const getListCategoryProduct = (params) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.LIST_CATEGORY_PRODUCT.method,\r\n      path: api.LIST_CATEGORY_PRODUCT.path,\r\n      data: params,\r\n    }).then((response) => {\r\n      dispatch({\r\n        type: \"GET_DATA_CATEGORY_PRODUCT\",\r\n        data: response?.data?.data,\r\n        totalPages: response?.data?.total,\r\n        params,\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const getCategoryProduct = (id) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.GET_CATEGORY_PRODUCT.method,\r\n      path: api.GET_CATEGORY_PRODUCT.path,\r\n      query: { id },\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"GET_CATEGORY_PRODUCT\",\r\n          selected: response?.data,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const addCategoryProduct = (CategoryProduct) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.CREATE_CATEGORY_PRODUCT.method,\r\n      path: api.CREATE_CATEGORY_PRODUCT.path,\r\n      data: CategoryProduct,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"ADD_CATEGORY_PRODUCT\",\r\n          response,\r\n        });\r\n      })\r\n      .catch((err) =>\r\n        dispatch({\r\n          type: \"ADD_CATEGORY_PRODUCT\",\r\n          err,\r\n        })\r\n      );\r\n  };\r\n};\r\nexport const updateCategoryProduct = (CategoryProduct) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.UPDATE_CATEGORY_PRODUCT.method,\r\n      path: api.UPDATE_CATEGORY_PRODUCT.path,\r\n      data: CategoryProduct,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"UPDATE_CATEGORY_PRODUCT\",\r\n          response,\r\n        });\r\n      })\r\n\r\n      .catch((err) =>\r\n        dispatch({\r\n          type: \"UPDATE_CATEGORY_PRODUCT\",\r\n          err,\r\n        })\r\n      );\r\n  };\r\n};\r\n"],"sourceRoot":""}