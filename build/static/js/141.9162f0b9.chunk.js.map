{"version":3,"sources":["views/apps/category/edit/Category.js","views/apps/category/edit/index.js","constants/validate.js","views/apps/category/store/action/index.js"],"names":["injectIntl","_ref","_store$categoryDetail","_store$categoryDetail2","_errors$name","selected","intl","store","useSelector","state","category","_useForm","useForm","register","errors","handleSubmit","history","useHistory","_useState","useState","_useState2","_slicedToArray","categoryData","setCategoryData","lang","common","language","dispatch","useDispatch","_useState3","_useState4","status","setStatus","_useState5","_useState6","disable","setDisable","id","useParams","_useState7","kind","data","_useState8","changcate","setChangcate","options","value","categoryDetail","label","name","_useState9","_useState10","setChangeSelect","EditCategoryOptions","validateOptions","useEffect","_store$err","err","statusCode","getKindId","categoryId","getKind","filter","skip","limit","order","key","_useState11","EditorState","createEmpty","_useState12","valueDescription","setValueDescription","scrollToTop","push","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","description","wrap","_context","prev","next","draftToHtml","convertToRaw","getCurrentContent","isObjEmpty","updateCategory","parseInt","_objectSpread","stop","_x","apply","arguments","htmlToDraftUtil","_jsxs","Row","children","_jsx","Col","sm","Media","className","body","Form","FormGroup","Label","for","FormattedMessage","Input","innerRef","onBlur","document","getElementById","trim","classnames","defaultValue","message","type","Editor","stripPastedStyles","toolbar","inline","inDropdown","editorState","onEditorStateChange","description_en","classNames","onChange","e","target","required","formatMessage","style","textAlign","marginTop","Button","color","disabled","outline","onClick","goBack","CategoryEdit","activeTab","setActiveTab","getCategory","undefined","Card","CardBody","Nav","pills","NavItem","NavLink","active","AlignJustify","size","TabContent","TabPane","tabId","CategoryTab","Alert","AboutOptions","about","maxLength","PartnerOptions","DocumentOptions","validate","REGEX","TITLE","test","sort_order","pattern","short_content","DiscountOptions","discount","min","time","PriceOptions","price","Document_Link_Options","document_link","CategoryOptions","code","minLength","message_content","BranchOptions","code_branch","email","EMAIL","phone","addpress","EditBranchOptions","Document_course","EditDocumentOptions","author","EditQuizOptions","title","contenttext","answer","TermOptions","KindOptions","EditKindOptions","TranscriptOptions","score","EditTranscriptOptions","student_code","CertificateOptions","UserCertificateOptions","EditCertificateOptions","provider","position","ProductOptions","product_name","NAME2","alidate","SPACE","vat","max","number_trial","service_price_local","PRICE","service_price_cloud","VersionOptions","version","infor","StaffOptions","last_name","NAME","first_name","username","USERNAME","password","EditStaffOptions","UserOptions","PASSWORD","EditUserOptions","CityOptions","CountryOptions","phone_code","PHONE_CODE","StudentOptions","date","CloudOptions","getData","params","Service","send","method","api","LIST_CATEGORY","path","then","response","_response$data","_response$data2","totalPages","total","_callee2","_context2","LIST_KIND","_response$data3","_response$data4","_x2","_ref3","_callee3","_context3","GET_CATEGORY","query","catch","console","log","_x3","_ref4","_callee4","_context4","GET_KIND","_x4","addCategory","Category","_ref5","_callee5","getState","_context5","CREATE_CATEGORY","_x5","_x6","_ref6","_callee6","_context6","UPDATE_CATEGORY","_x7","_x8"],"mappings":"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","file":"static/js/141.9162f0b9.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\n\r\nimport \"react-phone-number-input/style.css\";\r\n\r\nimport { isObjEmpty, scrollToTop } from \"@utils\";\r\n\r\nimport classnames from \"classnames\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Media,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport validateOptions from \"../../../../constants/validate\";\r\nimport { getKind, getKindId, updateCategory } from \"../store/action\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { convertToRaw, EditorState } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { htmlToDraftUtil } from \"../../../../utility/Utils\";\r\nimport classNames from \"classnames\";\r\nimport Select from \"react-select\";\r\nimport {} from \"react-scroll-up\";\r\n\r\nconst CategoryTab = ({ selected, intl }) => {\r\n  const store = useSelector((state) => state.category);\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const history = useHistory();\r\n  const [categoryData, setCategoryData] = useState(null);\r\n  const lang = useSelector((state) => state.common.language);\r\n  const dispatch = useDispatch();\r\n  const [status, setStatus] = useState(null);\r\n  const [disable, setDisable] = useState(false);\r\n  const { id } = useParams();\r\n  const { data } = useSelector((state) => state.kind);\r\n  const [changcate, setChangcate] = useState();\r\n  const options = {\r\n    value: store?.categoryDetail?.id,\r\n    label: store?.categoryDetail?.name,\r\n  };\r\n  const [changeSelect, setChangeSelect] = useState(changcate);\r\n  const EditCategoryOptions = validateOptions.EditCategoryOptions;\r\n  const changeCate = (e) => {\r\n    setChangeSelect(e);\r\n  };\r\n  useEffect(() => {\r\n    if (store) {\r\n      setChangcate(options);\r\n    }\r\n  }, [store]);\r\n  useEffect(() => {\r\n    if (changcate) {\r\n      setChangeSelect(changcate);\r\n    }\r\n  }, [changcate]);\r\n  useEffect(() => {\r\n    if (store?.err?.statusCode) {\r\n      setDisable(false);\r\n    }\r\n  }, [store?.err]);\r\n  useEffect(() => {\r\n    dispatch(getKindId(selected?.categoryId));\r\n  }, [dispatch, selected?.categoryId]);\r\n  useEffect(() => {\r\n    dispatch(\r\n      getKind({\r\n        filter: {\r\n          status: 1,\r\n          lang,\r\n        },\r\n        skip: 0,\r\n        limit: 20,\r\n        order: {\r\n          key: \"name\",\r\n          value: \"desc\",\r\n        },\r\n      })\r\n    );\r\n  }, [dispatch]);\r\n\r\n  const [valueDescription, setValueDescription] = useState(\r\n    EditorState.createEmpty()\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (\r\n      selected !== null ||\r\n      (selected !== null &&\r\n        categoryData !== null &&\r\n        selected.id !== categoryData.id)\r\n    ) {\r\n      setCategoryData(selected);\r\n    }\r\n  }, [selected, categoryData]);\r\n\r\n  useEffect(() => {\r\n    if (store.status === 200) {\r\n      scrollToTop();\r\n      history.push(\"/apps/category/list\");\r\n    }\r\n  }, [store.status, history]);\r\n\r\n  const onSubmit = async (values) => {\r\n    const description = draftToHtml(\r\n      convertToRaw(valueDescription.getCurrentContent())\r\n    );\r\n    if (isObjEmpty(errors)) {\r\n      setDisable(true);\r\n      dispatch(\r\n        updateCategory({\r\n          id: parseInt(id),\r\n          data: {\r\n            ...values,\r\n            name: values.name,\r\n            status: parseInt(values.status),\r\n            description: description,\r\n            // categoryId: parseInt(changeSelect?.value),\r\n            categoryId: \"52\",\r\n            lang,\r\n          },\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      setStatus(categoryData.status);\r\n      setValueDescription(htmlToDraftUtil(categoryData?.description || \" \"));\r\n    }\r\n  }, [categoryData]);\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\">\r\n        <Media className=\"mb-2\">\r\n          <Media className=\"mt-50\" body>\r\n            <h4>{selected.name} </h4>\r\n          </Media>\r\n        </Media>\r\n      </Col>\r\n      <Col sm=\"12\">\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <FormGroup>\r\n            <Label for=\"name\">\r\n              <FormattedMessage id=\"catename\" />{\" \"}\r\n              <span className=\"text-danger\">*</span>\r\n            </Label>\r\n            <Input\r\n              name=\"name\"\r\n              id=\"name\"\r\n              innerRef={register(EditCategoryOptions.name)}\r\n              onBlur={() => {\r\n                let name = document.getElementById(\"name\");\r\n                if (name && name.value) {\r\n                  name.value = name.value.trim();\r\n                }\r\n              }}\r\n              className={classnames({ \"is-invalid\": errors[\"name\"] })}\r\n              defaultValue={categoryData && categoryData.name}\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.name && errors.name.message}\r\n            </small>\r\n            {errors?.name?.type === \"validate\" && (\r\n              <small className=\"text-danger\">\r\n                <FormattedMessage id=\"Invalid category name\" />\r\n              </small>\r\n            )}\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"description\">\r\n              <FormattedMessage id=\"Description\" />{\" \"}\r\n            </Label>\r\n\r\n            <Editor\r\n              stripPastedStyles={true}\r\n              toolbar={{\r\n                options: [\"inline\", \"textAlign\"],\r\n                inline: {\r\n                  inDropdown: false,\r\n                  options: [\"bold\", \"italic\", \"underline\"],\r\n                },\r\n              }}\r\n              editorState={valueDescription}\r\n              onEditorStateChange={(data) => setValueDescription(data)}\r\n              name=\"description\"\r\n              innerRef={register(EditCategoryOptions.description_en)}\r\n              className={classNames({\r\n                \"is-invalid\": errors[\"description\"],\r\n              })}\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.description_en && errors.description_en.message}\r\n            </small>\r\n          </FormGroup>\r\n          {/* <FormGroup>\r\n            <Label>\r\n              <FormattedMessage id=\"Solution\" />\r\n              <span className=\"text-danger\"> * </span>\r\n            </Label>\r\n            <Select\r\n              isClearable={false}\r\n              onChange={(e) => changeCate(e)}\r\n              innerRef={register({ required: true })}\r\n              name=\"categoryId\"\r\n              value={changeSelect}\r\n              placeholder={<FormattedMessage id=\"Select...\" />}\r\n              options={data?.map((item, index) => {\r\n                return {\r\n                  value: item?.id,\r\n                  label: item?.name,\r\n                };\r\n              })}\r\n              className=\"react-select\"\r\n              classNamePrefix=\"select\"\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.product_name && errors.product_name.message}\r\n            </small>\r\n          </FormGroup> */}\r\n\r\n          <FormGroup>\r\n            <Label for=\"status\">\r\n              <FormattedMessage id=\"Status\" />\r\n            </Label>\r\n\r\n            <Input\r\n              type=\"select\"\r\n              name=\"status\"\r\n              value={status}\r\n              onChange={(e) => setStatus(e.target.value)}\r\n              id=\"status\"\r\n              innerRef={register({ required: true })}\r\n            >\r\n              <option value=\"1\">{intl.formatMessage({ id: \"Active\" })}</option>\r\n\r\n              <option value=\"2\">{intl.formatMessage({ id: \"Blocked\" })}</option>\r\n            </Input>\r\n          </FormGroup>\r\n\r\n          <div style={{ textAlign: \"end\", marginTop: \"145px\" }}>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mr-1\"\r\n              color=\"primary\"\r\n              disabled={disable}\r\n            >\r\n              <FormattedMessage id=\"update\" />\r\n            </Button>\r\n            <Button\r\n              type=\"reset\"\r\n              color=\"secondary\"\r\n              outline\r\n              onClick={() => history.goBack()}\r\n            >\r\n              <FormattedMessage id=\"Cancel\" />\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default injectIntl(CategoryTab);\r\n","import { useEffect, useState } from \"react\";\r\nimport { AlignJustify } from \"react-feather\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Alert,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\nimport { getCategory } from \"../store/action\";\r\nimport CategoryTab from \"./Category\";\r\n\r\nconst CategoryEdit = () => {\r\n  const [activeTab, setActiveTab] = useState(\"1\"),\r\n    store = useSelector((state) => state.category),\r\n    dispatch = useDispatch(),\r\n    { id } = useParams();\r\n\r\n  const toggle = (tab) => setActiveTab(tab);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategory(parseInt(id)));\r\n  }, [dispatch]);\r\n\r\n  return store.selected !== null && store.selected !== undefined ? (\r\n    <Row className=\"app-user-edit\">\r\n      <Col sm=\"12\">\r\n        <Card>\r\n          <CardBody className=\"pt-2\">\r\n            <Nav pills>\r\n              <NavItem>\r\n                <NavLink active={activeTab === \"1\"} onClick={() => toggle(\"1\")}>\r\n                  <AlignJustify size={14} />\r\n                  <span className=\"align-middle d-none d-sm-block\">\r\n                    <FormattedMessage id=\"productCategoryCourse\" />\r\n                  </span>\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <CategoryTab selected={store.selected} store={store} />\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  ) : (\r\n    <Alert color=\"danger\">\r\n      <h4 className=\"alert-heading\">Not found</h4>\r\n    </Alert>\r\n  );\r\n};\r\nexport default CategoryEdit;\r\n","import { FormattedMessage } from \"react-intl\";\r\nimport REGEX from \"./regex\";\r\nimport { number } from \"yup\";\r\nconst validateOptions = {\r\n  AboutOptions: {\r\n    about: {\r\n      // required: <FormattedMessage id=\"The about title field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"About title up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  PartnerOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DocumentOptions: {\r\n    label: {\r\n      required: <FormattedMessage id=\"the label field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Label up to 255 characters\" />,\r\n      },\r\n    },\r\n\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n\r\n    short_content: {\r\n      required: <FormattedMessage id=\"the short content field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DiscountOptions: {\r\n    discount: {\r\n      required: <FormattedMessage id=\"the discount field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"The discount is not suitable\" />,\r\n      },\r\n    },\r\n    time: {\r\n      required: <FormattedMessage id=\"The time price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  PriceOptions: {\r\n    price: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n    },\r\n  },\r\n  Document_Link_Options: {\r\n    document_link: {\r\n      required: (\r\n        <FormattedMessage id=\"The time document link field is required\" />\r\n      ),\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  CategoryOptions: {\r\n    code: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n\r\n    message_content: {\r\n      maxLength: {\r\n        value: 30,\r\n        message: <FormattedMessage id=\"Category must be 30 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  BranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n    // short_content: {\r\n    //   required: <FormattedMessage id=\"the short content field is required\" />,\r\n    //   validate: (value) => !REGEX.TITLE.test(value),\r\n    //   maxLength: {\r\n    //     value: 255,\r\n\r\n    //     message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n    //   },\r\n    // },\r\n    // content: {\r\n    //   required: <FormattedMessage id=\"the content field is required\" />,\r\n    //   maxLength: {\r\n    //     value: 3000,\r\n    //     message: <FormattedMessage id=\"Content up to 3000 characters\" />,\r\n    //   },\r\n    // },\r\n  },\r\n\r\n  EditBranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n  },\r\n\r\n  Document_course: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditCategoryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n      // pattern: {\r\n      //   value: REGEX.NAME2,\r\n      //   message: <FormattedMessage id=\"Invalid category name\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditDocumentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    author: {\r\n      required: <FormattedMessage id=\"The Author name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Author name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Author must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  EditQuizOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    contenttext: {\r\n      required: <FormattedMessage id=\"The content field is required\" />,\r\n    },\r\n    answer: {\r\n      required: <FormattedMessage id=\"The answer field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  TermOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    //Học phần\r\n  },\r\n  KindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditKindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  TranscriptOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditTranscriptOptions: {\r\n    student_code: {\r\n      required: <FormattedMessage id=\"The student code field is required\" />,\r\n    },\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  CertificateOptions: {},\r\n  UserCertificateOptions: {},\r\n\r\n  EditCertificateOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"The title must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"The title must be 70 characters max\" />,\r\n      },\r\n    },\r\n    provider: {\r\n      required: <FormattedMessage id=\"Provider field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Provider must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Provider must be 70 characters max\" />,\r\n      },\r\n    },\r\n    position: {\r\n      required: <FormattedMessage id=\"Position field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Position must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Position must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  ProductOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The product's name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Product name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Product name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    vat: {\r\n      required: <FormattedMessage id=\"The VAT field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"VAT more than 0\" />,\r\n      },\r\n      max: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"VAT less than 100\" />,\r\n      },\r\n    },\r\n    number_trial: {\r\n      // required: <FormattedMessage id=\"The Number day field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be greater than or equal to 0\" />\r\n        ),\r\n      },\r\n      max: {\r\n        value: 30,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be less than or equal to 30\" />\r\n        ),\r\n      },\r\n      validate: (value) =>\r\n        value >= 0 || (\r\n          <FormattedMessage id=\"Number day must be a positive number\" />\r\n        ),\r\n    },\r\n    categoryId: {\r\n      required: <FormattedMessage id=\"The category field is required\" />,\r\n      min: {\r\n        value: 0,\r\n      },\r\n    },\r\n    service_price_local: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n\r\n    service_price_cloud: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n  },\r\n  VersionOptions: {\r\n    version: {\r\n      required: <FormattedMessage id=\"The version field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Version up to 255 characters\" />,\r\n      },\r\n    },\r\n    infor: {\r\n      maxLength: {\r\n        value: 500,\r\n        message: <FormattedMessage id=\"Information up to 500 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  StaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditStaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  UserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|\\\\d)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditUserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  CityOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The city name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The city code field is required\" />,\r\n      alidate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n  },\r\n  CountryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The country name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The country code field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    phone_code: {\r\n      required: <FormattedMessage id=\"The phone code field is required\" />,\r\n      validate: (value) => REGEX.PHONE_CODE.test(value),\r\n    },\r\n  },\r\n  StudentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    date: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    },\r\n    // gender: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // courseId: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // formality: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n  },\r\n\r\n  CloudOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The cloud name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Cloud name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Cloud name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    // vat: {\r\n    //   required: <FormattedMessage id=\"The VAT field is required\" />,\r\n    //   min: {\r\n    //     value: 0,\r\n    //     message: <FormattedMessage id=\"VAT more than 0\" />,\r\n    //   },\r\n    //   max: {\r\n    //     value: 100,\r\n    //     message: <FormattedMessage id=\"VAT less than 100\" />,\r\n    //   },\r\n    // },\r\n  },\r\n};\r\nexport default validateOptions;\r\n","import api from \"../../../../../constants/api\";\r\nimport Service from \"../../../../../services/request\";\r\n\r\nexport const getData = (params) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.LIST_CATEGORY.method,\r\n      path: api.LIST_CATEGORY.path,\r\n      data: params,\r\n    }).then((response) => {\r\n      dispatch({\r\n        type: \"GET_DATA_CATEGORY\",\r\n        data: response?.data?.data,\r\n        totalPages: response?.data?.total,\r\n        params,\r\n      });\r\n    });\r\n  };\r\n};\r\nexport const getKind = (params) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.LIST_KIND.method,\r\n      path: api.LIST_KIND.path,\r\n      data: params,\r\n    }).then((response) => {\r\n      dispatch({\r\n        type: \"GET_DATA_KIND\",\r\n        data: response?.data?.data,\r\n        totalPages: response?.data?.total,\r\n        params,\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const getCategory = (id) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.GET_CATEGORY.method,\r\n      path: api.GET_CATEGORY.path,\r\n      query: { id },\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"GET_CATEGORY\",\r\n          selected: response?.data,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\nexport const getKindId = (categoryId) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.GET_KIND.method,\r\n      path: api.GET_KIND.path,\r\n      query: { id: categoryId },\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"GET_KindId\",\r\n          selected: response?.data,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\nexport const addCategory = (Category) => {\r\n  return async (dispatch, getState) => {\r\n    await Service.send({\r\n      method: api.CREATE_CATEGORY.method,\r\n      path: api.CREATE_CATEGORY.path,\r\n      data: Category,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"ADD_CATEGORY\",\r\n          response,\r\n        });\r\n      })\r\n      .catch((err) =>\r\n        dispatch({\r\n          type: \"ADD_CATEGORY\",\r\n          err,\r\n        })\r\n      );\r\n  };\r\n};\r\nexport const updateCategory = (Category) => {\r\n  return async (dispatch, getState) => {\r\n    await Service.send({\r\n      method: api.UPDATE_CATEGORY.method,\r\n      path: api.UPDATE_CATEGORY.path,\r\n      data: Category,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"UPDATE_CATEGORY\",\r\n          response,\r\n        });\r\n      })\r\n\r\n      .catch((err) =>\r\n        dispatch({\r\n          type: \"UPDATE_CATEGORY\",\r\n          err,\r\n        })\r\n      );\r\n  };\r\n};\r\n"],"sourceRoot":""}