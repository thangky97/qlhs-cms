{"version":3,"sources":["views/apps/categoryCloud/price/edit/CloudPrice.js","views/apps/categoryCloud/price/edit/index.js","constants/validate.js","views/apps/categoryCloud/price/store/action/index.js"],"names":["injectIntl","_ref","_product$selected","_typeObj","selected","product","useSelector","state","products","lang","common","language","_useForm","useForm","register","errors","handleSubmit","_useState","useState","_useState2","_slicedToArray","discountData","setDiscountData","store","discounts","PriceOptions","validateOptions","dispatch","useDispatch","history","useHistory","_useState3","_useState4","disable","setDisable","id","useParams","_useState5","EditorState","createEmpty","_useState6","valueTechnicalAssistance","setValueTechnicalAssistance","useEffect","_store$err","err","statusCode","htmlToDraftUtil","technical_assistance","_jsxs","Row","children","_jsx","Col","sm","Media","className","body","username","Form","onSubmit","values","isObjEmpty","value_technicala_ssistance","draftToHtml","convertToRaw","getCurrentContent","update","parseInt","data","_objectSpread","type","FormGroup","Label","for","FormattedMessage","Input","name","placeholder","innerRef","price","classNames","defaultValue","message","product_type","disabled","text","object","system_description","platform_description","Editor","stripPastedStyles","editorState","defaultEditorState","onEditorStateChange","style","textAlign","Button","color","outline","onClick","goBack","CloudPriceEdit","activeTab","setActiveTab","prices","getById","console","log","status","undefined","Card","CardBody","Nav","pills","NavItem","NavLink","active","ShoppingCart","size","TabContent","TabPane","tabId","CloudPriceTab","Alert","AboutOptions","about","maxLength","value","PartnerOptions","required","DocumentOptions","label","validate","REGEX","TITLE","test","sort_order","pattern","short_content","DiscountOptions","discount","min","time","Document_Link_Options","document_link","CategoryOptions","code","minLength","message_content","BranchOptions","code_branch","email","EMAIL","phone","addpress","EditBranchOptions","Document_course","EditCategoryOptions","EditDocumentOptions","author","EditQuizOptions","title","contenttext","answer","TermOptions","KindOptions","EditKindOptions","TranscriptOptions","score","EditTranscriptOptions","student_code","CertificateOptions","UserCertificateOptions","EditCertificateOptions","provider","position","ProductOptions","product_name","NAME2","alidate","SPACE","vat","max","number_trial","categoryId","service_price_local","PRICE","service_price_cloud","VersionOptions","version","infor","StaffOptions","last_name","NAME","first_name","USERNAME","password","EditStaffOptions","UserOptions","PASSWORD","trim","EditUserOptions","CityOptions","CountryOptions","phone_code","PHONE_CODE","StudentOptions","date","CloudOptions","getData","params","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","Service","send","method","api","LIST_PRODUCT_PRICE","path","then","response","stop","_x","apply","arguments","_ref2","_callee2","_context2","GET_PRICE","query","catch","_x2","add","staff","_ref3","_callee3","getState","_context3","CREATE_PRODUCT_PRICE","_x3","_x4","_ref4","_callee4","_context4","UPDATE_PRODUCT_PRICE","_x5","_x6","remove","_ref5","_callee5","_context5","DELETE_PRODUCT_PRICE","_x7"],"mappings":"sdA4NeA,eApMO,SAAHC,GAAsB,IAADC,EAAAC,EAAfC,EAAQH,EAARG,SACjBC,EAAUC,aAAY,SAACC,GAAK,OAAKA,EAAMC,QAAQ,IAC/CC,EAAOH,aAAY,SAACC,GAAK,OAAKA,EAAMG,OAAOC,QAAQ,IAEzDC,EAA2CC,cAAnCC,EAAQF,EAARE,SAAUC,EAAMH,EAANG,OAAQC,EAAYJ,EAAZI,aAC1BC,EAAwCC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,EAAQjB,aAAY,SAACC,GAAK,OAAKA,EAAMiB,SAAS,IAE9CC,EAAeC,IAAgBD,aAC/BE,EAAWC,cACXC,EAAUC,cAChBC,EAA8Bb,oBAAS,GAAMc,EAAAZ,YAAAW,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAClBG,EAAOC,cAAPD,GAERE,EAAgEnB,mBAC9DoB,cAAYC,eACbC,EAAApB,YAAAiB,EAAA,GAFMI,EAAwBD,EAAA,GAAEE,EAA2BF,EAAA,GAG5DG,qBAAU,WAAO,IAADC,EACL,OAALrB,QAAK,IAALA,GAAU,QAALqB,EAALrB,EAAOsB,WAAG,IAAAD,GAAVA,EAAYE,YACdZ,GAAW,EAEf,GAAG,CAAM,OAALX,QAAK,IAALA,OAAK,EAALA,EAAOsB,MACXF,qBAAU,YAEO,OAAbvC,GACc,OAAbA,GACkB,OAAjBiB,GACAjB,EAAS+B,KAAOd,EAAac,MAE/Bb,EAAgBlB,GAChBsC,EACEK,aAAwB,OAAR3C,QAAQ,IAARA,OAAQ,EAARA,EAAU4C,uBAAwB,MAGxD,GAAG,CAAC5C,IAwCJ,OACE6C,eAACC,IAAG,CAAAC,SAAA,CACFC,cAACC,IAAG,CAACC,GAAG,KAAIH,SACVC,cAACG,IAAK,CAACC,UAAU,OAAML,SACrBC,cAACG,IAAK,CAACC,UAAU,QAAQC,MAAI,EAAAN,SAC3BF,eAAA,MAAAE,SAAA,CAAK/C,EAASsD,SAAS,aAI7BN,cAACC,IAAG,CAACC,GAAG,KAAIH,SACVF,eAACU,IAAI,CAACC,SAAU5C,GAhDL,SAAC6C,GAChB,GAAIC,YAAW/C,GAAS,CACtB,IAAMgD,EACHtB,GACCuB,IACEC,uBAAqC,OAAxBxB,QAAwB,IAAxBA,OAAwB,EAAxBA,EAA0ByB,uBAE3C,KACFhC,GAAW,GACXP,EACEwC,YAAO,CACLhC,GAAIiC,SAASjC,GACbkC,KAAIC,wBAAA,GACCT,GAAM,IACTU,KAAc,OAARnE,QAAQ,IAARA,OAAQ,EAARA,EAAUmE,KAChB9D,OACAuC,qBAAsBe,GAA8B,OAI5D,CACF,IA2B6CZ,SAAA,CACrCC,cAAA,OAAKI,UAAU,SACfP,eAACuB,IAAS,CAAArB,SAAA,CACRF,eAACwB,IAAK,CAACC,IAAI,QAAOvB,SAAA,CAChBC,cAACuB,IAAgB,CAACxC,GAAG,UAErBiB,cAAA,QAAMI,UAAU,cAAaL,SAAC,SAEhCC,cAACwB,IAAK,CACJC,KAAK,QACL1C,GAAG,QACH2C,YAAY,IACZC,SAAUjE,EAASW,EAAauD,OAChCxB,UAAWyB,IAAW,CAAE,aAAclE,EAAc,QACpDmE,aAAc7D,GAAgBA,EAAa2D,MAC3CT,KAAK,WAEPnB,cAAA,SAAOI,UAAU,cAAaL,UACrB,OAANpC,QAAM,IAANA,OAAM,EAANA,EAAQiE,QAASjE,EAAOiE,MAAMG,aAIE,KAA7B,OAAP9E,QAAO,IAAPA,GAAiB,QAAVH,EAAPG,EAASD,gBAAQ,IAAAF,OAAV,EAAPA,EAAmBkF,eAClBnC,eAACuB,IAAS,CAAArB,SAAA,CACRC,cAACqB,IAAK,CAACC,IAAI,OAAMvB,SACfC,cAACuB,IAAgB,CAACxC,GAAG,WAEvBiB,cAACwB,IAAK,CACJC,KAAK,OACL1C,GAAG,OACH2C,YAAY,IACZO,UAAQ,EACRH,aAA0C,QAA9B/E,EAzDV,CACd,EAAG,CACDmF,KAAM,QAER,EAAG,CACDA,KAAM,SAER,EAAG,CACDA,KAAM,mBAER,EAAG,CACDA,KAAM,yBA8CkC,OAARlF,QAAQ,IAARA,OAAQ,EAARA,EAAUmE,OAAQ,UAAE,IAAApE,OAAA,EAA5BA,EAA8BmF,KAC5Cf,KAAK,YAKXtB,eAACuB,IAAS,CAAArB,SAAA,CACRC,cAACqB,IAAK,CAACC,IAAI,SAAQvB,SACjBC,cAACuB,IAAgB,CAACxC,GAAG,aAEvBiB,cAACwB,IAAK,CACJC,KAAK,SACL1C,GAAG,SACH4C,SAAUjE,EAASW,EAAa8D,QAChCL,aAAc7D,GAAgBA,EAAakE,YAI/CtC,eAACuB,IAAS,CAAArB,SAAA,CACRC,cAACqB,IAAK,CAACC,IAAI,qBAAoBvB,SAC7BC,cAACuB,IAAgB,CAACxC,GAAG,yBAEvBiB,cAACwB,IAAK,CACJC,KAAK,qBACL1C,GAAG,qBACH4C,SAAUjE,EAASW,EAAa+D,oBAChCN,aAAc7D,GAAgBA,EAAamE,wBAI/CvC,eAACuB,IAAS,CAAArB,SAAA,CACRC,cAACqB,IAAK,CAACC,IAAI,uBAAsBvB,SAC/BC,cAACuB,IAAgB,CAACxC,GAAG,2BAEvBiB,cAACwB,IAAK,CACJC,KAAK,uBACL1C,GAAG,uBACH4C,SAAUjE,EAASW,EAAagE,sBAChCP,aAAc7D,GAAgBA,EAAaoE,0BAI/CxC,eAACuB,IAAS,CAAArB,SAAA,CACRC,cAACqB,IAAK,CAACC,IAAI,uBAAsBvB,SAC/BC,cAACuB,IAAgB,CAACxC,GAAG,2BAGvBiB,cAACsC,SAAM,CACLC,mBAAmB,EACnBC,YAAanD,EACboD,mBAAoBpD,EACpBqD,oBAAqB,SAACzB,GAAI,OAAK3B,EAA4B2B,EAAK,EAChEQ,KAAK,uBACLE,SAAUjE,EAASW,EAAauB,2BAIpCC,eAAA,OAAK8C,MAAO,CAAEC,UAAW,OAAQ7C,SAAA,CAC/BC,cAAC6C,IAAM,CACL1B,KAAK,SACLf,UAAU,OACV0C,MAAM,UACNb,SAAUpD,EAAQkB,SAElBC,cAACuB,IAAgB,CAACxC,GAAG,aAEvBiB,cAAC6C,IAAM,CACL1B,KAAK,QACL2B,MAAM,YACNC,SAAO,EACPC,QAAS,kBAAMvE,EAAQwE,QAAQ,EAAClD,SAEhCC,cAACuB,IAAgB,CAACxC,GAAG,uBAOnC,ICrJemE,UAnDQ,WACrB,IAAMzE,EAAUC,cAChBb,EAAkCC,mBAAS,KAAIC,EAAAC,YAAAH,EAAC,GAAzCsF,EAASpF,EAAA,GAAEqF,EAAYrF,EAAA,GAC5BI,EAAQjB,aAAY,SAACC,GAAK,OAAKA,EAAMkG,MAAM,IAC3C9E,EAAWC,cACTO,EAAOC,cAAPD,GAgBJ,OAbEQ,qBAAU,WACRhB,EACE+E,YAAQ,CACNvE,GAAIiC,SAASjC,KAGjB,GAAG,IACHwE,QAAQC,IAAIrF,GAChBoB,qBAAU,WACY,KAAhBpB,EAAMsF,QACRhF,EAAQwE,QAEZ,GAAG,CAAC9E,EAAMsF,SACgB,OAAnBtF,EAAMnB,eAAwC0G,IAAnBvF,EAAMnB,SACtCgD,cAACF,IAAG,CAACM,UAAU,gBAAeL,SAC5BC,cAACC,IAAG,CAACC,GAAG,KAAIH,SACVC,cAAC2D,IAAI,CAAA5D,SACHF,eAAC+D,IAAQ,CAACxD,UAAU,OAAML,SAAA,CACxBC,cAAC6D,IAAG,CAACC,OAAK,EAAA/D,SACRC,cAAC+D,IAAO,CAAAhE,SACNF,eAACmE,IAAO,CAACC,OAAsB,MAAdd,EAAmBH,QAAS,kBArBjCI,EAqB8C,IAAI,EAACrD,SAAA,CAC7DC,cAACkE,IAAY,CAACC,KAAM,KACpBnE,cAAA,QAAMI,UAAU,iCAAgCL,SAC9CC,cAACuB,IAAgB,CAACxC,GAAG,mBAK7BiB,cAACoE,IAAU,CAACjB,UAAWA,EAAUpD,SAC/BC,cAACqE,IAAO,CAACC,MAAM,IAAGvE,SAChBC,cAACuE,EAAa,CAACvH,SAAUmB,EAAMnB,wBAQ3CgD,cAACwE,IAAK,CAAC1B,MAAM,SAAQ/C,SACnBC,cAAA,MAAII,UAAU,gBAAeL,SAAC,eAGpC,C,mCCrEA,sCAGMzB,EAAkB,CACtBmG,aAAc,CACZC,MAAO,CAELC,UAAW,CACTC,MAAO,IACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,wCAIpC8F,eAAgB,CACdpD,KAAM,CACJqD,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,+BAC/B4F,UAAW,CACTC,MAAO,IACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,yCAIpCgG,gBAAiB,CACfC,MAAO,CACLF,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,gCAC/BkG,SAAU,SAACL,GAAK,OAAMM,IAAMC,MAAMC,KAAKR,EAAM,EAE7CD,UAAW,CACTC,MAAO,IAEP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,iCAIlCsG,WAAY,CACVP,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,qCAC/BuG,QAAS,CACPV,MAAO,QACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,mBAIlCwG,cAAe,CACbT,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,wCAC/BkG,SAAU,SAACL,GAAK,OAAMM,IAAMC,MAAMC,KAAKR,EAAM,EAC7CD,UAAW,CACTC,MAAO,IAEP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,0CAIpCyG,gBAAiB,CACfC,SAAU,CACRX,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,mCAC/B2G,IAAK,CACHd,MAAO,EACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,mCAGlC4G,KAAM,CACJb,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,qCAC/B2G,IAAK,CACHd,MAAO,SAACA,GAAK,OAAK5D,SAAS4D,EAAM,EACjC7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,yCAIpCV,aAAc,CACZuD,MAAO,CACLkD,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,gCAC/B2G,IAAK,CACHd,MAAO,SAACA,GAAK,OAAK5D,SAAS4D,EAAM,EACjC7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,qBAIpC6G,sBAAuB,CACrBC,cAAe,CACbf,SACE9E,cAACuB,IAAgB,CAACxC,GAAG,6CAEvB2G,IAAK,CACHd,MAAO,SAACA,GAAK,OAAK5D,SAAS4D,EAAM,EACjC7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,yCAIpC+G,gBAAiB,CACfC,KAAM,CACJjB,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,wCAE/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,iDAGzB4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,yCAIlCkH,gBAAiB,CACftB,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,0CAKpCmH,cAAe,CACbzE,KAAM,CACJqD,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,sCAC/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,+CAGzB4F,UAAW,CACTC,MAAO,GAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,4CAI3BoH,YAAa,CACXrB,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,uCAEjCqH,MAAO,CACLtB,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,gCAC/BkG,SAAU,SAACL,GACT,GAAa,IAATA,EACF,OAAOM,IAAMmB,MAAMjB,KAAKR,EAE5B,EAEAD,UAAW,CACTC,MAAO,IACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,iCAGlCuH,MAAO,CACLxB,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,uCAC/BuG,QAAS,CACPV,MACE,qKACF7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,0BAEhC4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,uCAGlCwH,SAAU,CACRzB,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,kCAC/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,6CAsB7ByH,kBAAmB,CACjB/E,KAAM,CACJqD,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,sCAC/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,+CAGzB4F,UAAW,CACTC,MAAO,GAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,4CAI3BoH,YAAa,CACXrB,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,uCAEjCqH,MAAO,CACLtB,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,gCAC/BkG,SAAU,SAACL,GACT,GAAa,IAATA,EACF,OAAOM,IAAMmB,MAAMjB,KAAKR,EAE5B,EAEAD,UAAW,CACTC,MAAO,IACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,iCAGlCuH,MAAO,CACLxB,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,uCAC/BuG,QAAS,CACPV,MACE,qKACF7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,0BAEhC4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,uCAGlCwH,SAAU,CACRzB,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,kCAC/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,6CAM7B0H,gBAAiB,CACfhF,KAAM,CACJqD,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,wCAE/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,iDAGzB4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,0CAKpC2H,oBAAqB,CACnBjF,KAAM,CACJqD,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,wCAC/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,iDAGzB4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,0CAQpC4H,oBAAqB,CACnBlF,KAAM,CACJqD,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,wCAC/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,iDAGzB4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,yCAGlCsG,WAAY,CACVP,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,qCAC/BuG,QAAS,CACPV,MAAO,QACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,mBAGlC6H,OAAQ,CACN9B,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,sCAC/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,+CAGzB4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,wCAIpC8H,gBAAiB,CACfC,MAAO,CACLhC,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,iCAEjCgI,YAAa,CACXjC,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,mCAEjCiI,OAAQ,CACNlC,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,kCAEjCsG,WAAY,CACVP,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,qCAC/BuG,QAAS,CACPV,MAAO,QACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,oBAKpCkI,YAAa,CACXH,MAAO,CACLhC,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,iCAEjCsG,WAAY,CACVP,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,qCAC/BuG,QAAS,CACPV,MAAO,QACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,oBAKpCmI,YAAa,CACXzF,KAAM,CACJqD,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,wCAE/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,iDAGzB4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,0CAKpCoI,gBAAiB,CACf1F,KAAM,CACJqD,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,wCAC/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,iDAGzB4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,0CAIpCqI,kBAAmB,CACjB3F,KAAM,CACJqD,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,uCAE/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,gDAGzB4F,UAAW,CACTC,MAAO,GACP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,6CAI3BsI,MAAO,CACLvC,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,kCAenCuI,sBAAuB,CACrBC,aAAc,CACZzC,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,wCAEjC0C,KAAM,CACJqD,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,uCAE/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,gDAGzB4F,UAAW,CACTC,MAAO,GACP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,6CAI3BsI,MAAO,CACLvC,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,kCAenCyI,mBAAoB,CAAC,EACrBC,uBAAwB,CAAC,EAEzBC,uBAAwB,CACtBZ,MAAO,CACLhC,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,gCAE/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,6CAGzB4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,0CAGlC4I,SAAU,CACR7C,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,+BAC/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,4CAGzB4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,yCAGlC6I,SAAU,CACR9C,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,+BAC/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,4CAGzB4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,0CAKpC8I,eAAgB,CACdC,aAAc,CACZhD,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,yCAC/BkG,SAAU,SAACL,GAAK,OAAMM,IAAM6C,MAAM3C,KAAKR,EAAM,EAC7CoB,UAAW,CACTpB,MAAO,EACP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,gDAGzB4F,UAAW,CACTC,MAAO,IACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,uCAEhCiJ,QAAS,SAACpD,GAAK,OAAMM,IAAM+C,MAAM7C,KAAKR,EAAM,GAE9CsD,IAAK,CACHpD,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,8BAC/B2G,IAAK,CACHd,MAAO,EACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,qBAEhCoJ,IAAK,CACHvD,MAAO,IACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,wBAGlCqJ,aAAc,CAEZ1C,IAAK,CACHd,MAAO,EACP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,mDAGzBoJ,IAAK,CACHvD,MAAO,GACP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,iDAGzBkG,SAAU,SAACL,GAAK,OACdA,GAAS,GACP5E,cAACuB,IAAgB,CAACxC,GAAG,wCACtB,GAELsJ,WAAY,CACVvD,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,mCAC/B2G,IAAK,CACHd,MAAO,IAGX0D,oBAAqB,CACnBxD,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,gCAC/BkG,SAAU,SAACL,GAAK,OAAMM,IAAMqD,MAAMnD,KAAKR,EAAM,EAC7CU,QAAS,CACPV,MAAO,OACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,mBAEhC4F,UAAW,CACTC,MAAO,MAIX4D,oBAAqB,CACnB1D,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,gCAC/BkG,SAAU,SAACL,GAAK,OAAMM,IAAMqD,MAAMnD,KAAKR,EAAM,EAC7CU,QAAS,CACPV,MAAO,OACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,mBAEhC4F,UAAW,CACTC,MAAO,OAIb6D,eAAgB,CACdC,QAAS,CACP5D,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,kCAC/B4F,UAAW,CACTC,MAAO,IACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,mCAGlC4J,MAAO,CACLhE,UAAW,CACTC,MAAO,IACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,wCAIpC6J,aAAc,CACZC,UAAW,CACT/D,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,oCAC/BkG,SAAU,SAACL,GAAK,OAAMM,IAAM4D,KAAK1D,KAAKR,EAAM,EAE5CD,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,oCAGlCgK,WAAY,CACVjE,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,qCAC/BkG,SAAU,SAACL,GAAK,OAAMM,IAAM4D,KAAK1D,KAAKR,EAAM,EAE5CD,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,qCAGlCuB,SAAU,CACRwE,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,mCAC/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,4CAGzB4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,wCAEhCuG,QAAS,CACPV,MAAOM,IAAM8D,SACbjH,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,uBAGlCqH,MAAO,CACLtB,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,gCAC/BkG,SAAU,SAACL,GACT,GAAa,IAATA,EACF,OAAOM,IAAMmB,MAAMjB,KAAKR,EAE5B,EAEAD,UAAW,CACTC,MAAO,IACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,iCAIlCkK,SAAU,CACRnE,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,mCAC/BiH,UAAW,CACTpB,MAAO,EACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,oCAGlCuH,MAAO,CACLxB,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,uCAC/BuG,QAAS,CACPV,MACE,qKACF7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,0BAEhC4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,wCAIpCmK,iBAAkB,CAChBL,UAAW,CACT/D,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,oCAC/BkG,SAAU,SAACL,GAAK,OAAMM,IAAM4D,KAAK1D,KAAKR,EAAM,EAE5CD,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,oCAGlCgK,WAAY,CACVjE,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,qCAC/BkG,SAAU,SAACL,GAAK,OAAMM,IAAM4D,KAAK1D,KAAKR,EAAM,EAE5CD,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,qCAGlCuB,SAAU,CACRwE,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,mCAC/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,4CAGzB4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,wCAEhCuG,QAAS,CACPV,MAAOM,IAAM8D,SACbjH,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,uBAGlCqH,MAAO,CACLtB,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,gCAC/BkG,SAAU,SAACL,GACT,GAAa,IAATA,EACF,OAAOM,IAAMmB,MAAMjB,KAAKR,EAE5B,EAEAD,UAAW,CACTC,MAAO,IACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,iCAIlCkK,SAAU,CACRnE,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,mCAC/BiH,UAAW,CACTpB,MAAO,EACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,oCAGlCuH,MAAO,CACLxB,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,uCAC/BuG,QAAS,CACPV,MACE,qKACF7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,0BAEhC4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,wCAIpCoK,YAAa,CACXN,UAAW,CACT/D,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,oCAC/BkG,SAAU,SAACL,GAAK,OAAMM,IAAM4D,KAAK1D,KAAKR,EAAM,EAE5CD,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,oCAGlCgK,WAAY,CACVjE,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,qCAC/BkG,SAAU,SAACL,GAAK,OAAMM,IAAM4D,KAAK1D,KAAKR,EAAM,EAE5CD,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,qCAGlCuB,SAAU,CACRwE,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,mCAC/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,4CAGzB4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,wCAEhCuG,QAAS,CACPV,MAAOM,IAAM8D,SACbjH,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,uBAGlCqH,MAAO,CACLnB,SAAU,SAACL,GACT,GAAa,IAATA,EACF,OAAOM,IAAMmB,MAAMjB,KAAKR,EAE5B,EAEAD,UAAW,CACTC,MAAO,IACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,iCAGlCkK,SAAU,CACRnE,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,mCAC/BkG,SAAU,SAACL,GAAK,OAAMM,IAAMkE,SAAShE,KAAU,OAALR,QAAK,IAALA,OAAK,EAALA,EAAOyE,OAAO,EACxDrD,UAAW,CACTpB,MAAO,EACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,oCAIlCuH,MAAO,CACLhB,QAAS,CACPV,MACE,sKACF7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,0BAEhC4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,wCAIpCuK,gBAAiB,CACfT,UAAW,CACT/D,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,oCAC/BkG,SAAU,SAACL,GAAK,OAAMM,IAAM4D,KAAK1D,KAAKR,EAAM,EAE5CD,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,oCAGlCgK,WAAY,CACVjE,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,qCAC/BkG,SAAU,SAACL,GAAK,OAAMM,IAAM4D,KAAK1D,KAAKR,EAAM,EAE5CD,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,qCAGlCuB,SAAU,CACRwE,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,mCAC/BiH,UAAW,CACTpB,MAAO,EAEP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,4CAGzB4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,wCAEhCuG,QAAS,CACPV,MAAOM,IAAM8D,SACbjH,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,uBAGlCqH,MAAO,CACLnB,SAAU,SAACL,GACT,GAAa,IAATA,EACF,OAAOM,IAAMmB,MAAMjB,KAAKR,EAE5B,EACAD,UAAW,CACTC,MAAO,IACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,iCAGlCkK,SAAU,CACRnE,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,mCAC/BkG,SAAU,SAACL,GAAK,OAAMM,IAAMkE,SAAShE,KAAU,OAALR,QAAK,IAALA,OAAK,EAALA,EAAOyE,OAAO,EACxDrD,UAAW,CACTpB,MAAO,EACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,oCAIlCuH,MAAO,CACLhB,QAAS,CACPV,MACE,qKACF7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,0BAEhC4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,wCAIpCwK,YAAa,CACX9H,KAAM,CACJqD,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,oCAC/BkG,SAAU,SAACL,GAAK,OAAMM,IAAM4D,KAAK1D,KAAKR,EAAM,GAE9CmB,KAAM,CACJjB,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,oCAC/BiJ,QAAS,SAACpD,GAAK,OAAMM,IAAM4D,KAAK1D,KAAKR,EAAM,IAG/C4E,eAAgB,CACd/H,KAAM,CACJqD,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,uCAC/BkG,SAAU,SAACL,GAAK,OAAMM,IAAM4D,KAAK1D,KAAKR,EAAM,GAE9CmB,KAAM,CACJjB,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,uCAC/BkG,SAAU,SAACL,GAAK,OAAMM,IAAM4D,KAAK1D,KAAKR,EAAM,GAE9C6E,WAAY,CACV3E,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,qCAC/BkG,SAAU,SAACL,GAAK,OAAKM,IAAMwE,WAAWtE,KAAKR,EAAM,IAGrD+E,eAAgB,CACdlI,KAAM,CACJqD,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,+BAC/B4F,UAAW,CACTC,MAAO,IACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,wCAGlCqH,MAAO,CACLtB,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,gCAC/BkG,SAAU,SAACL,GACT,GAAa,IAATA,EACF,OAAOM,IAAMmB,MAAMjB,KAAKR,EAE5B,EAEAD,UAAW,CACTC,MAAO,IACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,iCAGlCuH,MAAO,CACLxB,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,uCAC/BuG,QAAS,CACPV,MACE,qKACF7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,0BAEhC4F,UAAW,CACTC,MAAO,GACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,uCAGlC6K,KAAM,CACJ9E,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,yCAanC8K,aAAc,CACZ/B,aAAc,CACZhD,SAAU9E,cAACuB,IAAgB,CAACxC,GAAG,qCAC/BkG,SAAU,SAACL,GAAK,OAAMM,IAAM6C,MAAM3C,KAAKR,EAAM,EAC7CoB,UAAW,CACTpB,MAAO,EACP7C,QACE/B,cAACuB,IAAgB,CAACxC,GAAG,8CAGzB4F,UAAW,CACTC,MAAO,IACP7C,QAAS/B,cAACuB,IAAgB,CAACxC,GAAG,qCAEhCiJ,QAAS,SAACpD,GAAK,OAAMM,IAAM+C,MAAM7C,KAAKR,EAAM,KAenCtG,K,iPCh9BFwL,EAAU,SAACC,GACtB,sBAAAlN,EAAAmN,YAAAC,cAAAC,MAAO,SAAAC,EAAO5L,GAAQ,OAAA0L,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACdC,IAAQC,KAAK,CACjBC,OAAQC,IAAIC,mBAAmBF,OAC/BG,KAAMF,IAAIC,mBAAmBC,KAC7B5J,KAAM8I,IACLe,MAAK,SAACC,GACPxM,EAAS,CACP4C,KAAM,yBACNF,KAAc,OAAR8J,QAAQ,IAARA,OAAQ,EAARA,EAAU9J,KAChB8I,UAEJ,IAAG,KAAD,mBAAAM,EAAAW,OAAA,GAAAb,EAAA,KACH,gBAAAc,GAAA,OAAApO,EAAAqO,MAAA,KAAAC,UAAA,EAZD,EAaF,EAEa7H,EAAU,SAACrC,GACtB,sBAAAmK,EAAApB,YAAAC,cAAAC,MAAO,SAAAmB,EAAO9M,GAAQ,OAAA0L,cAAAG,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EACdC,IAAQC,KAAK,CACjBC,OAAQC,IAAIY,UAAUb,OACtBG,KAAMF,IAAIY,UAAUV,KACpBW,MAAOvK,IAEN6J,MAAK,SAACC,GACLxM,EAAS,CACP4C,KAAM,oBACNnE,SAAkB,OAAR+N,QAAQ,IAARA,OAAQ,EAARA,EAAU9J,MAExB,IACCwK,OAAM,SAAChM,GACN8D,QAAQC,IAAI/D,EACd,IAAG,KAAD,mBAAA6L,EAAAN,OAAA,GAAAK,EAAA,KACL,gBAAAK,GAAA,OAAAN,EAAAF,MAAA,KAAAC,UAAA,EAfD,EAgBF,EAEaQ,EAAM,SAACC,GAClB,sBAAAC,EAAA7B,YAAAC,cAAAC,MAAO,SAAA4B,EAAOvN,EAAUwN,GAAQ,OAAA9B,cAAAG,MAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACxBC,IAAQC,KAAK,CACjBC,OAAQC,IAAIsB,qBAAqBvB,OACjCG,KAAMF,IAAIsB,qBAAqBpB,KAC/B5J,KAAM2K,IAELd,MAAK,SAACC,GACLxM,EAAS,CACP4C,KAAM,oBACN4J,YAEJ,IAECU,OAAM,SAAChM,GAAG,OACTlB,EAAS,CACP4C,KAAM,oBACN1B,OACA,IACF,KAAD,mBAAAuM,EAAAhB,OAAA,GAAAc,EAAA,KACJ,gBAAAI,EAAAC,GAAA,OAAAN,EAAAX,MAAA,KAAAC,UAAA,EAnBD,EAoBF,EACapK,EAAS,SAAC6K,GACrB,sBAAAQ,EAAApC,YAAAC,cAAAC,MAAO,SAAAmC,EAAO9N,EAAUwN,GAAQ,OAAA9B,cAAAG,MAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAA/B,KAAA,EACxBC,IAAQC,KAAK,CACjBC,OAAQC,IAAI4B,qBAAqB7B,OACjCG,KAAMF,IAAI4B,qBAAqB1B,KAC/B5J,KAAM2K,IAELd,MAAK,SAACC,GACLxM,EAAS,CACP4C,KAAM,uBACN4J,YAEJ,IAECU,OAAM,SAAChM,GAAG,OACTlB,EAAS,CACP4C,KAAM,uBACN1B,OACA,IACF,KAAD,mBAAA6M,EAAAtB,OAAA,GAAAqB,EAAA,KACJ,gBAAAG,EAAAC,GAAA,OAAAL,EAAAlB,MAAA,KAAAC,UAAA,EAnBD,EAoBF,EACauB,EAAS,SAACd,GACrB,sBAAAe,EAAA3C,YAAAC,cAAAC,MAAO,SAAA0C,EAAOrO,GAAQ,OAAA0L,cAAAG,MAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACdC,IAAQC,KAAK,CACjBC,OAAQC,IAAImC,qBAAqBpC,OACjCG,KAAMF,IAAImC,qBAAqBjC,KAC/B5J,KAAM2K,IAELd,MAAK,SAACC,GACLxM,EAAS,CACP4C,KAAM,uBACN4J,YAEJ,IACCU,OAAM,SAAChM,GAAG,OAAK8D,QAAQC,IAAI/D,EAAI,IAAE,KAAD,mBAAAoN,EAAA7B,OAAA,GAAA4B,EAAA,KACpC,gBAAAG,GAAA,OAAAJ,EAAAzB,MAAA,KAAAC,UAAA,EAbD,EAcF,C","file":"static/js/138.d651f474.chunk.js","sourcesContent":["import { isObjEmpty } from \"@utils\";\r\nimport classNames from \"classnames\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Media,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport validateOptions from \"../../../../../constants/validate\";\r\nimport { update } from \"../store/action\";\r\nimport { htmlToDraftUtil } from \"../../../../../utility/Utils\";\r\nimport { convertToRaw, EditorState } from \"draft-js\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\n\r\nconst CloudPriceTab = ({ selected }) => {\r\n  const product = useSelector((state) => state.products);\r\n  const lang = useSelector((state) => state.common.language);\r\n\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const [discountData, setDiscountData] = useState(null);\r\n  const store = useSelector((state) => state.discounts);\r\n\r\n  const PriceOptions = validateOptions.PriceOptions;\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [disable, setDisable] = useState(false);\r\n  const { id } = useParams();\r\n\r\n  const [valueTechnicalAssistance, setValueTechnicalAssistance] = useState(\r\n    EditorState.createEmpty()\r\n  );\r\n  useEffect(() => {\r\n    if (store?.err?.statusCode) {\r\n      setDisable(false);\r\n    }\r\n  }, [store?.err]);\r\n  useEffect(() => {\r\n    if (\r\n      selected !== null ||\r\n      (selected !== null &&\r\n        discountData !== null &&\r\n        selected.id !== discountData.id)\r\n    ) {\r\n      setDiscountData(selected);\r\n      setValueTechnicalAssistance(\r\n        htmlToDraftUtil(selected?.technical_assistance || \" \")\r\n      );\r\n    }\r\n  }, [selected]);\r\n\r\n  const onSubmit = (values) => {\r\n    if (isObjEmpty(errors)) {\r\n      const value_technicala_ssistance =\r\n        (valueTechnicalAssistance &&\r\n          draftToHtml(\r\n            convertToRaw(valueTechnicalAssistance?.getCurrentContent())\r\n          )) ||\r\n        null;\r\n      setDisable(true);\r\n      dispatch(\r\n        update({\r\n          id: parseInt(id),\r\n          data: {\r\n            ...values,\r\n            type: selected?.type,\r\n            lang,\r\n            technical_assistance: value_technicala_ssistance || \"\",\r\n          },\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const typeObj = {\r\n    0: {\r\n      text: \"Free\",\r\n    },\r\n    1: {\r\n      text: \"Basic\",\r\n    },\r\n    2: {\r\n      text: \"Active personal\",\r\n    },\r\n    3: {\r\n      text: \"Active professional\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\">\r\n        <Media className=\"mb-2\">\r\n          <Media className=\"mt-50\" body>\r\n            <h4>{selected.username} </h4>\r\n          </Media>\r\n        </Media>\r\n      </Col>\r\n      <Col sm=\"12\">\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"mt-1\"></div>\r\n          <FormGroup>\r\n            <Label for=\"price\">\r\n              <FormattedMessage id=\"price\" />\r\n\r\n              <span className=\"text-danger\">*</span>\r\n            </Label>\r\n            <Input\r\n              name=\"price\"\r\n              id=\"price\"\r\n              placeholder=\" \"\r\n              innerRef={register(PriceOptions.price)}\r\n              className={classNames({ \"is-invalid\": errors[\"price\"] })}\r\n              defaultValue={discountData && discountData.price}\r\n              type=\"number\"\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.price && errors.price.message}\r\n            </small>\r\n          </FormGroup>\r\n\r\n          {product?.selected?.product_type === 3 && (\r\n            <FormGroup>\r\n              <Label for=\"type\">\r\n                <FormattedMessage id=\"type\" />\r\n              </Label>\r\n              <Input\r\n                name=\"type\"\r\n                id=\"type\"\r\n                placeholder=\" \"\r\n                disabled\r\n                defaultValue={typeObj[selected?.type || 0]?.text}\r\n                type=\"text\"\r\n              />\r\n            </FormGroup>\r\n          )}\r\n\r\n          <FormGroup>\r\n            <Label for=\"object\">\r\n              <FormattedMessage id=\"object\" />\r\n            </Label>\r\n            <Input\r\n              name=\"object\"\r\n              id=\"object\"\r\n              innerRef={register(PriceOptions.object)}\r\n              defaultValue={discountData && discountData.object}\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"system_description\">\r\n              <FormattedMessage id=\"system_description\" />\r\n            </Label>\r\n            <Input\r\n              name=\"system_description\"\r\n              id=\"system_description\"\r\n              innerRef={register(PriceOptions.system_description)}\r\n              defaultValue={discountData && discountData.system_description}\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"platform_description\">\r\n              <FormattedMessage id=\"platform_description\" />\r\n            </Label>\r\n            <Input\r\n              name=\"platform_description\"\r\n              id=\"platform_description\"\r\n              innerRef={register(PriceOptions.platform_description)}\r\n              defaultValue={discountData && discountData.platform_description}\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"technical_assistance\">\r\n              <FormattedMessage id=\"technical_assistance\" />\r\n            </Label>\r\n\r\n            <Editor\r\n              stripPastedStyles={true}\r\n              editorState={valueTechnicalAssistance}\r\n              defaultEditorState={valueTechnicalAssistance}\r\n              onEditorStateChange={(data) => setValueTechnicalAssistance(data)}\r\n              name=\"technical_assistance\"\r\n              innerRef={register(PriceOptions.technical_assistance)}\r\n            />\r\n          </FormGroup>\r\n\r\n          <div style={{ textAlign: \"end\" }}>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mr-1\"\r\n              color=\"primary\"\r\n              disabled={disable}\r\n            >\r\n              <FormattedMessage id=\"update\" />\r\n            </Button>\r\n            <Button\r\n              type=\"reset\"\r\n              color=\"secondary\"\r\n              outline\r\n              onClick={() => history.goBack()}\r\n            >\r\n              <FormattedMessage id=\"Cancel\" />\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default injectIntl(CloudPriceTab);\r\n","import { useEffect, useState } from \"react\";\r\nimport { ShoppingCart } from \"react-feather\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Alert,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\nimport { getById } from \"../store/action\";\r\nimport CloudPriceTab from \"./CloudPrice\";\r\nconst CloudPriceEdit = () => {\r\n  const history = useHistory();\r\n  const [activeTab, setActiveTab] = useState(\"1\"),\r\n    store = useSelector((state) => state.prices),\r\n    dispatch = useDispatch(),\r\n    { id } = useParams();\r\n    \r\n    const toggle = (tab) => setActiveTab(tab);\r\n    useEffect(() => {\r\n      dispatch(\r\n        getById({\r\n          id: parseInt(id),\r\n        })\r\n        );\r\n      }, []);\r\n      console.log(store);\r\n  useEffect(() => {\r\n    if (store.status == 200) {\r\n      history.goBack();\r\n    }\r\n  }, [store.status]);\r\n  return store.selected !== null && store.selected !== undefined ? (\r\n    <Row className=\"app-user-edit\">\r\n      <Col sm=\"12\">\r\n        <Card>\r\n          <CardBody className=\"pt-2\">\r\n            <Nav pills>\r\n              <NavItem>\r\n                <NavLink active={activeTab === \"1\"} onClick={() => toggle(\"1\")}>\r\n                  <ShoppingCart size={14} />\r\n                  <span className=\"align-middle d-none d-sm-block\">\r\n                    <FormattedMessage id=\"price\" />\r\n                  </span>\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <CloudPriceTab selected={store.selected} />\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  ) : (\r\n    <Alert color=\"danger\">\r\n      <h4 className=\"alert-heading\">Not found</h4>\r\n    </Alert>\r\n  );\r\n};\r\nexport default CloudPriceEdit;\r\n","import { FormattedMessage } from \"react-intl\";\r\nimport REGEX from \"./regex\";\r\nimport { number } from \"yup\";\r\nconst validateOptions = {\r\n  AboutOptions: {\r\n    about: {\r\n      // required: <FormattedMessage id=\"The about title field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"About title up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  PartnerOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DocumentOptions: {\r\n    label: {\r\n      required: <FormattedMessage id=\"the label field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Label up to 255 characters\" />,\r\n      },\r\n    },\r\n\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n\r\n    short_content: {\r\n      required: <FormattedMessage id=\"the short content field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DiscountOptions: {\r\n    discount: {\r\n      required: <FormattedMessage id=\"the discount field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"The discount is not suitable\" />,\r\n      },\r\n    },\r\n    time: {\r\n      required: <FormattedMessage id=\"The time price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  PriceOptions: {\r\n    price: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n    },\r\n  },\r\n  Document_Link_Options: {\r\n    document_link: {\r\n      required: (\r\n        <FormattedMessage id=\"The time document link field is required\" />\r\n      ),\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  CategoryOptions: {\r\n    code: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n\r\n    message_content: {\r\n      maxLength: {\r\n        value: 30,\r\n        message: <FormattedMessage id=\"Category must be 30 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  BranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n    // short_content: {\r\n    //   required: <FormattedMessage id=\"the short content field is required\" />,\r\n    //   validate: (value) => !REGEX.TITLE.test(value),\r\n    //   maxLength: {\r\n    //     value: 255,\r\n\r\n    //     message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n    //   },\r\n    // },\r\n    // content: {\r\n    //   required: <FormattedMessage id=\"the content field is required\" />,\r\n    //   maxLength: {\r\n    //     value: 3000,\r\n    //     message: <FormattedMessage id=\"Content up to 3000 characters\" />,\r\n    //   },\r\n    // },\r\n  },\r\n\r\n  EditBranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n  },\r\n\r\n  Document_course: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditCategoryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n      // pattern: {\r\n      //   value: REGEX.NAME2,\r\n      //   message: <FormattedMessage id=\"Invalid category name\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditDocumentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    author: {\r\n      required: <FormattedMessage id=\"The Author name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Author name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Author must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  EditQuizOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    contenttext: {\r\n      required: <FormattedMessage id=\"The content field is required\" />,\r\n    },\r\n    answer: {\r\n      required: <FormattedMessage id=\"The answer field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  TermOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    //Học phần\r\n  },\r\n  KindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditKindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  TranscriptOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditTranscriptOptions: {\r\n    student_code: {\r\n      required: <FormattedMessage id=\"The student code field is required\" />,\r\n    },\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  CertificateOptions: {},\r\n  UserCertificateOptions: {},\r\n\r\n  EditCertificateOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"The title must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"The title must be 70 characters max\" />,\r\n      },\r\n    },\r\n    provider: {\r\n      required: <FormattedMessage id=\"Provider field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Provider must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Provider must be 70 characters max\" />,\r\n      },\r\n    },\r\n    position: {\r\n      required: <FormattedMessage id=\"Position field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Position must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Position must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  ProductOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The product's name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Product name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Product name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    vat: {\r\n      required: <FormattedMessage id=\"The VAT field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"VAT more than 0\" />,\r\n      },\r\n      max: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"VAT less than 100\" />,\r\n      },\r\n    },\r\n    number_trial: {\r\n      // required: <FormattedMessage id=\"The Number day field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be greater than or equal to 0\" />\r\n        ),\r\n      },\r\n      max: {\r\n        value: 30,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be less than or equal to 30\" />\r\n        ),\r\n      },\r\n      validate: (value) =>\r\n        value >= 0 || (\r\n          <FormattedMessage id=\"Number day must be a positive number\" />\r\n        ),\r\n    },\r\n    categoryId: {\r\n      required: <FormattedMessage id=\"The category field is required\" />,\r\n      min: {\r\n        value: 0,\r\n      },\r\n    },\r\n    service_price_local: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n\r\n    service_price_cloud: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n  },\r\n  VersionOptions: {\r\n    version: {\r\n      required: <FormattedMessage id=\"The version field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Version up to 255 characters\" />,\r\n      },\r\n    },\r\n    infor: {\r\n      maxLength: {\r\n        value: 500,\r\n        message: <FormattedMessage id=\"Information up to 500 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  StaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditStaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  UserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|\\\\d)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditUserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  CityOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The city name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The city code field is required\" />,\r\n      alidate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n  },\r\n  CountryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The country name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The country code field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    phone_code: {\r\n      required: <FormattedMessage id=\"The phone code field is required\" />,\r\n      validate: (value) => REGEX.PHONE_CODE.test(value),\r\n    },\r\n  },\r\n  StudentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    date: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    },\r\n    // gender: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // courseId: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // formality: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n  },\r\n\r\n  CloudOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The cloud name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Cloud name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Cloud name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    // vat: {\r\n    //   required: <FormattedMessage id=\"The VAT field is required\" />,\r\n    //   min: {\r\n    //     value: 0,\r\n    //     message: <FormattedMessage id=\"VAT more than 0\" />,\r\n    //   },\r\n    //   max: {\r\n    //     value: 100,\r\n    //     message: <FormattedMessage id=\"VAT less than 100\" />,\r\n    //   },\r\n    // },\r\n  },\r\n};\r\nexport default validateOptions;\r\n","import api from \"../../../../../../constants/api\";\r\nimport Service from \"../../../../../../services/request\";\r\nexport const getData = (params) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.LIST_PRODUCT_PRICE.method,\r\n      path: api.LIST_PRODUCT_PRICE.path,\r\n      data: params,\r\n    }).then((response) => {\r\n      dispatch({\r\n        type: \"GET_DATA_PRICE_PRODUCT\",\r\n        data: response?.data,\r\n        params,\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const getById = (data) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.GET_PRICE.method,\r\n      path: api.GET_PRICE.path,\r\n      query: data,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"GET_PRICE_PRODUCT\",\r\n          selected: response?.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const add = (staff) => {\r\n  return async (dispatch, getState) => {\r\n    await Service.send({\r\n      method: api.CREATE_PRODUCT_PRICE.method,\r\n      path: api.CREATE_PRODUCT_PRICE.path,\r\n      data: staff,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"ADD_PRICE_PRODUCT\",\r\n          response,\r\n        });\r\n      })\r\n\r\n      .catch((err) =>\r\n        dispatch({\r\n          type: \"ADD_PRICE_PRODUCT\",\r\n          err,\r\n        })\r\n      );\r\n  };\r\n};\r\nexport const update = (staff) => {\r\n  return async (dispatch, getState) => {\r\n    await Service.send({\r\n      method: api.UPDATE_PRODUCT_PRICE.method,\r\n      path: api.UPDATE_PRODUCT_PRICE.path,\r\n      data: staff,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"UPDATE_PRICE_PRODUCT\",\r\n          response,\r\n        });\r\n      })\r\n\r\n      .catch((err) =>\r\n        dispatch({\r\n          type: \"UPDATE_PRICE_PRODUCT\",\r\n          err,\r\n        })\r\n      );\r\n  };\r\n};\r\nexport const remove = (staff) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.DELETE_PRODUCT_PRICE.method,\r\n      path: api.DELETE_PRODUCT_PRICE.path,\r\n      data: staff,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"DELETE_PRICE_PRODUCT\",\r\n          response,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n"],"sourceRoot":""}