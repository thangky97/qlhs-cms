{"version":3,"sources":["views/apps/achievement/transcript/edit/Transcript.js","views/apps/achievement/transcript/edit/index.js","constants/validate.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js","../node_modules/reactstrap/es/Alert.js","../node_modules/reactstrap/es/Nav.js","views/apps/achievement/transcript/store/action/index.js"],"names":["injectIntl","_ref","_errors$student_code","_errors$name","_errors$score","selected","intl","store","useSelector","state","kind","_useForm","useForm","register","errors","handleSubmit","history","useHistory","_useState","useState","_useState2","_slicedToArray","kindData","setKindData","lang","common","language","dispatch","useDispatch","_useState3","_useState4","status","setStatus","_useState5","_useState6","disable","setDisable","id","useParams","EditTranscriptOptions","validateOptions","useEffect","_store$err","err","statusCode","getKind","filter","skip","limit","order","key","value","push","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","isObjEmpty","updateKind","parseInt","data","_objectSpread","name","stop","_x","apply","arguments","_jsxs","Row","children","_jsx","Col","sm","Media","className","body","Form","FormGroup","Label","for","FormattedMessage","Input","innerRef","student_code","onBlur","document","getElementById","trim","classnames","defaultValue","message","type","onChange","e","target","required","formatMessage","score","style","textAlign","Button","color","disabled","outline","onClick","goBack","KindEdit","activeTab","setActiveTab","transcript","undefined","Card","CardBody","Nav","pills","NavItem","NavLink","active","Table","size","TabContent","TabPane","tabId","KindTab","Alert","AboutOptions","about","maxLength","PartnerOptions","DocumentOptions","label","validate","REGEX","TITLE","test","sort_order","pattern","short_content","DiscountOptions","discount","min","time","PriceOptions","price","Document_Link_Options","document_link","CategoryOptions","code","minLength","message_content","BranchOptions","code_branch","email","EMAIL","phone","addpress","EditBranchOptions","Document_course","EditCategoryOptions","EditDocumentOptions","author","EditQuizOptions","title","contenttext","answer","TermOptions","KindOptions","EditKindOptions","TranscriptOptions","CertificateOptions","UserCertificateOptions","EditCertificateOptions","provider","position","ProductOptions","product_name","NAME2","alidate","SPACE","vat","max","number_trial","categoryId","service_price_local","PRICE","service_price_cloud","VersionOptions","version","infor","StaffOptions","last_name","NAME","first_name","username","USERNAME","password","EditStaffOptions","UserOptions","PASSWORD","EditUserOptions","CityOptions","CountryOptions","phone_code","PHONE_CODE","StudentOptions","date","CloudOptions","TabContext","React","createContext","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","oneOfType","func","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","createElement","_extends","ref","defaultProps","any","_Component","_this","call","this","_inheritsLoose","getDerivedStateFromProps","nextProps","prevState","prototype","render","_this$props","omit","Object","keys","Provider","activeTabId","Component","getClasses","Consumer","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","i","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","node","closeClassName","closeAriaLabel","fade","bool","isOpen","toggle","transition","shape","Fade","unmountOnExit","closeClasses","alertTransition","baseClass","timeout","in","role","tabs","vertical","horizontal","justified","fill","navbar","card","getVerticalClass","getData","params","Service","send","method","api","TRANSCRIPT_LIST","path","then","response","_response$data","_response$data$data","_response$data2","_response$data3","_response$data4","totalPages","total","getDataUserProduct","_callee2","_context2","GET_SCORES","query","productId","usersId","console","log","_x2","resetDataUserProduct","getDataExport","_ref3","_callee3","_context3","_response$data5","_response$data6","_x3","_ref4","_callee4","_context4","GET_TRANSCRIPT","catch","_x4","Kind","_ref6","_callee6","getState","_context6","UPDATE_TRANSCRIPT","_x7","_x8"],"mappings":"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","file":"static/js/65.dedddf51.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\n\r\nimport \"react-phone-number-input/style.css\";\r\n\r\nimport { isObjEmpty } from \"@utils\";\r\n\r\nimport classnames from \"classnames\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Media,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport validateOptions from \"@constants/validate\";\r\nimport { getKind, getKindId, updateKind } from \"../store/action\";\r\nimport classNames from \"classnames\";\r\nimport Select from \"react-select\";\r\n\r\nconst TranscriptTab = ({ selected, intl }) => {\r\n  const store = useSelector((state) => state.kind);\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const history = useHistory();\r\n  const [kindData, setKindData] = useState(null);\r\n  const lang = useSelector((state) => state.common.language);\r\n  const dispatch = useDispatch();\r\n  const [status, setStatus] = useState(null);\r\n  const [disable, setDisable] = useState(false);\r\n  const { id } = useParams();\r\n  const EditTranscriptOptions = validateOptions.EditTranscriptOptions;\r\n\r\n  useEffect(() => {\r\n    if (store?.err?.statusCode) {\r\n      setDisable(false);\r\n    }\r\n  }, [store?.err]);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      getKind({\r\n        filter: {\r\n          // status: filterStatus.value || undefined,\r\n          // name: searchName || undefined,\r\n        },\r\n        skip: 1,\r\n        limit: 100,\r\n        order: {\r\n          key: \"name\",\r\n          value: \"desc\",\r\n        },\r\n      })\r\n    );\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      selected !== null ||\r\n      (selected !== null && kindData !== null && selected.id !== kindData.id)\r\n    ) {\r\n      setKindData(selected);\r\n    }\r\n  }, [selected, kindData]);\r\n\r\n  useEffect(() => {\r\n    if (store.status === 200) {\r\n      history.push(\"/apps/kind/list\");\r\n    }\r\n  }, [store.status, history]);\r\n\r\n  const onSubmit = async (values) => {\r\n    if (isObjEmpty(errors)) {\r\n      setDisable(true);\r\n      dispatch(\r\n        updateKind({\r\n          id: parseInt(id),\r\n          data: {\r\n            ...values,\r\n            name: values.name,\r\n            //status: parseInt(values.status),\r\n            lang,\r\n          },\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (kindData) {\r\n      setStatus(kindData.status);\r\n    }\r\n  }, [kindData]);\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\">\r\n        <Media className=\"mb-2\">\r\n          <Media className=\"mt-50\" body>\r\n            <h4>{selected.name} </h4>\r\n          </Media>\r\n        </Media>\r\n      </Col>\r\n      <Col sm=\"12\">\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <FormGroup>\r\n            <Label for=\"name\">\r\n              <FormattedMessage id=\"student_code\" />{\" \"}\r\n              <span className=\"text-danger\">*</span>\r\n            </Label>\r\n            <Input\r\n              name=\"student_code\"\r\n              id=\"student_code\"\r\n              innerRef={register(EditTranscriptOptions.student_code)}\r\n              onBlur={() => {\r\n                let student_code = document.getElementById(\"student_code\");\r\n                if (student_code && student_code.value) {\r\n                  student_code.value = student_code.value.trim();\r\n                }\r\n              }}\r\n              className={classnames({ \"is-invalid\": errors[\"student_code\"] })}\r\n              defaultValue={kindData && kindData.student_code}\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.student_code && errors.student_code.message}\r\n            </small>\r\n            {errors?.student_code?.type == \"validate\" && (\r\n              <small className=\"text-danger\">\r\n                <FormattedMessage id=\"Invalid kind name\" />\r\n              </small>\r\n            )}\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"name\">\r\n              <FormattedMessage id=\"nameLearn\" />{\" \"}\r\n              <span className=\"text-danger\">*</span>\r\n            </Label>\r\n            <Input\r\n              name=\"name\"\r\n              id=\"name\"\r\n              innerRef={register(EditTranscriptOptions.name)}\r\n              onBlur={() => {\r\n                let name = document.getElementById(\"name\");\r\n                if (name && name.value) {\r\n                  name.value = name.value.trim();\r\n                }\r\n              }}\r\n              className={classnames({ \"is-invalid\": errors[\"name\"] })}\r\n              defaultValue={kindData && kindData.name}\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.name && errors.name.message}\r\n            </small>\r\n            {errors?.name?.type == \"validate\" && (\r\n              <small className=\"text-danger\">\r\n                <FormattedMessage id=\"Invalid kind name\" />\r\n              </small>\r\n            )}\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"course\">\r\n              <FormattedMessage id=\"Course\" />{\" \"}\r\n              <span className=\"text-danger\">*</span>\r\n            </Label>\r\n\r\n            <Input\r\n              type=\"select\"\r\n              name=\"status\"\r\n              value={status}\r\n              onChange={(e) => setStatus(e.target.value)}\r\n              id=\"status\"\r\n              innerRef={register({ required: true })}\r\n            >\r\n              <option value=\"1\">{intl.formatMessage({ id: \"HTML\" })}</option>\r\n              <option value=\"2\">\r\n                {intl.formatMessage({ id: \"Javascript\" })}\r\n              </option>\r\n            </Input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"study form\">\r\n              <FormattedMessage id=\"study form\" /> {\" \"}\r\n              <span className=\"text-danger\">*</span>\r\n            </Label>\r\n\r\n            <Input\r\n              type=\"select\"\r\n              name=\"status\"\r\n              value={status}\r\n              onChange={(e) => setStatus(e.target.value)}\r\n              id=\"status\"\r\n              innerRef={register({ required: true })}\r\n            >\r\n              <option value=\"1\">{intl.formatMessage({ id: \"Online\" })}</option>\r\n              <option value=\"2\">{intl.formatMessage({ id: \"Offline\" })}</option>\r\n              <option value=\"0\">\r\n                {intl.formatMessage({ id: \"Elearning\" })}\r\n              </option>\r\n            </Input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"name\">\r\n              <FormattedMessage id=\"final score\" />{\" \"}\r\n              <span className=\"text-danger\">*</span>\r\n            </Label>\r\n            <Input\r\n              name=\"score\"\r\n              id=\"score\"\r\n              innerRef={register(EditTranscriptOptions.score)}\r\n              onBlur={() => {\r\n                let score = document.getElementById(\"score\");\r\n                if (score && score.value) {\r\n                  score.value = score.value.trim();\r\n                }\r\n              }}\r\n              className={classnames({ \"is-invalid\": errors[\"score\"] })}\r\n              defaultValue={kindData && kindData.score}\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.score && errors.score.message}\r\n            </small>\r\n            {errors?.score?.type == \"validate\" && (\r\n              <small className=\"text-danger\">\r\n                <FormattedMessage id=\"Invalid kind name\" />\r\n              </small>\r\n            )}\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"status\">\r\n              <FormattedMessage id=\"Status\" />\r\n            </Label>\r\n\r\n            <Input\r\n              type=\"select\"\r\n              name=\"status\"\r\n              value={status}\r\n              onChange={(e) => setStatus(e.target.value)}\r\n              id=\"status\"\r\n              innerRef={register({ required: true })}\r\n            >\r\n              <option value=\"1\">{intl.formatMessage({ id: \"Active\" })}</option>\r\n              <option value=\"2\">{intl.formatMessage({ id: \"Blocked\" })}</option>\r\n            </Input>\r\n          </FormGroup>\r\n          <div style={{ textAlign: \"end\" }}>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mr-1\"\r\n              color=\"primary\"\r\n              disabled={disable}\r\n            >\r\n              <FormattedMessage id=\"update\" />\r\n            </Button>\r\n            <Button\r\n              type=\"reset\"\r\n              color=\"secondary\"\r\n              outline\r\n              onClick={() => history.goBack()}\r\n            >\r\n              <FormattedMessage id=\"Cancel\" />\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default injectIntl(TranscriptTab);\r\n","import { useEffect, useState } from \"react\";\r\nimport { AlignJustify, Table } from \"react-feather\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Alert,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\nimport { getKind } from \"../store/action\";\r\nimport KindTab from \"./Transcript\";\r\n\r\nconst KindEdit = () => {\r\n  const [activeTab, setActiveTab] = useState(\"1\"),\r\n    store = useSelector((state) => state.transcript),\r\n    dispatch = useDispatch(),\r\n    { id } = useParams();\r\n\r\n  const toggle = (tab) => setActiveTab(tab);\r\n\r\n  useEffect(() => {\r\n    dispatch(getKind(parseInt(id)));\r\n  }, [dispatch]);\r\n\r\n  return store.selected !== null && store.selected !== undefined ? (\r\n    <Row className=\"app-user-edit\">\r\n      <Col sm=\"12\">\r\n        <Card>\r\n          <CardBody className=\"pt-2\">\r\n            <Nav pills>\r\n              <NavItem>\r\n                <NavLink active={activeTab === \"1\"} onClick={() => toggle(\"1\")}>\r\n                  <Table size={14} />\r\n                  <span className=\"align-middle d-none d-sm-block\">\r\n                    <FormattedMessage id=\"Transcript\" />\r\n                  </span>\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <KindTab selected={store.selected} />\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  ) : (\r\n    <Alert color=\"danger\">\r\n      <h4 className=\"alert-heading\">Not found</h4>\r\n    </Alert>\r\n  );\r\n};\r\nexport default KindEdit;\r\n","import { FormattedMessage } from \"react-intl\";\r\nimport REGEX from \"./regex\";\r\nimport { number } from \"yup\";\r\nconst validateOptions = {\r\n  AboutOptions: {\r\n    about: {\r\n      // required: <FormattedMessage id=\"The about title field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"About title up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  PartnerOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DocumentOptions: {\r\n    label: {\r\n      required: <FormattedMessage id=\"the label field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Label up to 255 characters\" />,\r\n      },\r\n    },\r\n\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n\r\n    short_content: {\r\n      required: <FormattedMessage id=\"the short content field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DiscountOptions: {\r\n    discount: {\r\n      required: <FormattedMessage id=\"the discount field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"The discount is not suitable\" />,\r\n      },\r\n    },\r\n    time: {\r\n      required: <FormattedMessage id=\"The time price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  PriceOptions: {\r\n    price: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n    },\r\n  },\r\n  Document_Link_Options: {\r\n    document_link: {\r\n      required: (\r\n        <FormattedMessage id=\"The time document link field is required\" />\r\n      ),\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  CategoryOptions: {\r\n    code: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n\r\n    message_content: {\r\n      maxLength: {\r\n        value: 30,\r\n        message: <FormattedMessage id=\"Category must be 30 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  BranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n    // short_content: {\r\n    //   required: <FormattedMessage id=\"the short content field is required\" />,\r\n    //   validate: (value) => !REGEX.TITLE.test(value),\r\n    //   maxLength: {\r\n    //     value: 255,\r\n\r\n    //     message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n    //   },\r\n    // },\r\n    // content: {\r\n    //   required: <FormattedMessage id=\"the content field is required\" />,\r\n    //   maxLength: {\r\n    //     value: 3000,\r\n    //     message: <FormattedMessage id=\"Content up to 3000 characters\" />,\r\n    //   },\r\n    // },\r\n  },\r\n\r\n  EditBranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n  },\r\n\r\n  Document_course: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditCategoryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n      // pattern: {\r\n      //   value: REGEX.NAME2,\r\n      //   message: <FormattedMessage id=\"Invalid category name\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditDocumentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    author: {\r\n      required: <FormattedMessage id=\"The Author name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Author name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Author must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  EditQuizOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    contenttext: {\r\n      required: <FormattedMessage id=\"The content field is required\" />,\r\n    },\r\n    answer: {\r\n      required: <FormattedMessage id=\"The answer field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  TermOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    //Học phần\r\n  },\r\n  KindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditKindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  TranscriptOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditTranscriptOptions: {\r\n    student_code: {\r\n      required: <FormattedMessage id=\"The student code field is required\" />,\r\n    },\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  CertificateOptions: {},\r\n  UserCertificateOptions: {},\r\n\r\n  EditCertificateOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"The title must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"The title must be 70 characters max\" />,\r\n      },\r\n    },\r\n    provider: {\r\n      required: <FormattedMessage id=\"Provider field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Provider must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Provider must be 70 characters max\" />,\r\n      },\r\n    },\r\n    position: {\r\n      required: <FormattedMessage id=\"Position field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Position must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Position must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  ProductOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The product's name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Product name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Product name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    vat: {\r\n      required: <FormattedMessage id=\"The VAT field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"VAT more than 0\" />,\r\n      },\r\n      max: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"VAT less than 100\" />,\r\n      },\r\n    },\r\n    number_trial: {\r\n      // required: <FormattedMessage id=\"The Number day field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be greater than or equal to 0\" />\r\n        ),\r\n      },\r\n      max: {\r\n        value: 30,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be less than or equal to 30\" />\r\n        ),\r\n      },\r\n      validate: (value) =>\r\n        value >= 0 || (\r\n          <FormattedMessage id=\"Number day must be a positive number\" />\r\n        ),\r\n    },\r\n    categoryId: {\r\n      required: <FormattedMessage id=\"The category field is required\" />,\r\n      min: {\r\n        value: 0,\r\n      },\r\n    },\r\n    service_price_local: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n\r\n    service_price_cloud: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n  },\r\n  VersionOptions: {\r\n    version: {\r\n      required: <FormattedMessage id=\"The version field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Version up to 255 characters\" />,\r\n      },\r\n    },\r\n    infor: {\r\n      maxLength: {\r\n        value: 500,\r\n        message: <FormattedMessage id=\"Information up to 500 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  StaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditStaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  UserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|\\\\d)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditUserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  CityOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The city name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The city code field is required\" />,\r\n      alidate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n  },\r\n  CountryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The country name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The country code field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    phone_code: {\r\n      required: <FormattedMessage id=\"The phone code field is required\" />,\r\n      validate: (value) => REGEX.PHONE_CODE.test(value),\r\n    },\r\n  },\r\n  StudentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    date: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    },\r\n    // gender: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // courseId: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // formality: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n  },\r\n\r\n  CloudOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The cloud name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Cloud name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Cloud name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    // vat: {\r\n    //   required: <FormattedMessage id=\"The VAT field is required\" />,\r\n    //   min: {\r\n    //     value: 0,\r\n    //     message: <FormattedMessage id=\"VAT more than 0\" />,\r\n    //   },\r\n    //   max: {\r\n    //     value: 100,\r\n    //     message: <FormattedMessage id=\"VAT less than 100\" />,\r\n    //   },\r\n    // },\r\n  },\r\n};\r\nexport default validateOptions;\r\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabId\", \"tag\"]);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread(_objectSpread({}, Fade.defaultProps), {}, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread(_objectSpread(_objectSpread({}, Fade.defaultProps), transition), {}, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return /*#__PURE__*/React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import api from \"@constants/api\";\r\nimport Service from \"@services/request\";\r\n\r\nexport const getData = (params) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.TRANSCRIPT_LIST.method,\r\n      path: api.TRANSCRIPT_LIST.path,\r\n      data: params,\r\n    }).then((response) => {\r\n      if (response?.data?.data?.length > 0) {\r\n        dispatch({\r\n          type: \"GET_DATA_TRANSCRIPT\",\r\n          data: response?.data?.data || [],\r\n          totalPages: response?.data?.total,\r\n          params,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: \"GET_DATA_TRANSCRIPT\",\r\n          data: response?.data || [],\r\n          totalPages: response?.data?.total,\r\n          params,\r\n        });\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const getDataUserProduct = (params) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.GET_SCORES.method,\r\n      path: api.GET_SCORES.path,\r\n      query: {\r\n        id: params?.productId,\r\n        lang: params?.lang,\r\n        usersId: params?.usersId,\r\n      },\r\n    }).then((response) => {\r\n      if (response?.statusCode === 200) {\r\n        console.log(response?.data);\r\n        dispatch({\r\n          type: \"GET_DATA_USER_PRODUCT\",\r\n          data: response?.data || [],\r\n          params,\r\n        });\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const resetDataUserProduct = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"RESET_DATA_USER_PRODUCT\",\r\n    });\r\n  };\r\n};\r\n\r\nexport const getDataExport = (params) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.TRANSCRIPT_LIST.method,\r\n      path: api.TRANSCRIPT_LIST.path,\r\n      data: params,\r\n    }).then((response) => {\r\n      if (response) {\r\n        dispatch({\r\n          type: \"GET_DATA_EXPORT_TRANSCRIPT\",\r\n          data: response?.data?.data || [],\r\n          totalPages: response?.data?.total,\r\n          params,\r\n        });\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const getKind = (id) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.GET_TRANSCRIPT.method,\r\n      path: api.GET_TRANSCRIPT.path,\r\n      query: { id },\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"GET_TRANSCRIPT\",\r\n          selected: response?.data,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const addKind = (Kind) => {\r\n  return async (dispatch, getState) => {\r\n    await Service.send({\r\n      method: api.CREATE_KIND.method,\r\n      path: api.CREATE_KIND.path,\r\n      data: Kind,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"ADD_TRANSCRIPT\",\r\n          response,\r\n        });\r\n      })\r\n      .catch((err) =>\r\n        dispatch({\r\n          type: \"ADD_TRANSCRIPT\",\r\n          err,\r\n        })\r\n      );\r\n  };\r\n};\r\nexport const updateKind = (Kind) => {\r\n  return async (dispatch, getState) => {\r\n    await Service.send({\r\n      method: api.UPDATE_TRANSCRIPT.method,\r\n      path: api.UPDATE_TRANSCRIPT.path,\r\n      data: Kind,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"UPDATE_TRANSCRIPT\",\r\n          response,\r\n        });\r\n      })\r\n\r\n      .catch((err) =>\r\n        dispatch({\r\n          type: \"UPDATE_TRANSCRIPT\",\r\n          err,\r\n        })\r\n      );\r\n  };\r\n};\r\n"],"sourceRoot":""}