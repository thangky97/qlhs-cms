{"version":3,"sources":["views/pages/authentication/Register.js","../node_modules/reactstrap/es/CardText.js","@core/components/input-password-toggle/index.js"],"names":["Register","_jsx2","ability","useContext","AbilityContext","_useSkin","useSkin","_useSkin2","_slicedToArray","skin","history","useHistory","dispatch","useDispatch","_useForm","useForm","register","errors","handleSubmit","_useState","trigger","useState","_useState2","email","setEmail","_useState3","_useState4","valErrors","setValErrors","_useState5","_useState6","username","setUsername","_useState7","_useState8","password","setPassword","_useState9","_useState10","setTerms","illustration","source","require","concat","default","Terms","_jsxs","Fragment","children","_jsx","className","href","onClick","e","preventDefault","Row","Link","to","viewBox","version","height","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","Col","lg","sm","src","alt","md","CardTitle","tag","CardText","Form","action","onSubmit","isObjEmpty","useJwt","then","res","data","error","arr","property","console","_objectSpread","user","accessToken","update","handleLogin","push","catch","err","log","FormGroup","Label","for","Input","autoFocus","type","value","placeholder","name","onChange","errs","target","classnames","innerRef","required","validate","Object","keys","length","InputPasswordToggle","_defineProperty","CustomInput","label","checked","invalid","terms","Button","Ripple","block","color","Facebook","size","Twitter","Mail","GitHub","propTypes","tagPropType","PropTypes","string","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","rest","_objectWithoutProperties","_excluded","inputVisibility","setInputVisibility","InputGroup","InputGroupAddon","addonType","InputGroupText","Eye","EyeOff","renderIcon"],"mappings":"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","file":"static/js/131.fd2c66c0.chunk.js","sourcesContent":["import { Fragment, useState, useContext } from 'react'\r\nimport { isObjEmpty } from '@utils'\r\nimport classnames from 'classnames'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useForm } from 'react-hook-form'\r\nimport { handleLogin } from '@store/actions/auth'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\r\nimport { Row, Col, CardTitle, CardText, FormGroup, Label, Button, Form, Input, CustomInput } from 'reactstrap'\r\n\r\nimport '@styles/base/pages/page-auth.scss'\r\n\r\nconst Register = () => {\r\n  const ability = useContext(AbilityContext)\r\n\r\n  const [skin, setSkin] = useSkin()\r\n\r\n  const history = useHistory()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const { register, errors, handleSubmit, trigger } = useForm()\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [valErrors, setValErrors] = useState({})\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [terms, setTerms] = useState(false)\r\n\r\n  const illustration = skin === 'dark' ? 'register-v2-dark.svg' : 'register-v2.svg',\r\n    source = require(`@src/assets/images/pages/${illustration}`).default\r\n\r\n  const Terms = () => {\r\n    return (\r\n      <Fragment>\r\n        I agree to\r\n        <a className='ml-25' href='/' onClick={e => e.preventDefault()}>\r\n          privacy policy & terms\r\n        </a>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    if (isObjEmpty(errors)) {\r\n      useJwt\r\n        .register({ username, email, password })\r\n        .then(res => {\r\n          if (res.data.error) {\r\n            const arr = {}\r\n            for (const property in res.data.error) {\r\n              if (res.data.error[property] !== null) arr[property] = res.data.error[property]\r\n            }\r\n            setValErrors(arr)\r\n            if (res.data.error.email !== null) console.error(res.data.error.email)\r\n            if (res.data.error.username !== null) console.error(res.data.error.username)\r\n          } else {\r\n            setValErrors({})\r\n            const data = { ...res.data.user, accessToken: res.data.accessToken }\r\n            ability.update(res.data.user.ability)\r\n            dispatch(handleLogin(data))\r\n            history.push('/')\r\n          }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n  }\r\n\r\n  const handleUsernameChange = e => {\r\n    const errs = valErrors\r\n    if (errs.username) delete errs.username\r\n    setUsername(e.target.value)\r\n    setValErrors(errs)\r\n  }\r\n\r\n  const handleEmailChange = e => {\r\n    const errs = valErrors\r\n    if (errs.email) delete errs.email\r\n    setEmail(e.target.value)\r\n    setValErrors(errs)\r\n  }\r\n\r\n  return (\r\n    <div className='auth-wrapper auth-v2'>\r\n      <Row className='auth-inner m-0'>\r\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n          <svg viewBox='0 0 139 95' version='1.1' height='28'>\r\n            <defs>\r\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\r\n                <stop stopColor='#000000' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\r\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n            </defs>\r\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\r\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\r\n                  <path\r\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\r\n                    id='Path'\r\n                    className='text-primary'\r\n                    style={{ fill: 'currentColor' }}\r\n                  ></path>\r\n                  <path\r\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\r\n                    id='Path'\r\n                    fill='url(#linearGradient-1)'\r\n                    opacity='0.2'\r\n                  ></path>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.049999997'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.099999994'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-3'\r\n                    fill='url(#linearGradient-2)'\r\n                    opacity='0.099999994'\r\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\r\n                  ></polygon>\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <h2 className='brand-text text-primary ml-1'>Vuexy</h2>\r\n        </Link>\r\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n            <img className='img-fluid' src={source} alt='Login V2' />\r\n          </div>\r\n        </Col>\r\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n            <CardTitle tag='h2' className='font-weight-bold mb-1'>\r\n              Adventure starts here 🚀\r\n            </CardTitle>\r\n            <CardText className='mb-2'>Make your app management easy and fun!</CardText>\r\n\r\n            <Form action='/' className='auth-register-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n              <FormGroup>\r\n                <Label className='form-label' for='register-username'>\r\n                  Username\r\n                </Label>\r\n                <Input\r\n                  autoFocus\r\n                  type='text'\r\n                  value={username}\r\n                  placeholder='johndoe'\r\n                  id='register-username'\r\n                  name='register-username'\r\n                  onChange={handleUsernameChange}\r\n                  className={classnames({ 'is-invalid': errors['register-username'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                />\r\n                {Object.keys(valErrors).length && valErrors.username ? (\r\n                  <small className='text-danger'>{valErrors.username}</small>\r\n                ) : null}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label className='form-label' for='register-email'>\r\n                  Email\r\n                </Label>\r\n                <Input\r\n                  type='email'\r\n                  value={email}\r\n                  id='register-email'\r\n                  name='register-email'\r\n                  onChange={handleEmailChange}\r\n                  placeholder='john@example.com'\r\n                  className={classnames({ 'is-invalid': errors['register-email'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                />\r\n                {Object.keys(valErrors).length && valErrors.email ? (\r\n                  <small className='text-danger'>{valErrors.email}</small>\r\n                ) : null}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label className='form-label' for='register-password'>\r\n                  Password\r\n                </Label>\r\n                <InputPasswordToggle\r\n                  value={password}\r\n                  id='register-password'\r\n                  name='register-password'\r\n                  className='input-group-merge'\r\n                  onChange={e => setPassword(e.target.value)}\r\n                  className={classnames({ 'is-invalid': errors['register-password'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <CustomInput\r\n                  type='checkbox'\r\n                  id='terms'\r\n                  name='terms'\r\n                  value='terms'\r\n                  label={<Terms />}\r\n                  className='custom-control-Primary'\r\n                  innerRef={register({ required: true })}\r\n                  onChange={e => setTerms(e.target.checked)}\r\n                  invalid={errors.terms && true}\r\n                />\r\n              </FormGroup>\r\n              <Button.Ripple type='submit' block color='primary'>\r\n                Sign up\r\n              </Button.Ripple>\r\n            </Form>\r\n            <p className='text-center mt-2'>\r\n              <span className='mr-25'>Already have an account?</span>\r\n              <Link to='/login'>\r\n                <span>Sign in instead</span>\r\n              </Link>\r\n            </p>\r\n            <div className='divider my-2'>\r\n              <div className='divider-text'>or</div>\r\n            </div>\r\n            <div className='auth-footer-btn d-flex justify-content-center'>\r\n              <Button.Ripple color='facebook'>\r\n                <Facebook size={14} />\r\n              </Button.Ripple>\r\n              <Button.Ripple color='twitter'>\r\n                <Twitter size={14} />\r\n              </Button.Ripple>\r\n              <Button.Ripple color='google'>\r\n                <Mail size={14} />\r\n              </Button.Ripple>\r\n              <Button.Ripple className='mr-0' color='github'>\r\n                <GitHub size={14} />\r\n              </Button.Ripple>\r\n            </div>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\nexport default CardText;","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Eye, EyeOff } from 'react-feather'\r\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\r\n\r\nconst InputPasswordToggle = props => {\r\n  // ** Props\r\n  const {\r\n    label,\r\n    hideIcon,\r\n    showIcon,\r\n    visible,\r\n    className,\r\n    htmlFor,\r\n    placeholder,\r\n    iconSize,\r\n    inputClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** State\r\nconst [inputVisibility, setInputVisibility] = useState(visible)\r\n\r\n  // ** Renders Icon Based On Visibility\r\n  const renderIcon = () => {\r\n    const size = iconSize ? iconSize : 14\r\n\r\n    if (inputVisibility === false) {\r\n      return hideIcon ? hideIcon : <Eye size={size} />\r\n    } else {\r\n      return showIcon ? showIcon : <EyeOff size={size} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\r\n      <InputGroup\r\n        className={classnames({\r\n          [className]: className\r\n        })}\r\n      >\r\n        <Input\r\n          type={inputVisibility === false ? 'password' : 'text'}\r\n          placeholder={placeholder ? placeholder : '············'}\r\n          className={classnames({\r\n            [inputClassName]: inputClassName\r\n          })}\r\n          /*eslint-disable */\r\n          {...(label && htmlFor\r\n            ? {\r\n                id: htmlFor\r\n              }\r\n            : {})}\r\n          {...rest}\r\n          /*eslint-enable */\r\n        />\r\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\r\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputPasswordToggle\r\n\r\n// ** PropTypes\r\nInputPasswordToggle.propTypes = {\r\n  hideIcon: PropTypes.node,\r\n  showIcon: PropTypes.node,\r\n  visible: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  inputClassName: PropTypes.string,\r\n  label(props, propName, componentName) {\r\n    // ** If label is defined and htmlFor is undefined throw error\r\n    if (props[propName] && props['htmlFor'] === 'undefined') {\r\n      throw new Error('htmlFor prop is required when label prop is present')\r\n    }\r\n  },\r\n  htmlFor(props, propName, componentName) {\r\n    // ** If htmlFor is defined and label is undefined throw error\r\n    if (props[propName] && props['label'] === 'undefined') {\r\n      throw new Error('label prop is required when htmlFor prop is present')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nInputPasswordToggle.defaultProps = {\r\n  visible: false\r\n}\r\n"],"sourceRoot":""}