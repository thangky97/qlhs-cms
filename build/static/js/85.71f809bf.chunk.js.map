{"version":3,"sources":["views/apps/product/price/edit/Discount.js","views/apps/product/price/edit/index.js","constants/validate.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js","../node_modules/reactstrap/es/Alert.js","../node_modules/reactstrap/es/Nav.js","views/apps/product/price/store/action/index.js"],"names":["injectIntl","_ref","_product$selected","_typeObj","selected","product","useSelector","state","products","lang","common","language","_useForm","useForm","register","errors","handleSubmit","_useState","useState","_useState2","_slicedToArray","discountData","setDiscountData","store","discounts","PriceOptions","validateOptions","dispatch","useDispatch","history","useHistory","_useState3","_useState4","disable","setDisable","id","useParams","useEffect","_store$err","err","statusCode","_jsxs","Row","children","_jsx","Col","sm","Media","className","body","username","Form","onSubmit","values","isObjEmpty","update","parseInt","data","_objectSpread","type","FormGroup","Label","for","FormattedMessage","Input","name","placeholder","innerRef","price","classNames","defaultValue","message","product_type","disabled","text","style","textAlign","Button","color","outline","onClick","goBack","DiscountEdit","activeTab","setActiveTab","prices","getById","status","undefined","Card","CardBody","Nav","pills","NavItem","NavLink","active","ShoppingCart","size","TabContent","TabPane","tabId","DiscountTab","Alert","AboutOptions","about","maxLength","value","PartnerOptions","required","DocumentOptions","label","validate","REGEX","TITLE","test","sort_order","pattern","short_content","DiscountOptions","discount","min","time","Document_Link_Options","document_link","CategoryOptions","code","minLength","message_content","BranchOptions","code_branch","email","EMAIL","phone","addpress","EditBranchOptions","Document_course","EditCategoryOptions","EditDocumentOptions","author","EditQuizOptions","title","contenttext","answer","TermOptions","KindOptions","EditKindOptions","TranscriptOptions","score","EditTranscriptOptions","student_code","CertificateOptions","UserCertificateOptions","EditCertificateOptions","provider","position","ProductOptions","product_name","NAME2","alidate","SPACE","vat","max","number_trial","categoryId","service_price_local","PRICE","service_price_cloud","VersionOptions","version","infor","StaffOptions","last_name","NAME","first_name","USERNAME","password","EditStaffOptions","UserOptions","PASSWORD","trim","EditUserOptions","CityOptions","CountryOptions","phone_code","PHONE_CODE","StudentOptions","date","CloudOptions","TabContext","React","createContext","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","oneOfType","func","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","createElement","_extends","ref","defaultProps","any","_Component","_this","call","this","_inheritsLoose","getDerivedStateFromProps","nextProps","prevState","prototype","render","_this$props","omit","Object","keys","Provider","activeTabId","Component","getClasses","Consumer","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","node","closeClassName","closeAriaLabel","fade","bool","isOpen","toggle","transition","shape","Fade","unmountOnExit","closeClasses","alertTransition","baseClass","timeout","in","role","tabs","vertical","horizontal","justified","fill","navbar","card","getVerticalClass","getData","params","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","Service","send","method","api","LIST_PRODUCT_PRICE","path","then","response","stop","_x","_ref2","_callee2","_context2","GET_PRICE","query","catch","console","log","_x2","add","staff","_ref3","_callee3","getState","_context3","CREATE_PRODUCT_PRICE","_x3","_x4","_ref4","_callee4","_context4","UPDATE_PRODUCT_PRICE","_x5","_x6","remove","_ref5","_callee5","_context5","DELETE_PRODUCT_PRICE","_x7"],"mappings":"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","file":"static/js/85.71f809bf.chunk.js","sourcesContent":["import { isObjEmpty } from \"@utils\";\r\nimport classNames from \"classnames\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Media,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport validateOptions from \"../../../../../constants/validate\";\r\nimport { update } from \"../store/action\";\r\n\r\nconst DiscountTab = ({ selected }) => {\r\n  const product = useSelector((state) => state.products);\r\n  const lang = useSelector((state) => state.common.language);\r\n\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const [discountData, setDiscountData] = useState(null);\r\n  const store = useSelector((state) => state.discounts);\r\n\r\n  const PriceOptions = validateOptions.PriceOptions;\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [disable, setDisable] = useState(false);\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    if (store?.err?.statusCode) {\r\n      setDisable(false);\r\n    }\r\n  }, [store?.err]);\r\n  useEffect(() => {\r\n    if (\r\n      selected !== null ||\r\n      (selected !== null &&\r\n        discountData !== null &&\r\n        selected.id !== discountData.id)\r\n    ) {\r\n      setDiscountData(selected);\r\n    }\r\n  }, [selected]);\r\n\r\n  const onSubmit = (values) => {\r\n    if (isObjEmpty(errors)) {\r\n      setDisable(true);\r\n      dispatch(\r\n        update({\r\n          id: parseInt(id),\r\n          data: {\r\n            ...values,\r\n            type: selected?.type,\r\n            lang,\r\n          },\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const typeObj = {\r\n    0: {\r\n      text: \"Online\",\r\n    },\r\n    1: {\r\n      text: \"Offline\",\r\n    },\r\n    2: {\r\n      text: \"E-learning\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\">\r\n        <Media className=\"mb-2\">\r\n          <Media className=\"mt-50\" body>\r\n            <h4>{selected.username} </h4>\r\n          </Media>\r\n        </Media>\r\n      </Col>\r\n      <Col sm=\"12\">\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"mt-1\"></div>\r\n          <FormGroup>\r\n            <Label for=\"price\">\r\n              <FormattedMessage id=\"price\" />\r\n\r\n              <span className=\"text-danger\">*</span>\r\n            </Label>\r\n            <Input\r\n              name=\"price\"\r\n              id=\"price\"\r\n              placeholder=\" \"\r\n              innerRef={register(PriceOptions.price)}\r\n              className={classNames({ \"is-invalid\": errors[\"price\"] })}\r\n              defaultValue={discountData && discountData.price}\r\n              type=\"number\"\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.price && errors.price.message}\r\n            </small>\r\n          </FormGroup>\r\n\r\n          {product?.selected?.product_type === 0 && (\r\n            <FormGroup>\r\n              <Label for=\"type\">\r\n                <FormattedMessage id=\"type\" />\r\n              </Label>\r\n              <Input\r\n                name=\"type\"\r\n                id=\"type\"\r\n                placeholder=\" \"\r\n                disabled\r\n                defaultValue={typeObj[selected?.type || 0]?.text}\r\n                type=\"text\"\r\n              />\r\n            </FormGroup>\r\n          )}\r\n\r\n          <div style={{ textAlign: \"end\" }}>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mr-1\"\r\n              color=\"primary\"\r\n              disabled={disable}\r\n            >\r\n              <FormattedMessage id=\"update\" />\r\n            </Button>\r\n            <Button\r\n              type=\"reset\"\r\n              color=\"secondary\"\r\n              outline\r\n              onClick={() => history.goBack()}\r\n            >\r\n              <FormattedMessage id=\"Cancel\" />\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default injectIntl(DiscountTab);\r\n","import { useEffect, useState } from \"react\";\r\nimport { ShoppingCart } from \"react-feather\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Alert,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\nimport { getById } from \"../store/action\";\r\nimport DiscountTab from \"./Discount\";\r\nconst DiscountEdit = () => {\r\n  const history = useHistory();\r\n  const [activeTab, setActiveTab] = useState(\"1\"),\r\n    store = useSelector((state) => state.prices),\r\n    dispatch = useDispatch(),\r\n    { id } = useParams();\r\n\r\n  const toggle = (tab) => setActiveTab(tab);\r\n  useEffect(() => {\r\n    dispatch(\r\n      getById({\r\n        id: parseInt(id),\r\n      })\r\n    );\r\n  }, []);\r\n  useEffect(() => {\r\n    if (store.status == 200) {\r\n      history.goBack();\r\n    }\r\n  }, [store.status]);\r\n  return store.selected !== null && store.selected !== undefined ? (\r\n    <Row className=\"app-user-edit\">\r\n      <Col sm=\"12\">\r\n        <Card>\r\n          <CardBody className=\"pt-2\">\r\n            <Nav pills>\r\n              <NavItem>\r\n                <NavLink active={activeTab === \"1\"} onClick={() => toggle(\"1\")}>\r\n                  <ShoppingCart size={14} />\r\n                  <span className=\"align-middle d-none d-sm-block\">\r\n                    <FormattedMessage id=\"Product Price\" />\r\n                  </span>\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <DiscountTab selected={store.selected} />\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  ) : (\r\n    <Alert color=\"danger\">\r\n      <h4 className=\"alert-heading\">Not found</h4>\r\n    </Alert>\r\n  );\r\n};\r\nexport default DiscountEdit;\r\n","import { FormattedMessage } from \"react-intl\";\r\nimport REGEX from \"./regex\";\r\nimport { number } from \"yup\";\r\nconst validateOptions = {\r\n  AboutOptions: {\r\n    about: {\r\n      // required: <FormattedMessage id=\"The about title field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"About title up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  PartnerOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DocumentOptions: {\r\n    label: {\r\n      required: <FormattedMessage id=\"the label field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Label up to 255 characters\" />,\r\n      },\r\n    },\r\n\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n\r\n    short_content: {\r\n      required: <FormattedMessage id=\"the short content field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DiscountOptions: {\r\n    discount: {\r\n      required: <FormattedMessage id=\"the discount field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"The discount is not suitable\" />,\r\n      },\r\n    },\r\n    time: {\r\n      required: <FormattedMessage id=\"The time price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  PriceOptions: {\r\n    price: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n    },\r\n  },\r\n  Document_Link_Options: {\r\n    document_link: {\r\n      required: (\r\n        <FormattedMessage id=\"The time document link field is required\" />\r\n      ),\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  CategoryOptions: {\r\n    code: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n\r\n    message_content: {\r\n      maxLength: {\r\n        value: 30,\r\n        message: <FormattedMessage id=\"Category must be 30 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  BranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n    // short_content: {\r\n    //   required: <FormattedMessage id=\"the short content field is required\" />,\r\n    //   validate: (value) => !REGEX.TITLE.test(value),\r\n    //   maxLength: {\r\n    //     value: 255,\r\n\r\n    //     message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n    //   },\r\n    // },\r\n    // content: {\r\n    //   required: <FormattedMessage id=\"the content field is required\" />,\r\n    //   maxLength: {\r\n    //     value: 3000,\r\n    //     message: <FormattedMessage id=\"Content up to 3000 characters\" />,\r\n    //   },\r\n    // },\r\n  },\r\n\r\n  EditBranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n  },\r\n\r\n  Document_course: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditCategoryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n      // pattern: {\r\n      //   value: REGEX.NAME2,\r\n      //   message: <FormattedMessage id=\"Invalid category name\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditDocumentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    author: {\r\n      required: <FormattedMessage id=\"The Author name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Author name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Author must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  EditQuizOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    contenttext: {\r\n      required: <FormattedMessage id=\"The content field is required\" />,\r\n    },\r\n    answer: {\r\n      required: <FormattedMessage id=\"The answer field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  TermOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    //Học phần\r\n  },\r\n  KindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditKindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  TranscriptOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditTranscriptOptions: {\r\n    student_code: {\r\n      required: <FormattedMessage id=\"The student code field is required\" />,\r\n    },\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  CertificateOptions: {},\r\n  UserCertificateOptions: {},\r\n\r\n  EditCertificateOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"The title must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"The title must be 70 characters max\" />,\r\n      },\r\n    },\r\n    provider: {\r\n      required: <FormattedMessage id=\"Provider field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Provider must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Provider must be 70 characters max\" />,\r\n      },\r\n    },\r\n    position: {\r\n      required: <FormattedMessage id=\"Position field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Position must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Position must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  ProductOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The product's name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Product name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Product name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    vat: {\r\n      required: <FormattedMessage id=\"The VAT field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"VAT more than 0\" />,\r\n      },\r\n      max: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"VAT less than 100\" />,\r\n      },\r\n    },\r\n    number_trial: {\r\n      // required: <FormattedMessage id=\"The Number day field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be greater than or equal to 0\" />\r\n        ),\r\n      },\r\n      max: {\r\n        value: 30,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be less than or equal to 30\" />\r\n        ),\r\n      },\r\n      validate: (value) =>\r\n        value >= 0 || (\r\n          <FormattedMessage id=\"Number day must be a positive number\" />\r\n        ),\r\n    },\r\n    categoryId: {\r\n      required: <FormattedMessage id=\"The category field is required\" />,\r\n      min: {\r\n        value: 0,\r\n      },\r\n    },\r\n    service_price_local: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n\r\n    service_price_cloud: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n  },\r\n  VersionOptions: {\r\n    version: {\r\n      required: <FormattedMessage id=\"The version field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Version up to 255 characters\" />,\r\n      },\r\n    },\r\n    infor: {\r\n      maxLength: {\r\n        value: 500,\r\n        message: <FormattedMessage id=\"Information up to 500 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  StaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditStaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  UserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|\\\\d)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditUserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  CityOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The city name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The city code field is required\" />,\r\n      alidate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n  },\r\n  CountryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The country name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The country code field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    phone_code: {\r\n      required: <FormattedMessage id=\"The phone code field is required\" />,\r\n      validate: (value) => REGEX.PHONE_CODE.test(value),\r\n    },\r\n  },\r\n  StudentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    date: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    },\r\n    // gender: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // courseId: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // formality: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n  },\r\n\r\n  CloudOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The cloud name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Cloud name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Cloud name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    // vat: {\r\n    //   required: <FormattedMessage id=\"The VAT field is required\" />,\r\n    //   min: {\r\n    //     value: 0,\r\n    //     message: <FormattedMessage id=\"VAT more than 0\" />,\r\n    //   },\r\n    //   max: {\r\n    //     value: 100,\r\n    //     message: <FormattedMessage id=\"VAT less than 100\" />,\r\n    //   },\r\n    // },\r\n  },\r\n};\r\nexport default validateOptions;\r\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabId\", \"tag\"]);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread(_objectSpread({}, Fade.defaultProps), {}, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread(_objectSpread(_objectSpread({}, Fade.defaultProps), transition), {}, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return /*#__PURE__*/React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import api from \"../../../../../../constants/api\";\r\nimport Service from \"../../../../../../services/request\";\r\nexport const getData = (params) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.LIST_PRODUCT_PRICE.method,\r\n      path: api.LIST_PRODUCT_PRICE.path,\r\n      data: params,\r\n    }).then((response) => {\r\n      dispatch({\r\n        type: \"GET_DATA_PRICE_PRODUCT\",\r\n        data: response?.data,\r\n        params,\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const getById = (data) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.GET_PRICE.method,\r\n      path: api.GET_PRICE.path,\r\n      query: data,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"GET_PRICE_PRODUCT\",\r\n          selected: response?.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const add = (staff) => {\r\n  return async (dispatch, getState) => {\r\n    await Service.send({\r\n      method: api.CREATE_PRODUCT_PRICE.method,\r\n      path: api.CREATE_PRODUCT_PRICE.path,\r\n      data: staff,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"ADD_PRICE_PRODUCT\",\r\n          response,\r\n        });\r\n      })\r\n\r\n      .catch((err) =>\r\n        dispatch({\r\n          type: \"ADD_PRICE_PRODUCT\",\r\n          err,\r\n        })\r\n      );\r\n  };\r\n};\r\nexport const update = (staff) => {\r\n  return async (dispatch, getState) => {\r\n    await Service.send({\r\n      method: api.UPDATE_PRODUCT_PRICE.method,\r\n      path: api.UPDATE_PRODUCT_PRICE.path,\r\n      data: staff,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"UPDATE_PRICE_PRODUCT\",\r\n          response,\r\n        });\r\n      })\r\n\r\n      .catch((err) =>\r\n        dispatch({\r\n          type: \"UPDATE_PRICE_PRODUCT\",\r\n          err,\r\n        })\r\n      );\r\n  };\r\n};\r\nexport const remove = (staff) => {\r\n  return async (dispatch) => {\r\n    await Service.send({\r\n      method: api.DELETE_PRODUCT_PRICE.method,\r\n      path: api.DELETE_PRODUCT_PRICE.path,\r\n      data: staff,\r\n    })\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"DELETE_PRICE_PRODUCT\",\r\n          response,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n"],"sourceRoot":""}