{"version":3,"sources":["views/apps/cms/cloud/tab/link_cloud/edit/link_cloud.js","views/apps/cms/cloud/tab/link_cloud/edit/index.js","../node_modules/postcss-rtl/lib/options.js"],"names":["injectIntl","_ref","selected","intl","_useForm","useForm","errors","register","handleSubmit","history","useHistory","lang","useSelector","state","common","language","_useState","useState","_useState2","_slicedToArray","idLinkCloud","setIdLinkCloud","_useState3","_useState4","disable","setDisable","_useState5","EditorState","createEmpty","_useState6","valueDescription","setValueDescription","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_listAbout$data","_listAbout$data$data","listAbout","_listAbout$data2","_listAbout$data2$data","_listAbout$data3","_listAbout$data3$data","wrap","_context","prev","next","request","send","method","api","LIST_ABOUT","path","query","sent","data","length","id","htmlToDraftUtil","link_cloud","stop","onSubmit","_ref3","_callee2","dataAbout","values","_context2","draftToHtml","convertToRaw","getCurrentContent","GET_ABOUT","about","address_1","address_2","section_intro_1","section_intro_2","section_intro_3","section_product","section_partner","section_service","section_about","privacy_policy","company_name","founded","officer","advisor","faq","my_cloud","UPDATE_ABOUT","then","result","statusCode","toast","success","_jsx","FormattedMessage","goBack","warn","catch","apply","arguments","Row","children","Col","sm","_jsxs","Form","FormGroup","Label","for","className","Editor","stripPastedStyles","toolbar","editorState","onEditorStateChange","name","classNames","description_en","message","style","textAlign","Button","type","color","disabled","outline","onClick","LinkCloudEdit","activeTab","setActiveTab","useParams","Card","CardBody","Nav","pills","NavItem","NavLink","active","Link","size","TabContent","TabPane","tabId","LinkCloud","defaultOptions","addPrefixToSelector","prefixType","prefix","onlyDirection","fromRTL","removeComments","module","exports","validateOptions","options","undefined","fixedOptions","console","indexOf","Object","assign"],"mappings":"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","file":"static/js/150.57490018.chunk.js","sourcesContent":["import { isObjEmpty } from \"@utils\";\r\nimport classNames from \"classnames\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\n\r\nimport { convertToRaw, EditorState } from \"draft-js\";\r\nimport { validateOptions } from \"postcss-rtl/lib/options\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\n\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Col, Form, FormGroup, Label, Row } from \"reactstrap\";\r\nimport request from \"../../../../../../../services/request\";\r\nimport api from \"../../../../../../../constants/api\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { htmlToDraftUtil } from \"../../../../../../../utility/Utils\";\r\n\r\nconst LinkCloudTab = ({ selected, intl }) => {\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const history = useHistory();\r\n  const lang = useSelector((state) => state.common.language);\r\n  const [idLinkCloud, setIdLinkCloud] = useState();\r\n  const [disable, setDisable] = useState(false);\r\n  const [valueDescription, setValueDescription] = useState(\r\n    EditorState.createEmpty()\r\n  );\r\n  useEffect(() => {\r\n    (async () => {\r\n      const listAbout = await request.send({\r\n        method: api.LIST_ABOUT.method,\r\n        path: api.LIST_ABOUT.path,\r\n        query: { lang },\r\n      });\r\n      if (listAbout?.data?.data?.length > 0) {\r\n        setIdLinkCloud(listAbout?.data?.data[0]?.id);\r\n        setValueDescription(\r\n          htmlToDraftUtil(listAbout?.data?.data[0]?.link_cloud || \" \")\r\n        );\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const onSubmit = async () => {\r\n    const link_cloud = draftToHtml(\r\n      convertToRaw(valueDescription.getCurrentContent())\r\n    );\r\n    setDisable(true);\r\n    const dataAbout = await request.send({\r\n      method: api.GET_ABOUT.method,\r\n      path: api.GET_ABOUT.path,\r\n      query: { lang, id: idLinkCloud },\r\n    });\r\n    const values = dataAbout.data;\r\n    let data = {\r\n      id: values.id,\r\n      data: {\r\n        about: values.about || \" \",\r\n        lang: values.lang || \" \",\r\n        address_1: values.address_1 || \" \",\r\n        address_2: values.address_2 || \" \",\r\n        section_intro_1: values.section_intro_1 || \" \",\r\n        section_intro_2: values.section_intro_2 || \" \",\r\n        section_intro_3: values.section_intro_3 || \" \",\r\n        section_product: values.section_product || \" \",\r\n        section_partner: values.section_partner || \" \",\r\n        section_service: values.section_service || \" \",\r\n        section_about: values.section_about || \" \",\r\n        privacy_policy: values.privacy_policy || \" \",\r\n        company_name: values.company_name || \" \",\r\n        founded: values.founded || \" \",\r\n        officer: values.officer || \" \",\r\n        advisor: values.advisor || \" \",\r\n        faq: values.faq || \" \",\r\n        my_cloud: values.my_cloud || \" \",\r\n        link_cloud: link_cloud || \" \",\r\n      },\r\n    };\r\n\r\n    await request\r\n      .send({\r\n        method: api.UPDATE_ABOUT.method,\r\n        path: api.UPDATE_ABOUT.path,\r\n        data,\r\n      })\r\n      .then((result) => {\r\n        if (result) {\r\n          const { statusCode, data } = result;\r\n          if (statusCode === 200) {\r\n            toast.success(<FormattedMessage id={\"Update successful!\"} />);\r\n            history.goBack();\r\n          } else if (statusCode == 400) {\r\n            toast.warn(<FormattedMessage id={\"Update failed!\"} />);\r\n            setDisable(false);\r\n          }\r\n        }\r\n      })\r\n      .catch((result) => {\r\n        setDisable(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\">\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <FormGroup>\r\n            <Label for=\"privacy_description\">\r\n              <FormattedMessage id=\"Description\" />{\" \"}\r\n              <span className=\"text-danger\"></span>\r\n            </Label>\r\n\r\n            <Editor\r\n              stripPastedStyles={true}\r\n              toolbar={{\r\n                // options: [\"inline\", \"textAlign\"],\r\n                // inline: {\r\n                //   inDropdown: false,\r\n                //   options: [\"bold\", \"italic\", \"underline\"],\r\n                // },\r\n              }}\r\n              editorState={valueDescription}\r\n              onEditorStateChange={(data) => setValueDescription(data)}\r\n              name=\"privacy_description\"\r\n              // innerRef={register(ProductOptions.description_en)}\r\n              className={classNames({\r\n                \"is-invalid\": errors[\"privacy_description\"],\r\n              })}\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.description_en && errors.description_en.message}\r\n            </small>\r\n          </FormGroup>\r\n\r\n          <div style={{ textAlign: \"end\" }}>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mr-1\"\r\n              color=\"primary\"\r\n              disabled={disable}\r\n            >\r\n              <FormattedMessage id=\"update\" />\r\n            </Button>\r\n            <Button\r\n              type=\"reset\"\r\n              color=\"secondary\"\r\n              outline\r\n              onClick={() => history.goBack()}\r\n            >\r\n              <FormattedMessage id=\"Cancel\" />\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default injectIntl(LinkCloudTab);\r\n","import { request } from \"http\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FileText, Link } from \"react-feather\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Alert,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\nimport api from \"../../../../../../../constants/api\";\r\nimport LinkCloud from \"./link_cloud\";\r\n\r\nconst LinkCloudEdit = () => {\r\n  const [selected, setSelected] = useState(null);\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const { id } = useParams();\r\n  const toggle = (tab) => setActiveTab(tab);\r\n  return (\r\n    <Row className=\"app-user-edit\">\r\n      <Col sm=\"12\">\r\n        <Card>\r\n          <CardBody className=\"pt-2\">\r\n            <Nav pills>\r\n              <NavItem>\r\n                <NavLink active={activeTab === \"1\"} onClick={() => toggle(\"1\")}>\r\n                  <Link size={14} />\r\n                  <span className=\"align-middle d-none d-sm-block\">\r\n                    <FormattedMessage id=\"Link Cloud\" />\r\n                  </span>\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <LinkCloud selected={selected} />\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  ) \r\n};\r\nexport default LinkCloudEdit;\r\n","\"use strict\";\n\nconst defaultOptions = {\n  addPrefixToSelector: false,\n  // customized function for joining prefix and selector\n  prefixType: 'attribute',\n  // type of dir-prefix: attribute [dir] or class .dir,\n  prefix: 'dir',\n  // string to use as prefix (e.g. dir, my-special-dir)\n  onlyDirection: false,\n  // \"ltr\", \"rtl\": compile only one-direction version\n  fromRTL: false,\n  // assume styles are written in rtl initially\n  removeComments: true // remove comments after process them\n\n};\n/* eslint-disable no-console */\n\nconst validateOptions = (options = {}) => {\n  const addPrefixToSelector = options.addPrefixToSelector,\n        prefixType = options.prefixType,\n        prefix = options.prefix,\n        onlyDirection = options.onlyDirection,\n        removeComments = options.removeComments,\n        fromRTL = options.fromRTL;\n  const fixedOptions = {};\n\n  if (addPrefixToSelector && typeof addPrefixToSelector !== 'function') {\n    fixedOptions.addPrefixToSelector = defaultOptions.addPrefixToSelector;\n    console.warn('Incorrect addPrefixToSelector option. Must be a function');\n  }\n\n  if (onlyDirection && typeof onlyDirection !== 'string') {\n    fixedOptions.onlyDirection = defaultOptions.onlyDirection;\n    console.warn('Incorrect onlyDirection option. Allowed values: ltr, rtl');\n  }\n\n  if (prefixType && ['attribute', 'class'].indexOf(prefixType) < 0) {\n    fixedOptions.prefixType = defaultOptions.prefixType;\n    console.warn('Incorrect prefixType option. Allowed values: attribute, class');\n  }\n\n  if (prefixType && ['attribute', 'class'].indexOf(prefixType) < 0) {\n    fixedOptions.prefixType = defaultOptions.prefixType;\n    console.warn('Incorrect prefixType option. Allowed values: attribute, class');\n  }\n\n  if (typeof prefix === 'string' && prefix.length < 1) {\n    console.warn('Incorrect prefix: must not be empty');\n  }\n\n  if (removeComments && typeof removeComments !== 'boolean') {\n    fixedOptions.removeComments = defaultOptions.removeComments;\n    console.warn('Incorrect removeComments option. Must be a boolean');\n  }\n\n  if (fromRTL && typeof fromRTL !== 'boolean') {\n    fixedOptions.removeComments = defaultOptions.removeComments;\n    console.warn('Incorrect fromRTL option. Must be a boolean');\n  }\n\n  return Object.assign({}, defaultOptions, options, fixedOptions);\n};\n/* eslint-enable no-console */\n\n\nmodule.exports = {\n  validateOptions\n};"],"sourceRoot":""}