{"version":3,"sources":["views/pages/account-settings/Tabs.js","views/pages/account-settings/PasswordTabContent.js","views/pages/account-settings/index.js","constants/validate.js","../node_modules/reactstrap/es/TabContext.js","@core/components/extensions-header/index.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js","../node_modules/reactstrap/es/Alert.js","../node_modules/reactstrap/es/Nav.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","@core/components/breadcrumbs/index.js","@core/components/input-password-toggle/index.js"],"names":["Tabs","_ref","activeTab","toggleTab","_jsx","Nav","className","pills","vertical","children","NavItem","_jsxs","NavLink","active","onClick","Lock","size","FormattedMessage","id","PasswordTabContent","changePasswordOptions","password","required","newPassword","confirmPassword","_useForm","useForm","register","errors","handleSubmit","trigger","Form","onSubmit","values","isObjEmpty","Service","send","method","api","CHANGE_PASSWORD_STAFF","path","data","then","result","statusCode","toast","success","setTimeout","localStorage","clear","window","location","href","error","Row","Col","sm","FormGroup","Label","for","InputPasswordToggle","name","innerRef","classnames","message","autoFocus","Button","Ripple","type","color","AccountSettings","_useState","useState","_useState2","_slicedToArray","setActiveTab","_useState3","_useState4","setData","useEffect","axios","get","response","Fragment","ExtensionsHeader","title","md","tab","Card","CardBody","TabContent","TabPane","tabId","validateOptions","AboutOptions","about","maxLength","value","PartnerOptions","DocumentOptions","label","validate","REGEX","TITLE","test","sort_order","pattern","short_content","DiscountOptions","discount","min","time","parseInt","PriceOptions","price","Document_Link_Options","document_link","CategoryOptions","code","minLength","message_content","BranchOptions","code_branch","email","EMAIL","phone","addpress","EditBranchOptions","Document_course","EditCategoryOptions","EditDocumentOptions","author","EditQuizOptions","contenttext","answer","TermOptions","KindOptions","EditKindOptions","TranscriptOptions","score","EditTranscriptOptions","student_code","CertificateOptions","UserCertificateOptions","EditCertificateOptions","provider","position","ProductOptions","product_name","NAME2","alidate","SPACE","vat","max","number_trial","categoryId","service_price_local","PRICE","service_price_cloud","VersionOptions","version","infor","StaffOptions","last_name","NAME","first_name","username","USERNAME","EditStaffOptions","UserOptions","PASSWORD","trim","EditUserOptions","CityOptions","CountryOptions","phone_code","PHONE_CODE","StudentOptions","date","CloudOptions","TabContext","React","createContext","props","link","target","rel","subTitle","propTypes","tag","tagPropType","PropTypes","any","string","cssModule","object","_Component","_this","call","this","state","_inheritsLoose","getDerivedStateFromProps","nextProps","prevState","prototype","render","_this$props","Tag","attributes","omit","Object","keys","classes","mapToCssModules","classNames","createElement","Provider","activeTabId","_extends","Component","defaultProps","_objectWithoutPropertiesLoose","getClasses","Consumer","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","node","closeClassName","closeAriaLabel","fade","bool","isOpen","toggle","func","transition","shape","Fade","oneOfType","unmountOnExit","Alert","closeClasses","alertTransition","baseClass","timeout","in","role","tabs","horizontal","justified","fill","navbar","card","getVerticalClass","listTag","listClassName","Breadcrumb","ListTag","listClasses","BreadcrumbItem","undefined","BreadCrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","breadCrumbActive","Link","to","hideIcon","showIcon","visible","htmlFor","placeholder","iconSize","inputClassName","rest","_objectWithoutProperties","_excluded","inputVisibility","setInputVisibility","InputGroup","Input","InputGroupAddon","addonType","InputGroupText","Eye","EyeOff","renderIcon"],"mappings":"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","file":"static/js/47.a40436b4.chunk.js","sourcesContent":["import { Nav, NavItem, NavLink } from 'reactstrap'\r\nimport { User, Lock, Info, Link, Bell } from 'react-feather'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nconst Tabs = ({ activeTab, toggleTab }) => {\r\n  return (\r\n    <Nav className='nav-left' pills vertical>\r\n        <NavItem>\r\n        <NavLink active={activeTab === '2'} onClick={() => toggleTab('2')}>\r\n          <Lock size={18} className='mr-1' />\r\n          <span className='font-weight-bold'><FormattedMessage id = \"Change Password\"/></span>\r\n        </NavLink>\r\n      </NavItem>\r\n      {/* <NavItem>\r\n        <NavLink active={activeTab === '1'} onClick={() => toggleTab('1')}>\r\n          <User size={18} className='mr-1' />\r\n          <span className='font-weight-bold'>General</span>\r\n        </NavLink>\r\n      </NavItem>\r\n    \r\n      <NavItem>\r\n        <NavLink active={activeTab === '3'} onClick={() => toggleTab('3')}>\r\n          <Info size={18} className='mr-1' />\r\n          <span className='font-weight-bold'>Information</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink active={activeTab === '4'} onClick={() => toggleTab('4')}>\r\n          <Link size={18} className='mr-1' />\r\n          <span className='font-weight-bold'>Social</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink active={activeTab === '5'} onClick={() => toggleTab('5')}>\r\n          <Bell size={18} className='mr-1' />\r\n          <span className='font-weight-bold'>Notifications</span>\r\n        </NavLink>\r\n      </NavItem> */}\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default Tabs\r\n","import * as yup from \"yup\";\r\nimport classnames from \"classnames\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Form, FormGroup, Row, Col, Button, Label } from \"reactstrap\";\r\nimport InputPasswordToggle from \"@components/input-password-toggle\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { toast, Slide } from \"react-toastify\";\r\nimport api from \"../../../constants/api\";\r\nimport Service from \"./../../../services/request\";\r\nimport { isObjEmpty } from \"@utils\";\r\nimport validateOptions from \"../../../constants/validate\";\r\n\r\nconst PasswordTabContent = () => {\r\n  const changePasswordOptions = {\r\n    \r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      \r\n    },\r\n    newPassword: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      \r\n    },\r\n    confirmPassword: {\r\n      required: (\r\n        <FormattedMessage id=\"The confirm password field is required\" />\r\n        \r\n      ),\r\n     \r\n    },\r\n  };\r\n  const { register, errors, handleSubmit, trigger } = useForm();\r\n  const onSubmit = (values) =>{\r\n    if (values?.newPassword!=values?.confirmPassword) {\r\n      toast.error(<FormattedMessage id={\"confirm password does not match\"}/>)\r\n      return\r\n    }\r\n    if (isObjEmpty(errors)) {\r\n      Service.send({ method: api.CHANGE_PASSWORD_STAFF.method, path: api.CHANGE_PASSWORD_STAFF.path, data:{\r\n        password:values.password,\r\n        newPassword:values.confirmPassword\r\n      } }).then(result => {\r\n        if (result) {\r\n          const { statusCode, data } = result\r\n          if (statusCode === 200) {\r\n            toast.success(\r\n              <FormattedMessage id=\"Change password successfully\"/>\r\n            )\r\n            setTimeout(() => {\r\n              localStorage.clear()\r\n              window.location.href=\"/\"\r\n            }, 2000);\r\n          }\r\n        }\r\n      })\r\n \r\n \r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Form onSubmit={handleSubmit(onSubmit)}>\r\n      <Row>\r\n        <Col sm=\"6\">\r\n          <FormGroup>\r\n            <Label className=\"form-label\" for=\"password\">\r\n              <FormattedMessage id=\"Old Password\" />\r\n            </Label>\r\n            <InputPasswordToggle\r\n              id=\"password\"\r\n              name=\"password\"\r\n              innerRef={register(changePasswordOptions.password)}\r\n              className={classnames({\r\n                \"is-invalid\": errors[\"password\"],\r\n              })}\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.password && errors.password.message}\r\n            </small>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm=\"6\">\r\n          <FormGroup>\r\n            <Label className=\"form-label\" for=\"newPassword\">\r\n              <FormattedMessage id=\"New Password\" />\r\n            </Label>\r\n            <InputPasswordToggle\r\n              autoFocus\r\n              id=\"newPassword\"\r\n              // label='New Password'\r\n              // htmlFor='new-password'\r\n              name=\"newPassword\"\r\n              innerRef={register(changePasswordOptions.newPassword)}\r\n              className={classnames({\r\n                \"is-invalid\": errors[\"newPassword\"],\r\n              })}\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.newPassword && errors.newPassword.message}\r\n            </small>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm=\"6\">\r\n          <FormGroup>\r\n            <Label className=\"form-label\" for=\"confirmPassword\">\r\n              <FormattedMessage id=\"Retype New Password\" />\r\n            </Label>\r\n            <InputPasswordToggle\r\n              id=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              innerRef={register(changePasswordOptions.confirmPassword)}\r\n              className={classnames({\r\n                \"is-invalid\": errors[\"confirmPassword\"],\r\n              })}\r\n            />\r\n            <small className=\"text-danger\">\r\n              {errors?.confirmPassword && errors.confirmPassword.message}\r\n            </small>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col className=\"mt-1\" sm=\"12\">\r\n          <Button.Ripple type=\"submit\" className=\"mr-1\" color=\"primary\">\r\n            <FormattedMessage id =\"update\"/>\r\n          </Button.Ripple>\r\n          {/* <Button.Ripple color=\"secondary\" outline>\r\n            <FormattedMessage id = \"Cancel\"/>\r\n          </Button.Ripple> */}\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PasswordTabContent;\r\n","import { Fragment, useState, useEffect } from 'react'\r\nimport Tabs from './Tabs'\r\nimport axios from 'axios'\r\nimport InfoTabContent from './InfoTabContent'\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\nimport SocialTabContent from './SocialTabContent'\r\nimport GeneralTabContent from './GeneralTabContent'\r\nimport PasswordTabContent from './PasswordTabContent'\r\nimport NotificationsTabContent from './NotificationsTabContent'\r\nimport { Row, Col, TabContent, TabPane, Card, CardBody } from 'reactstrap'\r\nimport ExtensionsHeader from \"@components/extensions-header\";\r\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\r\nimport '@styles/react/pages/page-account-settings.scss'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nconst AccountSettings = () => {\r\n  const [activeTab, setActiveTab] = useState('2'),\r\n    [data, setData] = useState(null)\r\n\r\n  const toggleTab = tab => {\r\n    setActiveTab(tab)\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('/account-setting/data').then(response => setData(response.data))\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <ExtensionsHeader title={<FormattedMessage id=\"Account Setting\" />} />\r\n      {data !== null ? (\r\n        <Row>\r\n          <Col className='mb-2 mb-md-0' md='3'>\r\n            <Tabs activeTab={activeTab} toggleTab={toggleTab} />\r\n          </Col>\r\n          <Col md='9'>\r\n            <Card>\r\n              <CardBody>\r\n\r\n                <TabContent activeTab={activeTab}>\r\n                <TabPane tabId='2'>\r\n                    <PasswordTabContent />\r\n                  </TabPane>\r\n                  {/* <TabPane tabId='1'>\r\n                    <GeneralTabContent data={data.general} />\r\n                  </TabPane>\r\n                 \r\n                  <TabPane tabId='3'>\r\n                    <InfoTabContent data={data.info} />\r\n                  </TabPane> */}\r\n                  {/* <TabPane tabId='4'>\r\n                    <SocialTabContent data={data.social} />\r\n                  </TabPane>\r\n                  <TabPane tabId='5'>\r\n                    <NotificationsTabContent data={data.notification} />\r\n                  </TabPane> */}\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AccountSettings\r\n","import { FormattedMessage } from \"react-intl\";\r\nimport REGEX from \"./regex\";\r\nimport { number } from \"yup\";\r\nconst validateOptions = {\r\n  AboutOptions: {\r\n    about: {\r\n      // required: <FormattedMessage id=\"The about title field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"About title up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  PartnerOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DocumentOptions: {\r\n    label: {\r\n      required: <FormattedMessage id=\"the label field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Label up to 255 characters\" />,\r\n      },\r\n    },\r\n\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n\r\n    short_content: {\r\n      required: <FormattedMessage id=\"the short content field is required\" />,\r\n      validate: (value) => !REGEX.TITLE.test(value),\r\n      maxLength: {\r\n        value: 255,\r\n\r\n        message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  DiscountOptions: {\r\n    discount: {\r\n      required: <FormattedMessage id=\"the discount field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"The discount is not suitable\" />,\r\n      },\r\n    },\r\n    time: {\r\n      required: <FormattedMessage id=\"The time price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  PriceOptions: {\r\n    price: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n    },\r\n  },\r\n  Document_Link_Options: {\r\n    document_link: {\r\n      required: (\r\n        <FormattedMessage id=\"The time document link field is required\" />\r\n      ),\r\n      min: {\r\n        value: (value) => parseInt(value),\r\n        message: <FormattedMessage id=\"The extended time is not suitable\" />,\r\n      },\r\n    },\r\n  },\r\n  CategoryOptions: {\r\n    code: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n\r\n    message_content: {\r\n      maxLength: {\r\n        value: 30,\r\n        message: <FormattedMessage id=\"Category must be 30 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  BranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n    // short_content: {\r\n    //   required: <FormattedMessage id=\"the short content field is required\" />,\r\n    //   validate: (value) => !REGEX.TITLE.test(value),\r\n    //   maxLength: {\r\n    //     value: 255,\r\n\r\n    //     message: <FormattedMessage id=\"Short content up to 255 characters\" />,\r\n    //   },\r\n    // },\r\n    // content: {\r\n    //   required: <FormattedMessage id=\"the content field is required\" />,\r\n    //   maxLength: {\r\n    //     value: 3000,\r\n    //     message: <FormattedMessage id=\"Content up to 3000 characters\" />,\r\n    //   },\r\n    // },\r\n  },\r\n\r\n  EditBranchOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The branch name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Branch name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    code_branch: {\r\n      required: <FormattedMessage id=\"The branch code field is required\" />,\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    addpress: {\r\n      required: <FormattedMessage id=\"The address field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Address must be at least 3 characters\" />\r\n        ),\r\n      },\r\n    },\r\n  },\r\n\r\n  Document_course: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditCategoryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n      // pattern: {\r\n      //   value: REGEX.NAME2,\r\n      //   message: <FormattedMessage id=\"Invalid category name\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditDocumentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The category name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Category name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Category must be 70 characters max\" />,\r\n      },\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    author: {\r\n      required: <FormattedMessage id=\"The Author name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Author name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Author must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  EditQuizOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    contenttext: {\r\n      required: <FormattedMessage id=\"The content field is required\" />,\r\n    },\r\n    answer: {\r\n      required: <FormattedMessage id=\"The answer field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  TermOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n    },\r\n    sort_order: {\r\n      required: <FormattedMessage id=\"The sort order field is required\" />,\r\n      pattern: {\r\n        value: /^\\d+$/,\r\n        message: <FormattedMessage id=\"Number Input\" />,\r\n      },\r\n    },\r\n    //Học phần\r\n  },\r\n  KindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  EditKindOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The solution name field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Solution name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Solution must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n  TranscriptOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  EditTranscriptOptions: {\r\n    student_code: {\r\n      required: <FormattedMessage id=\"The student code field is required\" />,\r\n    },\r\n    name: {\r\n      required: <FormattedMessage id=\"The student name field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: (\r\n          <FormattedMessage id=\"Student name must be 70 characters max\" />\r\n        ),\r\n      },\r\n    },\r\n    score: {\r\n      required: <FormattedMessage id=\"The score field is required\" />,\r\n\r\n      // minLength: {\r\n      //   value: 3,\r\n\r\n      //   message: (\r\n      //     <FormattedMessage id=\"Score must be at least 3 characters\" />\r\n      //   ),\r\n      // },\r\n      // maxLength: {\r\n      //   value: 70,\r\n      //   message: <FormattedMessage id=\"Score must be 70 characters max\" />,\r\n      // },\r\n    },\r\n  },\r\n  CertificateOptions: {},\r\n  UserCertificateOptions: {},\r\n\r\n  EditCertificateOptions: {\r\n    title: {\r\n      required: <FormattedMessage id=\"The title field is required\" />,\r\n\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"The title must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"The title must be 70 characters max\" />,\r\n      },\r\n    },\r\n    provider: {\r\n      required: <FormattedMessage id=\"Provider field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Provider must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Provider must be 70 characters max\" />,\r\n      },\r\n    },\r\n    position: {\r\n      required: <FormattedMessage id=\"Position field is required\" />,\r\n      minLength: {\r\n        value: 3,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Position must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 70,\r\n        message: <FormattedMessage id=\"Position must be 70 characters max\" />,\r\n      },\r\n    },\r\n  },\r\n\r\n  ProductOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The product's name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Product name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Product name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    vat: {\r\n      required: <FormattedMessage id=\"The VAT field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: <FormattedMessage id=\"VAT more than 0\" />,\r\n      },\r\n      max: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"VAT less than 100\" />,\r\n      },\r\n    },\r\n    number_trial: {\r\n      // required: <FormattedMessage id=\"The Number day field is required\" />,\r\n      min: {\r\n        value: 0,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be greater than or equal to 0\" />\r\n        ),\r\n      },\r\n      max: {\r\n        value: 30,\r\n        message: (\r\n          <FormattedMessage id=\"Number day must be less than or equal to 30\" />\r\n        ),\r\n      },\r\n      validate: (value) =>\r\n        value >= 0 || (\r\n          <FormattedMessage id=\"Number day must be a positive number\" />\r\n        ),\r\n    },\r\n    categoryId: {\r\n      required: <FormattedMessage id=\"The category field is required\" />,\r\n      min: {\r\n        value: 0,\r\n      },\r\n    },\r\n    service_price_local: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n\r\n    service_price_cloud: {\r\n      required: <FormattedMessage id=\"The price field is required\" />,\r\n      validate: (value) => !REGEX.PRICE.test(value),\r\n      pattern: {\r\n        value: /^0*/g,\r\n        message: <FormattedMessage id=\"Invalid price\" />,\r\n      },\r\n      maxLength: {\r\n        value: 255,\r\n      },\r\n    },\r\n  },\r\n  VersionOptions: {\r\n    version: {\r\n      required: <FormattedMessage id=\"The version field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Version up to 255 characters\" />,\r\n      },\r\n    },\r\n    infor: {\r\n      maxLength: {\r\n        value: 500,\r\n        message: <FormattedMessage id=\"Information up to 500 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  StaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditStaffOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  UserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|\\\\d)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  EditUserOptions: {\r\n    last_name: {\r\n      required: <FormattedMessage id=\"The last name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Last name up to 25 characters\" />,\r\n      },\r\n    },\r\n    first_name: {\r\n      required: <FormattedMessage id=\"The first name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"First name up to 25 characters\" />,\r\n      },\r\n    },\r\n    username: {\r\n      required: <FormattedMessage id=\"The username field is required\" />,\r\n      minLength: {\r\n        value: 6,\r\n\r\n        message: (\r\n          <FormattedMessage id=\"Username must be at least 6 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: <FormattedMessage id=\"username must be 50 characters max\" />,\r\n      },\r\n      pattern: {\r\n        value: REGEX.USERNAME,\r\n        message: <FormattedMessage id=\"Invalid username\" />,\r\n      },\r\n    },\r\n    email: {\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    password: {\r\n      required: <FormattedMessage id=\"The password field is required\" />,\r\n      validate: (value) => !REGEX.PASSWORD.test(value?.trim()),\r\n      minLength: {\r\n        value: 8,\r\n        message: <FormattedMessage id=\"Password minimum 8 characters\" />,\r\n      },\r\n    },\r\n\r\n    phone: {\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n  },\r\n  CityOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The city name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The city code field is required\" />,\r\n      alidate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n  },\r\n  CountryOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The country name field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    code: {\r\n      required: <FormattedMessage id=\"The country code field is required\" />,\r\n      validate: (value) => !REGEX.NAME.test(value),\r\n    },\r\n    phone_code: {\r\n      required: <FormattedMessage id=\"The phone code field is required\" />,\r\n      validate: (value) => REGEX.PHONE_CODE.test(value),\r\n    },\r\n  },\r\n  StudentOptions: {\r\n    name: {\r\n      required: <FormattedMessage id=\"The name field is required\" />,\r\n      maxLength: {\r\n        value: 255,\r\n        message: <FormattedMessage id=\"Partner name up to 255 characters\" />,\r\n      },\r\n    },\r\n    email: {\r\n      required: <FormattedMessage id=\"The email field is required\" />,\r\n      validate: (value) => {\r\n        if (value != \"\") {\r\n          return REGEX.EMAIL.test(value);\r\n        }\r\n      },\r\n\r\n      maxLength: {\r\n        value: 125,\r\n        message: <FormattedMessage id=\"Email up to 125 characters\" />,\r\n      },\r\n    },\r\n    phone: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n      pattern: {\r\n        value:\r\n          /^(0|84)(2(0[3-9]|1[0-6|8|9]|2[0-2|5-9]|3[2-9]|4[0-9]|5[1|2|4-9]|6[0-3|9]|7[0-7]|8[0-9]|9[0-4|6|7|9])|3[2-9]|5[5|6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])([0-9]{7})$/i,\r\n        message: <FormattedMessage id=\"Invalid phone number\" />,\r\n      },\r\n      maxLength: {\r\n        value: 25,\r\n        message: <FormattedMessage id=\"Phone number up to 25 characters\" />,\r\n      },\r\n    },\r\n    date: {\r\n      required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    },\r\n    // gender: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // courseId: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n    // formality: {\r\n    //   required: <FormattedMessage id=\"The phone number field is required\" />,\r\n    // },\r\n  },\r\n\r\n  CloudOptions: {\r\n    product_name: {\r\n      required: <FormattedMessage id=\"The cloud name field is required\" />,\r\n      validate: (value) => !REGEX.NAME2.test(value),\r\n      minLength: {\r\n        value: 3,\r\n        message: (\r\n          <FormattedMessage id=\"Cloud name must be at least 3 characters\" />\r\n        ),\r\n      },\r\n      maxLength: {\r\n        value: 100,\r\n        message: <FormattedMessage id=\"Cloud name up to 100 characters\" />,\r\n      },\r\n      alidate: (value) => !REGEX.SPACE.test(value),\r\n    },\r\n    // vat: {\r\n    //   required: <FormattedMessage id=\"The VAT field is required\" />,\r\n    //   min: {\r\n    //     value: 0,\r\n    //     message: <FormattedMessage id=\"VAT more than 0\" />,\r\n    //   },\r\n    //   max: {\r\n    //     value: 100,\r\n    //     message: <FormattedMessage id=\"VAT less than 100\" />,\r\n    //   },\r\n    // },\r\n  },\r\n};\r\nexport default validateOptions;\r\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","// ** React Imports\r\nimport Proptypes from 'prop-types'\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nconst ExtensionsHeader = props => {\r\n  return (\r\n    <Row className='mb-2'>\r\n      <Col sm='12' className='ml-50'>\r\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\r\n          {props.title}\r\n        </p>\r\n        {props.link ? (\r\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\r\n            {props.subTitle}\r\n          </a>\r\n        ) : (\r\n          <p className='text-primary'>{props.subTitle}</p>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default ExtensionsHeader\r\n\r\n// ** PropTypes\r\nExtensionsHeader.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  subTitle: Proptypes.string.isRequired,\r\n  link: Proptypes.string\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabId\", \"tag\"]);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread(_objectSpread({}, Fade.defaultProps), {}, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread(_objectSpread(_objectSpread({}, Fade.defaultProps), transition), {}, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return /*#__PURE__*/React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), /*#__PURE__*/React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  UncontrolledButtonDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle\r\n} from 'reactstrap'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'><FormattedMessage id =\"Home\"/></Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\r\n        <div className='form-group breadcrum-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' right>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <CheckSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='mr-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='mr-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Eye, EyeOff } from 'react-feather'\r\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\r\n\r\nconst InputPasswordToggle = props => {\r\n  // ** Props\r\n  const {\r\n    label,\r\n    hideIcon,\r\n    showIcon,\r\n    visible,\r\n    className,\r\n    htmlFor,\r\n    placeholder,\r\n    iconSize,\r\n    inputClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** State\r\nconst [inputVisibility, setInputVisibility] = useState(visible)\r\n\r\n  // ** Renders Icon Based On Visibility\r\n  const renderIcon = () => {\r\n    const size = iconSize ? iconSize : 14\r\n\r\n    if (inputVisibility === false) {\r\n      return hideIcon ? hideIcon : <Eye size={size} />\r\n    } else {\r\n      return showIcon ? showIcon : <EyeOff size={size} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\r\n      <InputGroup\r\n        className={classnames({\r\n          [className]: className\r\n        })}\r\n      >\r\n        <Input\r\n          type={inputVisibility === false ? 'password' : 'text'}\r\n          placeholder={placeholder ? placeholder : '············'}\r\n          className={classnames({\r\n            [inputClassName]: inputClassName\r\n          })}\r\n          /*eslint-disable */\r\n          {...(label && htmlFor\r\n            ? {\r\n                id: htmlFor\r\n              }\r\n            : {})}\r\n          {...rest}\r\n          /*eslint-enable */\r\n        />\r\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\r\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputPasswordToggle\r\n\r\n// ** PropTypes\r\nInputPasswordToggle.propTypes = {\r\n  hideIcon: PropTypes.node,\r\n  showIcon: PropTypes.node,\r\n  visible: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  inputClassName: PropTypes.string,\r\n  label(props, propName, componentName) {\r\n    // ** If label is defined and htmlFor is undefined throw error\r\n    if (props[propName] && props['htmlFor'] === 'undefined') {\r\n      throw new Error('htmlFor prop is required when label prop is present')\r\n    }\r\n  },\r\n  htmlFor(props, propName, componentName) {\r\n    // ** If htmlFor is defined and label is undefined throw error\r\n    if (props[propName] && props['label'] === 'undefined') {\r\n      throw new Error('label prop is required when htmlFor prop is present')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nInputPasswordToggle.defaultProps = {\r\n  visible: false\r\n}\r\n"],"sourceRoot":""}